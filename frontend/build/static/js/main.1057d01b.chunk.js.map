{"version":3,"sources":["components/BaseURL.js","components/Navbar.js","Actions.js","NodeReducer.js","NodeContext.js","components/StreetNode.js","components/NodeItem.js","components/TimeSelecter.js","components/Logs/Pagination.js","components/Logs/DisplayLogs.js","components/Nodes.js","components/IntensitySelecter.js","components/Scheduler.js","App.js","reportWebVitals.js","index.js"],"names":["URL","Navbar","fixed","useState","data","setData","useEffect","axios","get","url","then","res","alerts","console","log","interval","setInterval","clearInterval","className","href","id","icon","header","title","option","text","onClick","array","Array","map","record","push","put","params","id_array","to","SET_NODES","SET_INST_VALUE","SET_IO","SET_GLOBAL_TOGGLE","SET_GLOBAL_DIM","SET_GLOBAL","SET_GLOBAL_TICK","SET_TAB","node_reducer","state","action","type","nodes","payload","total","length","allNodes","obj","find","node","current","curr","temp","global","isGlobal","status","nodeID","IOLine","value","relay","globalStatus","dim","feature","globalValue","tab","initialState","localStorage","getItem","JSON","parse","tabVal","NodeContext","React","createContext","NodeProvider","children","useReducer","reducer","dispatch","setItem","stringify","Provider","setNodes","setInstValues","setIO","setGlobalToggle","setGlobalDim","setGlobalTick","changeTab","useNodeContext","useContext","useStyles","makeStyles","root","width","StreetNode","useParams","item","graphData","setGraphData","currError","setCurrError","tempError","setTempError","open","setOpen","history","useHistory","insterval","catch","error","Typography","Switch","checked","disabled","color","onChange","inputProps","Slider","size","step","defaultValue","valueLabelDisplay","marks","label","min","max","event","newValue","classnames","height","chartType","loader","options","hAxis","maxValue","minValue","viewWindow","vAxis","colors","legend","position","explorer","axis","aggregationTarget","animation","startup","duration","easing","rootProps","Button","variant","Dialog","onClose","DialogTitle","DialogContent","DialogContentText","DialogActions","autoFocus","NodeItem","ticked","is_active","Grid","container","xs","operation","TimeSelecter","val","idx","sch","setSch","from","startValue","endValue","LocalizationProvider","dateAdapter","AdapterDateFns","TimePicker","slice","toLocaleString","renderInput","TextField","FormControl","sx","m","minWidth","InputLabel","Select","labelId","i","e","target","MenuItem","usePagination","itemsPerPage","currentPage","setCurrentPage","maxPage","Math","ceil","next","prev","jump","page","pageNumber","currentData","begin","end","DisplayLogs","setPage","loading","setLoading","count","_DATA","logs","Pagination","p","ml","pl","mt","Stack","spacing","Skeleton","date","Date","timestamp","day","month","year","getFullYear","time","hour","minute","getMinutes","Alert","severity","success","fontSize","fontWeight","AlertTitle","message","Nodes","loadingOnOff","setLoadingOnOff","loadingTelemetry","setLoadingTelemetry","syncloading","setSyncloading","applyloading","setApplyloading","setTab","sunrise","sunset","sun","setSun","autoSchedule","setAutoSchedule","pointerEvent","setPointerEvent","telemetryStatus","setTelemetryStatus","scheduleStatus","setScheduleStatus","displaySuccessTab","setDisplaySuccessTab","retryAlert","setRetryAlert","retryNodes","setRetryNodes","displayAlertTab","setDisplayAlertTab","failedNodes","setFailedNodes","buttonSx","bgcolor","green","intensity","schedule","TabPanel","props","index","other","role","hidden","Box","a11yProps","justifyContent","alignItems","class","CircularProgress","Fade","in","timeout","enter","exit","IconButton","borderBottom","borderColor","Tabs","Tab","s","top","left","marginTop","marginLeft","post","Checkbox","IntensitySelecter","setIntensity","Scheduler","isToggled","setIsToggled","setCount","App","path","exact","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1057d01b.chunk.js","sourcesContent":["export default URL = \"http://0.0.0.0:8000/apis/\";\n","import { React, useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport url from \"./BaseURL\";\nimport { Link } from \"react-router-dom\";\nimport EmojiObjectsIcon from \"@mui/icons-material/EmojiObjects\";\nimport Notifications from \"react-notifications-menu\";\n// import Alert from '@mui/material/Alert';\n// import AlertTitle from '@mui/material/AlertTitle';\nfunction Navbar({ fixed }) {\n  // const DEFAULT_NOTIFICATION = {\n  //   image:\n  //     \"https://t3.ftcdn.net/jpg/01/34/49/84/360_F_134498430_vn2ciA0xKdMnxKIl1oAv4cY6qkybEBnz.webp\",\n  //   message: \"Temperature Exceeding-Check it out!\",\n  //   detailPage: \"/nodes\",\n  //   receivedTime: \"3h ago\",\n  // };\n\n  const [data, setData] = useState([]);\n  \n  useEffect(() => {\n    axios.get(url + \"alerts/\").then((res) => {\n      setData(res.data.alerts);\n      console.log(res.data.alerts);\n    })\n    const interval = setInterval(() => {\n      axios.get(url + \"alerts/\").then((res) => {\n        setData(res.data.alerts);\n        console.log(res.data.alerts);\n      })\n    },300000);\n    return () => clearInterval(interval);\n\n  },[])\n\n\n  // const [navbarOpen, setNavbarOpen] = React.useState(false);\n  return (\n    <>\n      <nav className=\"sticky top-0 z-99 flex flex-wrap items-center px-2 py-1 bg-gray-700 mb-3\">\n        <div className=\"container px-4 mx-auto flex flex-wrap items-center\">\n          <div className=\"w-full relative flex justify-between lg:w-auto lg:static lg:block lg:justify-start\">\n            <a\n              className=\"justify-start text-sm font-bold leading-relaxed inline-block whitespace-nowrap uppercase text-white\"\n              href=\"#pablo\"\n            >\n              <EmojiObjectsIcon className=\"flex items-center text-xs\" />\n              <span className=\"ml-2\">Light It Up!</span>\n            </a>\n            {/* <button\n              className=\"text-white cursor-pointer text-xl leading-none px-3 py-1 border border-solid border-transparent rounded bg-transparent block lg:hidden outline-none focus:outline-none\"\n              type=\"button\"\n              onClick={() => setNavbarOpen(!navbarOpen)}\n            >\n              <i className=\"fas fa-bars\"></i>\n            </button> */}\n          </div>\n          <div\n            className={\"lg:flex flex-grow items-center\"}\n            id=\"example-navbar-danger\"\n          >\n            <ul className=\"flex flex-col lg:flex-row list-none lg:ml-auto\">\n              <li className=\"nav-item\">\n                <div className=\"px-3 py-2 flex items-center text-sm uppercase font-bold leading-snug text-white hover:opacity-75\">\n                  <Notifications\n                    icon=\"https://assets.ifttt.com/images/channels/651849913/icons/monochrome_large.png\"\n                    data={data}\n                    // markAsRead={data => console.log(data)}\n                    header={{\n                      title: \"Alerts\",\n                      option: { text: \"Mark as Read All\", onClick:( () => {\n                        let array = new Array();\n                        data.map((record) => {\n                          array.push(record.id)\n                        })\n                        axios.put(url + 'alerts/',{\n                          params : {id_array : array}\n                        })\n                        .then((res) => {\n                          setData([]);\n                        })\n                      })}\n                    }}\n                  />\n                </div>\n              </li>\n\n              <li className=\"nav-item\">\n                <Link\n                  to=\"/nodes\"\n                  className=\"px-3 py-2 flex items-center text-sm uppercase font-bold leading-snug text-white hover:opacity-75\"\n                  href=\"#pablo\"\n                >\n                  Area Name |\n                </Link>\n              </li>\n              <li className=\"nav-item\">\n                <Link\n                  className=\"px-3 py-2 flex items-center text-sm uppercase font-bold leading-snug text-white hover:opacity-75\"\n                  href=\"#pablo\"\n                >\n                  LOGOUT\n                </Link>\n              </li>\n            </ul>\n          </div>\n        </div>\n      </nav>\n    </>\n  );\n}\n\nexport default Navbar;\n","export const SET_NODES = \"SET_NODES\";\nexport const SET_INST_VALUE = \"SET_INST_VALUE\";\nexport const SET_IO = \"SET_IO\";\nexport const SET_GLOBAL_TOGGLE = \"SET_GLOBAL_TOGGLE\";\nexport const SET_GLOBAL_DIM = \"SET_GLOBAL_DIM\";\nexport const SET_GLOBAL = \"SET_GLOBAL\";\nexport const SET_GLOBAL_TICK = \"SET_GLOBAL_TICK\";\nexport const SET_TAB = \"SET_TAB\";\n","import {\n  SET_NODES,\n  SET_INST_VALUE,\n  SET_IO,\n  SET_GLOBAL_TOGGLE,\n  SET_GLOBAL_DIM,\n  SET_GLOBAL,\n  SET_GLOBAL_TICK,\n  SET_TAB,\n} from \"./Actions\";\n\nconst node_reducer = (state, action) => {\n  if (action.type === SET_NODES) {\n    return {\n      ...state,\n      nodes: action.payload.nodes,\n      total: action.payload.nodes.length,\n    };\n  }\n  if (action.type === SET_INST_VALUE) {\n    let allNodes = [...state.nodes];\n\n    let obj = allNodes.find((node) => {\n      return node.id === action.payload.id;\n    });\n    obj.current = action.payload.curr;\n    obj.temp = action.payload.temp;\n    return { ...state, nodes: allNodes, total: allNodes.length };\n  }\n\n  if (action.type === SET_GLOBAL_TICK) {\n    return {\n      ...state,\n      global: { ...state.global, isGlobal: action.payload.status },\n    };\n  }\n  if (action.type === SET_IO) {\n    let allNodes = [...state.nodes];\n    if (state.total > 0) {\n      let obj = allNodes.find((node) => {\n        return node.id === action.payload.nodeID;\n      });\n\n      obj[action.payload.IOLine] = action.payload.value;\n    }\n    return { ...state, nodes: allNodes, total: allNodes.length };\n  }\n  if (action.type === SET_GLOBAL_TOGGLE) {\n    let allNodes = state.nodes;\n    allNodes.map((node) => {\n      node.relay = action.payload.value;\n    });\n    return {\n      ...state,\n      nodes: allNodes,\n      total: allNodes.length,\n      global: { ...state.global, globalStatus: action.payload.value },\n    };\n  }\n  if (action.type === SET_GLOBAL_DIM) {\n    let allNodes = state.nodes;\n    allNodes.map((node) => {\n      node.dim = action.payload.value;\n    });\n    return { ...state, nodes: allNodes, total: allNodes.length };\n  }\n  if (action.type === SET_GLOBAL) {\n    if (action.payload.feature === \"toggle\")\n      return {\n        ...state,\n        global: { ...state.global, isGlobal: action.payload.value },\n      };\n    if (action.payload.feature === \"dim\")\n      return {\n        ...state,\n        global: { ...state.global, globalValue: action.payload.value },\n      };\n  }\n  if (action.type === SET_TAB) {\n    return {\n      ...state,\n      tab: action.payload,\n    };\n  }\n};\n\nexport default node_reducer;\n","import React, { useContext, useReducer, useEffect } from \"react\";\nimport reducer from \"./NodeReducer\";\nimport {\n  SET_NODES,\n  SET_INST_VALUE,\n  SET_IO,\n  SET_GLOBAL_TOGGLE,\n  SET_GLOBAL_DIM,\n  SET_GLOBAL,\n  SET_GLOBAL_TICK,\n  SET_TAB\n} from \"./Actions\";\n\nconst getLocalStorage = () => {\n  let global = localStorage.getItem(\"global\");\n  if (global) return JSON.parse(localStorage.getItem(\"global\"));\n  else return { isGlobal: true, globalValue: 50, globalStatus: true };\n};\n\nconst getTab = () => {\n  let tab = localStorage.getItem(\"tabVal\");\n  if (tab) return localStorage.getItem(\"tabVal\");\n  else return 0;\n};\n\nconst initialState = {\n  nodes: [],\n  total: 0,\n  global: getLocalStorage(),\n  tabVal: getTab(),\n};\n\nconst NodeContext = React.createContext();\n\nexport const NodeProvider = ({ children }) => {\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  const setNodes = (nodes, total) => {\n    dispatch({ type: SET_NODES, payload: { nodes, total } });\n  };\n\n  const setInstValues = (id, curr, temp) => {\n    dispatch({\n      type: SET_INST_VALUE,\n      payload: { id, curr, temp },\n    });\n  };\n\n  const setIO = (nodeID, IOLine, value) => {\n    dispatch({\n      type: SET_IO,\n      payload: { nodeID, IOLine, value },\n    });\n  };\n\n  const setGlobalToggle = (value) => {\n    dispatch({\n      type: SET_GLOBAL_TOGGLE,\n      payload: { value },\n    });\n  };\n\n  const setGlobalDim = (value) => {\n    dispatch({\n      type: SET_GLOBAL_DIM,\n      payload: { value },\n    });\n    dispatch({\n      type: SET_GLOBAL,\n      payload: { value, feature: \"dim\" },\n    });\n  };\n\n  const setGlobalTick = (status) => {\n    dispatch({\n      type: SET_GLOBAL_TICK,\n      payload: { status },\n    });\n  };\n\n  const changeTab = (tab) => {\n    dispatch({\n      type: SET_TAB,\n      payload: { tab },\n    });\n  };\n\n  useEffect(() => {\n    localStorage.setItem(\"global\", JSON.stringify(state.global));\n  }, [state.global]);\n\n  useEffect(() => {\n    localStorage.setItem(\"tab\", state.tabVal);\n  }, [state.tabVal]);\n\n  return (\n    <NodeContext.Provider\n      value={{\n        ...state,\n        setNodes,\n        setInstValues,\n        setIO,\n        setGlobalToggle,\n        setGlobalDim,\n        setGlobalTick,\n        changeTab\n      }}\n    >\n      {children}\n    </NodeContext.Provider>\n  );\n};\n// make sure use\nexport const useNodeContext = () => {\n  return useContext(NodeContext);\n};\n","import React, { useState, useEffect } from \"react\";\nimport { useParams, useHistory } from \"react-router-dom\";\nimport { Typography, Slider, Switch, Button, Dialog,DialogActions,DialogContent,DialogContentText,DialogTitle } from \"@mui/material\";\nimport { makeStyles } from \"@mui/styles\";\nimport FlashOnIcon from \"@mui/icons-material/FlashOn\";\nimport DeviceThermostatIcon from \"@mui/icons-material/DeviceThermostat\";\nimport Chart from \"react-google-charts\";\nimport axios from \"axios\";\nimport url from \"./BaseURL\";\nimport { Link } from \"react-router-dom\";\nimport { useNodeContext } from \"../NodeContext\";\nimport ArrowBackIosNewIcon from \"@mui/icons-material/ArrowBackIosNew\";\nimport \"./nodes.css\";\nimport classnames from \"classnames\";\n\nconst useStyles = makeStyles({\n  root: {\n    width: 600,\n  },\n});\n\nconst StreetNode = () => {\n  const { id } = useParams();\n  const { nodes, global, setIO, setInstValues } = useNodeContext();\n\n  const item = nodes.find((node) => node.id === id);\n  const classes = useStyles();\n\n  const [graphData, setGraphData] = useState({ curr: [], temp: [] });\n  const [currError, setCurrError] = useState(false);\n  const [tempError, setTempError] = useState(false);\n  const [open, setOpen] = useState(false);\n\n  const history = useHistory();\n\n  useEffect(() => {\n    const insterval = setInterval(() => {\n      setCurrError(false);\n      setTempError(false);\n      axios\n        .get(url + \"graphValues/\", {\n          params: { id: id },\n        })\n        .then((res) => {\n          setGraphData(res.data);\n          setInstValues(id, res.data.curr[10][1], res.data.temp[10][1]);\n          console.log(res.data);\n        })\n        .catch((error) => {\n          setCurrError(true);\n          setTempError(true);\n        });\n    }, 15000);\n    return () => clearInterval(insterval);\n  }, []);\n\n  const marks = [\n    {\n      value: 25,\n      label: \"25%\",\n    },\n    {\n      value: 50,\n      label: \"50%\",\n    },\n    {\n      value: 75,\n      label: \"75%\",\n    },\n    {\n      value: 100,\n      label: \"100%\",\n    },\n  ];\n\n  return (\n    <div className=\"lg:container md:mx-auto mt-8 z-0\">\n      <div className=\"flex grid grid-flow-col grid-cols-6 gap-4 items-center m-8 mx-10 p-4 bg-gray-200 rounded-md  \">\n        <Link to=\"/\">\n          <ArrowBackIosNewIcon />\n        </Link>\n        <div className=\"flex col-span-5 items-center justify-start text-2xl text-primary font-bold \">\n          {id}\n        </div>\n        <div className=\"flex col-span-1 items-center justify-end\">\n          <Typography className=\"text-lg sm:text-sm text-primary font-bold\">\n            On/Off&nbsp; &nbsp;{\" \"}\n          </Typography>\n          <Switch\n            checked={item.relay}\n            disabled={global.isGlobal}\n            color=\"success\"\n            onChange={() => {\n              axios\n                .put(url + \"toggle/\", {\n                  params: { id: item.id, status: item.relay ? \"off\" : \"on\" },\n                })\n                .then((res) => {\n                  setIO(item.id, \"relay\", !item.relay);\n                  console.log(item);\n                });\n            }}\n            inputProps={{ \"aria-label\": \"controlled\" }}\n          />\n        </div>\n      </div>\n      <div className=\"flex z-99 grid grid-flow-col grid-cols-12 gap-4 items-center m-8 mx-10 \">\n        <div className=\"flex col-span-6 items-center bg-blue-200 bg-opacity-25 rounded-md p-6\">\n          <span>\n            <div className=\"text-gray-500 font-bold\">\n              Light Intensity &nbsp; &nbsp;\n            </div>\n          </span>\n          <Slider\n            size=\"large\"\n            className=\"mx-16\"\n            step={null}\n            disabled={global.isGlobal}\n            defaultValue={item.dim}\n            aria-label=\"Default\"\n            valueLabelDisplay=\"auto\"\n            marks={marks}\n            min={25}\n            max={100}\n            value={item.dim}\n            onChange={(event, newValue) => {\n              if (newValue !== item.dim) {\n                axios\n                  .put(url + \"dimming/\", {\n                    params: { id: id, value: newValue },\n                  })\n                  .then((res) => {\n                    setIO(id, \"dim\", newValue);\n                  });\n              }\n            }}\n          ></Slider>\n        </div>\n\n        <div className=\"flex items-center justify-center col-span-3 bg-blue-200 bg-opacity-25 rounded-md py-9 \">\n          <span>\n            <div className=\"text-gray-500 font-bold\">\n              Current flowing &nbsp;\n            </div>\n          </span>\n          <FlashOnIcon className=\"text-yellow-500\" />\n          <Typography className=\"text-gray-600\">\n            {\" \"}\n            &nbsp;{item.current} mA\n          </Typography>\n        </div>\n        <div className=\"flex items-center justify-center col-span-3 bg-blue-200 bg-opacity-25 rounded-md py-9\">\n          <span>\n            <div className=\"text-gray-500 font-bold\">Temperature &nbsp;</div>\n          </span>\n          <DeviceThermostatIcon className=\"text-red-500\" />\n          <Typography className=\"text-gray-600\">\n            {\" \"}\n            &nbsp;{item.temp} &deg; C\n          </Typography>\n        </div>\n      </div>\n\n      <div className=\"flex grid grid-flow-col gap-4 items-center justify-center mx-20 mb-20\">\n        \n        <div className=\"flex grid items-center justify-center col-span-2 mx-20 \">      \n            {/* <div className={classnames(\"flex text-gray-500 font-bold items-center justify-center display:none\",{\"display-error\": currError})}> */}\n            {currError && (<div className={classnames(\"flex text-gray-500 font-bold items-center justify-center display:none\")}>\n              Wait for 2 minutes till the values populate...\n            </div>)}\n          {!currError && (<Chart\n            width={\"550px\"}\n            height={\"300px\"}\n            chartType=\"LineChart\"\n            loader={<div>Loading Chart</div>}\n            data={graphData.curr}\n            options={{\n              hAxis: {\n                title: \"Time\",\n                maxValue: 15,\n                minValue: 0,\n                viewWindow: {\n                  max: 10,\n                },\n              },\n              vAxis: {\n                title: \"Current\",\n              },\n              colors: [\"#F59E0B\"],\n\n              legend: { position: \"none\" },\n              explorer: { axis: \"horizontal\" },\n              aggregationTarget: \"auto\",\n              animation: {\n                startup: true,\n                duration: 1000,\n                easing: \"linear\",\n              },\n            }}\n            rootProps={{ \"data-testid\": \"1\" }}\n          />)}\n          <div className=\"flex text-gray-500 font-bold items-center justify-center \">\n            Current Flowing\n          </div>\n        </div>\n        <div className=\"flex grid items-center justify-center col-span-2 mx-20 \">\n            {/* <div className={classnames(\"flex text-gray-500 font-bold items-center justify-center\",{\"display-error\": tempError})}> */}\n            {tempError && (<div className={classnames(\"flex text-gray-500 font-bold items-center justify-center\")}>\n              Wait for 2 minutes till the values populate...\n            </div>)}\n          {!tempError && (<Chart\n            width={\"550px\"}\n            height={\"300px\"}\n            chartType=\"LineChart\"\n            loader={<div>Loading Chart</div>}\n            data={graphData.temp}\n            options={{\n              hAxis: {\n                title: \"Time\",\n                maxValue: 15,\n                minValue: 0,\n                viewWindow: {\n                  max: 10,\n                },\n              },\n              vAxis: {\n                title: \"Temperature\",\n              },\n              colors: [\"#EF4444\"],\n\n              legend: { position: \"none\" },\n              explorer: { axis: \"horizontal\" },\n              aggregationTarget: \"auto\",\n              animation: {\n                startup: true,\n                duration: 1000,\n                easing: \"linear\",\n              },\n            }}\n            rootProps={{ \"data-testid\": \"1\" }}\n          />)}\n          <div className=\"flex text-gray-500 font-bold items-center justify-center \">\n            Temperature\n          </div>\n        </div>\n      </div>\n\n      <div className=\"flex grid grid-flow-row grid-cols-9 gap-4 grid-rows-1 p-6 bg-opacity-25 rounded-md\">\n          <Button\n              className=\"col-start-8 col-span-2\"\n              variant=\"contained\"\n              color=\"error\" \n              // sx={buttonSx}\n              //disabled={syncloading}\n              onClick={() => {\n                setOpen(true);\n                // axios\n                //   .delete(url + \"deleteNode/\",{\n                //     params: {\n                //       id: id,\n                //     },\n                //   }\n                //   )\n                //   ;\n              }}\n            >\n              Delete Node\n            </Button>\n            <Dialog \n              open={open}\n              onClose={() => {setOpen(false)}}\n              aria-labelledby=\"alert-dialog-title\"\n              aria-describedby=\"alert-dialog-description\"\n            >\n              <DialogTitle id=\"alert-dialog-title\">\n                {\"ALERT: Delete Node?\"}\n              </DialogTitle>\n              <DialogContent>\n                <DialogContentText id=\"alert-dialog-description\">\n                  System will delete all node related data.\n                </DialogContentText>\n              </DialogContent>\n              <DialogActions>\n                <Button onClick={() => {setOpen(false)}}>NO</Button>\n                <Button onClick={() => {\n                  axios\n                  .put(url + \"deleteNode/\",{\n                    params: {\n                      id: item.id,\n                    },\n                  }\n                  )\n                  .then((res) => {\n                    setOpen(false);\n                    history.push(\"/\");\n                });\n                // history.push(\"/\");\n                }} \n                autoFocus>\n                  YES\n                </Button>\n              </DialogActions>\n            </Dialog>\n            \n          </div>\n    </div>\n  );\n};\n\nexport default StreetNode;\n","import { React, useState, useEffect } from \"react\";\nimport Switch from \"@mui/material/Switch\";\nimport Typography from \"@mui/material/Typography\";\nimport { Grid } from \"@mui/material\";\nimport Brightness6Icon from \"@mui/icons-material/Brightness6\";\nimport FlashOnIcon from \"@mui/icons-material/FlashOn\";\nimport DeviceThermostatIcon from \"@mui/icons-material/DeviceThermostat\";\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport url from \"./BaseURL\";\nimport { useNodeContext } from \"../NodeContext\";\nimport classnames from \"classnames\";\n\n\nconst NodeItem = ({ item, ticked }) => {\n  const { global,setIO } = useNodeContext();\n\n  return (\n    <div className={classnames(\"flex flex-wrap items-center justify-center hover:shadow-md hover:scale-100 rounded-md py-4\",\n    {'bg-blue-100' : item.is_active === true},\n    {'bg-red-100' : item.is_active === false}\n    )}>\n      <Grid\n        container\n        xs={12}\n        // spacing={1}\n        className=\"flex items-center justify-center\"\n      >\n        <Grid item xs={4} className=\"flex items-center justify-center\">\n          <Link to={`/node/${item.id}`}>\n            <div className=\"flex font-bold text-gray-500 text-xl justify-start\">\n              {item.id}\n            </div>\n          </Link>\n        </Grid>\n        <Grid item xs={2} className=\"flex items-center justify-center\">\n          <div className=\"flex justify-end\">\n            <Switch\n              checked={item.relay}\n              disabled={global.isGlobal}\n              onChange={() => {\n                axios\n                  .put(url + \"toggle/\", {\n                    params: { id: item.id, status: item.relay ? \"off\" : \"on\" },\n                  })\n                  .then((res) => {\n                    if(res.data.operation === true){\n                      // setIsActive(true);\n                      setIO(item.id,\"is_active\",true);\n                      setIO(item.id, \"relay\", !item.relay);\n                      // console.log(isActive);\n                      // console.log(item)\n                    }\n                    else{\n                      setIO(item.id,\"is_active\",false)\n                    }\n                    \n                    console.log(item);\n                  });\n              }}\n              inputProps={{ \"aria-label\": \"controlled\" }}\n            />\n          </div>\n        </Grid>\n        <Grid item xs={2} className=\"flex items-center justify-center\">\n          <Brightness6Icon className=\"text-blue-500\" />\n          <Typography className=\"text-gray-600\">&nbsp; {item.dim} %</Typography>\n        </Grid>\n        <Grid item xs={2} className=\"flex items-center justify-center\">\n          <FlashOnIcon className=\"text-yellow-500\" />\n          <Typography className=\"text-gray-600\">\n            &nbsp; {item.current} mA\n          </Typography>\n        </Grid>\n        <Grid item xs={2} className=\"flex items-center justify-center\">\n          <DeviceThermostatIcon className=\"text-red-500\" />\n          <Typography className=\"text-gray-600\">\n            &nbsp; {item.temp} &deg; C\n          </Typography>\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nexport default NodeItem;\n","import React, { useState, useEffect } from \"react\";\nimport TextField from \"@mui/material/TextField\";\nimport AdapterDateFns from \"@mui/lab/AdapterDateFns\";\nimport LocalizationProvider from \"@mui/lab/LocalizationProvider\";\nimport TimePicker from \"@mui/lab/TimePicker\";\nimport InputLabel from \"@mui/material/InputLabel\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport FormControl from \"@mui/material/FormControl\";\nimport Select from \"@mui/material/Select\";\n\nexport const TimeSelecter = ({ val, idx, sch, setSch }) => {\n  const [startValue, setStartValue] = useState(val.from);\n  const [endValue, setEndValue] = useState(val.to);\n\n  return (\n    <div className=\"flex grid grid-flow-col gap-1\">\n      <div className=\"flex items-center justify-start p-4 rounded-md \">\n        <LocalizationProvider className=\"\" dateAdapter={AdapterDateFns}>\n          <TimePicker\n            disabled={idx == 0}\n            label=\"Start Time\"\n            value={startValue}\n            onChange={(newValue) => {\n              setSch([\n                ...sch.slice(0, idx),\n                { ...sch[idx], from: newValue.toLocaleString() },\n                ...sch.slice(idx + 1),\n              ]);\n            }}\n            renderInput={(params) => <TextField {...params} />}\n          />\n        </LocalizationProvider>\n      </div>\n      <div className=\"flex items-center justify-start p-4 rounded-md \">\n        <LocalizationProvider className=\"\" dateAdapter={AdapterDateFns}>\n          <TimePicker\n            disabled={idx == 3}\n            label=\"End Time\"\n            value={endValue}\n            onChange={(newValue) => {\n              setSch([\n                ...sch.slice(0, idx),\n                { ...sch[idx], to: newValue },\n                { ...sch[idx + 1], from: newValue },\n                ...sch.slice(idx + 2),\n              ]);\n              console.log(sch);\n            }}\n            renderInput={(params) => <TextField {...params} />}\n          />\n        </LocalizationProvider>\n      </div>\n      <div className=\"flex items-center justify-start p-4 rounded-md \">\n        <FormControl sx={{ m: 1, minWidth: 120 }}>\n          <InputLabel id=\"demo-simple-select-helper-label\">\n            Intensity\n          </InputLabel>\n          <Select\n            labelId=\"demo-simple-select-helper-label\"\n            id=\"demo-simple-select-helper\"\n            value={sch[idx].i}\n            label=\"Intensity\"\n            onChange={(e) =>\n              setSch([\n                ...sch.slice(0, idx),\n                { ...sch[idx], i: e.target.value },\n                ...sch.slice(idx + 1),\n              ])\n            }\n          >\n            <MenuItem value={25}>25</MenuItem>\n            <MenuItem value={50}>50</MenuItem>\n            <MenuItem value={75}>75</MenuItem>\n            <MenuItem value={100}>100</MenuItem>\n          </Select>\n        </FormControl>\n        {/* <IntensitySelecter /> */}\n      </div>\n    </div>\n  );\n};\n","import React, { useState } from \"react\";\n\nfunction usePagination(data, itemsPerPage) {\n  const [currentPage, setCurrentPage] = useState(1);\n  const maxPage = Math.ceil(data.length / itemsPerPage);\n\n  function currentData() {\n    const begin = (currentPage - 1) * itemsPerPage;\n    const end = begin + itemsPerPage;\n    return data.slice(begin,end);\n  }\n\n  function next() {\n    setCurrentPage(currentPage => Math.min(currentPage + 1, maxPage));\n  }\n\n  function prev() {\n    setCurrentPage(currentPage => Math.max(currentPage - 1, 1));\n  }\n\n  function jump(page) {\n    const pageNumber = Math.max(1, page);\n    setCurrentPage(currentPage => Math.min(pageNumber, maxPage));\n  }\n\n  return { next, prev, jump, currentData, currentPage, maxPage };\n}\n\nexport default usePagination;","import React, { useState,useEffect } from \"react\";\nimport Pagination from '@mui/material/Pagination';\nimport usePagination from \"./Pagination\";\nimport axios from \"axios\";\nimport url from \"../BaseURL\";\nimport Stack from '@mui/material/Stack';\nimport Alert from '@mui/material/Alert';\nimport AlertTitle from '@mui/material/AlertTitle';\nimport Skeleton from '@mui/material/Skeleton';\n\nexport default function DisplayLogs(){\n    const [data,setData] = useState([]);\n    let [page, setPage] = useState(1);\n    const [loading,setLoading] = useState(false);\n    const PER_PAGE = 10;\n\n    const count = Math.ceil(data.length/ PER_PAGE);\n    const _DATA = usePagination(data, PER_PAGE);\n\n    const handleChange = (e, p) => {\n        setPage(p);\n        _DATA.jump(p);\n    };\n    useEffect(() => {\n        setLoading(true);\n        axios.get(url + \"logs/\").then((res) => {\n            setData(res.data.logs);\n            setLoading(false);\n        });\n    }, []);\n\n    return (\n        <div>\n            <Pagination\n                count={count}\n                size=\"large\"\n                page={page}\n                color='primary'\n                onChange={handleChange}\n                sx={{\n                    m:2,\n                    p:2,\n                    ml:-2,\n                    pl:-2,\n                    mt:-1\n                }}\n            />\n            <Stack spacing={1}>\n                {loading ? (\n                    <div>\n                        <Skeleton \n                            variant=\"rounded\"\n                            animation=\"wave\"\n                            height='20%'\n\n                        />\n                        <Skeleton \n                            variant=\"rounded\"\n                            animation=\"wave\"\n                            height='20%'\n\n                        />\n                    </div>\n                    \n                \n                ) : (\n                \n                    _DATA.currentData().map((record) => {\n                        const date = new Date(record.timestamp);\n                        const day = date.toLocaleString('en-IN',{day:'2-digit'});\n                        const month = date.toLocaleString('en-IN',{month:\"short\"});\n                        const year = date.getFullYear();\n                        const time = date.toLocaleString('en-IN',{hour:\"2-digit\",minute:\"2-digit\"});\n                        const min = date.getMinutes();\n                        return (\n                        <Alert \n                            severity={record.success ? \"success\" : \"error\"}\n                            sx={{\n                                fontSize:19,\n                                fontWeight: 'medium'\n                            }}\n                        >\n                            <AlertTitle\n                                sx={{\n                                    fontSize:21\n                                }}\n                            >\n                                <strong>{record.message}</strong>\n                            </AlertTitle>\n                            {day}-{month}-{year} {time}\n                        </Alert>\n                        )\n                    })\n                )}\n            </Stack>\n\n        </div>\n    )\n}\n","import { React, useState, useEffect, useRef } from \"react\";\nimport axios from \"axios\";\nimport { Typography, Slider, Button, Tabs, Tab, Box, Dialog,DialogActions,DialogContent,DialogContentText,DialogTitle } from \"@mui/material\";\nimport NodeItem from \"./NodeItem\";\nimport { Link } from \"react-router-dom\";\nimport Checkbox from \"@mui/material/Checkbox\";\nimport CircularProgress from \"@mui/material/CircularProgress\";\nimport { green } from \"@mui/material/colors\";\nimport url from \"./BaseURL\";\nimport { useNodeContext } from \"../NodeContext\";\nimport PropTypes from \"prop-types\";\nimport LightModeIcon from \"@mui/icons-material/LightMode\";\nimport DarkModeIcon from \"@mui/icons-material/DarkMode\";\nimport { TimeSelecter } from \"./TimeSelecter\";\nimport RemoveCircleIcon from \"@mui/icons-material/RemoveCircle\";\nimport AddCircleIcon from \"@mui/icons-material/AddCircle\";\nimport HourglassBottomIcon from \"@mui/icons-material/HourglassBottom\";\nimport \"./nodes.css\";\nimport classnames from \"classnames\";\nimport Alert from '@mui/material/Alert';\nimport AlertTitle from '@mui/material/AlertTitle';\nimport Fade from \"@mui/material/Fade\";\nimport IconButton from '@mui/material/IconButton';\nimport CloseIcon from '@mui/icons-material/Close';\nimport Stack from '@mui/material/Stack';\nimport DisplayLogs from \"./Logs/DisplayLogs\";\n\n\n\n\n\nconst Nodes = () => {\n  const {\n    nodes,\n    global,\n    tabVal,\n    setNodes,\n    setGlobalToggle,\n    setGlobalDim,\n    setInstValues,\n    setGlobalTick,\n  } = useNodeContext();\n  const [loading, setLoading] = useState(false);\n  // loadingOnOff: set true on pressing All On/Off button\n  const [loadingOnOff, setLoadingOnOff] = useState(false);\n  // loadingTelemetry: set true on pressing Telemetry button\n  const [loadingTelemetry, setLoadingTelemetry] = useState(false);\n  const [syncloading, setSyncloading] = useState(false);\n  const [applyloading, setApplyloading] = useState(false);\n  const [tab, setTab] = useState(tabVal);\n  const [sun, setSun] = useState({ sunrise: 0, sunset: 0 });\n  const [autoSchedule, setAutoSchedule] = useState([]);\n  // pointerEvent: set true to make all clickable things unclickable. \n  const [pointerEvent, setPointerEvent] = useState(false);\n  const [telemetryStatus, setTelemetryStatus] = useState(true);\n  const [scheduleStatus, setScheduleStatus] = useState(true);\n  // AlerDialog open or close?\n  const [open, setOpen] = useState(false);\n  const [displaySuccessTab,setDisplaySuccessTab] = useState(false);\n  const [retryAlert,setRetryAlert] = useState(false);\n  const [retryNodes,setRetryNodes] = useState([]);\n  const [displayAlertTab,setDisplayAlertTab] = useState(false);\n  const [failedNodes,setFailedNodes] = useState([]);\n  const [logs,setLogs] = useState([]);\n\n  const handleChangeTab = (event, newValue) => {\n    setTab(newValue);\n    if(newValue == 1)\n    {\n      axios\n        .get(url + \"toggle/\", \n        // {\n        //   params: {\n        //     isGlobal: true,\n        //     status: global.globalStatus ? \"on\" : \"off\",\n        //   },\n        // }\n        )\n        .then((res) => {\n          // console.log(res.data.relay)\n          // setGlobalToggle(global.globalStatus);\n          setGlobalToggle(res.data.relay);\n        });\n      axios\n        .get(url + \"dimming/\", \n        // {\n          // params: { \n          //   isGlobal: true, value: global.globalValue },\n        // }\n        )\n        .then((res) => {\n          // set current value\n          setGlobalDim(res.data.intensity);\n          // console.log(nodes);\n        });\n      axios.get(url + \"getNodes/\").then((res) => {\n        setNodes(res.data.nodes);\n        console.log(res.data.nodes);\n        console.log(nodes);\n      });\n    }\n    // else if(newValue == 2){\n    //   axios.get(url + \"logs/\").then((res) => {\n    //     setLogs(res.data.logs);\n    //     console.log(res.data.logs);\n    //   })\n    // }\n  };\n\n  const marks = [\n    {\n      value: 25,\n      label: \"25%\",\n    },\n    {\n      value: 50,\n      label: \"50%\",\n    },\n    {\n      value: 75,\n      label: \"75%\",\n    },\n    {\n      value: 100,\n      label: \"100%\",\n    },\n  ];\n\n  const buttonSx = {\n    ...(loading && {\n      bgcolor: green[700],\n      \"&:hover\": {\n        bgcolor: green[900],\n      },\n    }),\n  };\n\n  const handleChange = (event, newValue) => {\n\n    if (newValue !== global.globalValue) {\n      // current dimming value\n      console.log(newValue);\n      setPointerEvent(true);\n      setLoadingOnOff(true);\n      setDisplayAlertTab(false);\n      setDisplaySuccessTab(false);\n      axios\n        .put(url + \"dimming/\", {\n          params: { \n            isGlobal: true, \n            value: newValue },\n        })\n        .then((res) => {\n          setGlobalDim(newValue);\n          setLoadingOnOff(false);\n          setPointerEvent(false);\n          \n          if(res.data.operation == false){\n            setRetryAlert(true);\n            setRetryNodes(res.data.nodes);\n            axios.get(url + \"getRetryJobStatus/\",{\n            }).then((res) => {\n              // console.log('Retry job done...')\n              setRetryAlert(false);\n              if(res.data.operation == false){\n                setFailedNodes(res.data.nodes);\n                setDisplayAlertTab(true);\n              }\n              else{\n                setDisplaySuccessTab(true);\n              }\n              axios.get(url + \"getNodes/\").then((res) => {\n                setNodes(res.data.nodes);\n              });\n              \n            })\n          }\n          else{\n            setDisplaySuccessTab(true);\n            axios.get(url + \"getNodes/\").then((res) => {\n              setNodes(res.data.nodes);\n            });\n          }\n        });\n      \n    }\n  };\n  \n\n  useEffect(() => {\n    axios\n      .get(url + \"setTelemetry/\",)\n      .then((res) => {\n        console.log(\"useEffect of setTelemetry\");\n        setTelemetryStatus(res.data.status);\n      })\n    if (global.isGlobal === true) {\n      axios\n        .get(url + \"toggle/\", \n        // {\n        //   params: {\n        //     isGlobal: true,\n        //     status: global.globalStatus ? \"on\" : \"off\",\n        //   },\n        // }\n        )\n        .then((res) => {\n          console.log(res.data.relay)\n          // setGlobalToggle(global.globalStatus);\n          setGlobalToggle(res.data.relay);\n          console.log(nodes);\n        });\n      axios\n        .get(url + \"dimming/\", \n        // {\n          // params: { \n          //   isGlobal: true, value: global.globalValue },\n        // }\n        )\n        .then((res) => {\n          // set current value\n          setGlobalDim(res.data.intensity);\n          console.log(nodes);\n        });\n\n    }\n  }, [global.isGlobal]);\n  useEffect(() => {\n    axios.get(url + \"getNodes/\").then((res) => {\n      setNodes(res.data.nodes);\n      console.log(res.data.nodes);\n      console.log(nodes);\n    });\n  }, []);\n\n  useEffect(() => {\n    axios.get(url + \"activateSchedule/\")\n    .then((res) => {\n      setScheduleStatus(res.data.status);\n    })\n\n    axios.get(url + \"getSchedule/\").then((res) => {\n      console.log(res);\n      setSun({ sunrise: res.data.sunrise, sunset: res.data.sunset });\n      setAutoSchedule(res.data.schedule);\n    });\n  }, []);\n\n  const handleButtonClick = () => {\n    if (!loading) {\n      setLoading(true);\n      axios.get(url + \"discover/\").then((res) => {\n        setLoading(false);\n        setNodes(res.data.nodes);\n      });\n    }\n  };\n\n  function TabPanel(props) {\n    const { children, value, index, ...other } = props;\n\n    return (\n      <div\n        role=\"tabpanel\"\n        hidden={value !== index}\n        id={`simple-tabpanel-${index}`}\n        aria-labelledby={`simple-tab-${index}`}\n        {...other}\n      >\n        {value === index && (\n          <Box sx={{ p: 3 }}>\n            <Typography>{children}</Typography>\n          </Box>\n        )}\n      </div>\n    );\n  }\n\n  TabPanel.propTypes = {\n    children: PropTypes.node,\n    index: PropTypes.number.isRequired,\n    value: PropTypes.number.isRequired,\n  };\n\n  function a11yProps(index) {\n    return {\n      id: `simple-tab-${index}`,\n      \"aria-controls\": `simple-tabpanel-${index}`,\n    };\n  }\n\n  return (\n    // <div className=\"lg:container md:mx-auto mt-8 z-0\">\n    <div className={classnames(\"lg:container md:mx-auto mt-8 z-0\", {\"content-pointer-event-none\": pointerEvent})}>\n      <Dialog\n        open={retryAlert}\n        sx = {{\n          justifyContent: \"flex-start\",\n          alignItems: \"flex-start\",\n          fontSize:16,\n          fontWeight: 'bold',\n        }}\n      >\n        <DialogTitle>\n          {\"Operation failed for following nodes\"}\n        </DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            <ul class='list-disc'>\n              {retryNodes.map(id => <li>{id}</li>)}\n            </ul>\n          </DialogContentText>\n          <br></br>\n          <DialogContentText>\n            <strong>Please Wait</strong>\n          </DialogContentText>\n          <DialogContentText>\n            Retrying automatically in few moments...\n          </DialogContentText>\n            <br></br>\n            <CircularProgress />\n        </DialogContent>\n      </Dialog>\n      <div className=\"flex grid grid-flow-row grid-rows-2 items-center m-2 mx-10\">\n        <div className=\"flex col-span-4 items-center justify-start text-2xl text-primary font-bold bg-gray-200 p-3 rounded-md\">\n          Area Name\n        </div>\n        <div className=\"flex col-span-4 justify-start text-2xl text-primary font-bold\">\n          {\n            (() => {\n              if(displaySuccessTab == true){\n                return(\n                  <Fade\n                      sx={{ width: 1,fontSize:16, fontWeight: 'bold',}}\n                      in={displaySuccessTab}\n                      timeout={{ enter: 0, exit: 100 }} \n                    >\n                      <Alert \n                        severity=\"success\"\n                        action={\n                          <IconButton\n                            aria-label=\"close\"\n                            color=\"inherit\"\n                            size=\"small\"\n                            onClick={() => {\n                              setDisplaySuccessTab(false);\n                            }}\n                          >\n                            <CloseIcon />\n                          </IconButton>\n                        }\n                      >\n                        <AlertTitle>Success</AlertTitle>\n                        Operation was successful on all Street Lights!\n                      </Alert>\n                    </Fade>\n                )\n              }\n              else if(displayAlertTab == true){\n                return(\n                  <Fade\n                    sx={{ width: 1,fontSize:16, fontWeight: 'bold',}}\n                    in={displayAlertTab}\n                    timeout={{ enter: 0, exit: 0 }} \n                  >\n                    <Alert \n                      severity=\"error\"\n                      action={\n                        <IconButton\n                            aria-label=\"close\"\n                            color=\"inherit\"\n                            size=\"small\"\n                            onClick={() => {\n                              setDisplayAlertTab(false);\n                            }}\n                          >\n                            <CloseIcon />\n                          </IconButton>\n                      }\n                    >\n                        <AlertTitle>Error</AlertTitle>\n                        Operation failed for following lights:\n                        <ul class='list-disc'>\n                          {failedNodes.map(id => <li>{id}</li>)}\n                        </ul>\n                    </Alert>\n                  </Fade>\n                )\n              }\n            })()\n          }\n        </div>\n      </div>\n      \n        \n\n      <Box className=\"p-6 m-4\">\n        <Box sx={{ borderBottom: 1, borderColor: \"divider\" }}>\n          <Tabs\n            value={tab}\n            onChange={handleChangeTab}\n            aria-label=\"basic tabs example\"\n          >\n            <Tab label=\"AUTO\" {...a11yProps(0)} />\n            <Tab label=\"MANUAL\" {...a11yProps(1)} />\n            <Tab label=\"LOGS\" {...a11yProps(2)}/>\n          </Tabs>\n        </Box>\n        <TabPanel value={tab} index={0}>\n          <div className=\"flex grid grid-flow-row-dense grid-cols-9 grid-rows-2 gap-4 items-center p-4 bg-blue-200 bg-opacity-25 rounded-md\">\n            <div className=\"flex col-span-3 items-center justify-center p-4 rounded-md \">\n              <LightModeIcon className=\"text-yellow-500\" />\n              <span className=\"font-bold text-gray-700\">\n                &nbsp; Sunrise Time: &nbsp;\n              </span>\n              <span className=\"p-4 bg-gray-50 rounded-md shadow-md text-white bg-blue-500 font-bold\">\n                {sun.sunrise}\n              </span>\n            </div>\n            <div className=\"flex col-span-3 items-center justify-center p-4 rounded-md \">\n              <div className=\"flex col-span-3 items-center justify-start p-4 bg-blue-100 rounded-md\">\n                <HourglassBottomIcon className=\"text-gray-700\" />\n                <span className=\"font-bold text-gray-700\">\n                  &nbsp; For Non-Peak Hours: &nbsp;\n                </span>\n              </div>\n            </div>\n            <div className=\"flex col-span-3 items-center justify-center rounded-md \">\n              <DarkModeIcon className=\"text-blue-500\" />\n              <span className=\"font-bold text-gray-700\">\n                &nbsp; Sunset Time: &nbsp;\n              </span>\n              <span className=\"p-4 bg-gray-50 rounded-md shadow-md text-white bg-blue-500 font-bold\">\n                {sun.sunset}\n              </span>\n            </div>\n\n            {autoSchedule.map((s, idx) => (\n              <div className=\"flex col-start-3 col-span-5 items-center justify-center rounded-md\">\n                <div className=\"flex items-center justify-center rounded-md mr-16\">\n                  <div className=\"flex col-start-3 col-span-5 items-center justify-center rounded-md\">\n                    <div className=\"flex items-center justify-center rounded-md mr-16\">\n                      <TimeSelecter\n                        val={s}\n                        idx={idx}\n                        sch={autoSchedule}\n                        setSch={setAutoSchedule}\n                      />\n                    </div>\n                  </div>\n                  {/* <div className=\"flex col-start-8 col-span-1 items-center justify-center p-4 rounded-md\">\n                  <div className=\"flex items-center justify-center rounded-md mr-16\">\n                    <RemoveCircleIcon className=\"text-red-500\" />\n                  </div>\n                </div> */}\n                </div>\n              </div>\n            ))}\n          </div>\n          <div className=\"flex grid grid-flow-row grid-cols-9 gap-4 grid-rows-1 p-4 bg-blue-200 bg-opacity-25 rounded-md\">\n          <Button\n              className=\"col-start-4 col-span-2\"\n              variant=\"contained\"\n              sx={buttonSx}\n              //disabled={syncloading}\n              color={scheduleStatus ? 'error' : 'primary'}\n              onClick={() => {\n                if(scheduleStatus)\n                {\n                  setOpen(true);\n                }\n                else {\n                axios\n                  .put(url + \"activateSchedule/\",{\n                    params: {\n                      status: !scheduleStatus,\n                    },\n                  }\n                  )\n                  .then((res) => {\n                  setScheduleStatus(!scheduleStatus);\n                });\n              }\n              }}\n            >\n              {scheduleStatus ? \"Disable \":\"Enable \"}Schedules\n              {loading && (\n                <CircularProgress\n                  color=\"success\"\n                  size={24}\n                  sx={{\n                    position: \"absolute\",\n                    top: \"50%\",\n                    left: \"50%\",\n                    marginTop: \"-12px\",\n                    marginLeft: \"-12px\",\n                  }}\n                />\n              )}\n            </Button>\n            <Dialog \n              open={open}\n              onClose={() => {setOpen(false)}}\n              aria-labelledby=\"alert-dialog-title\"\n              aria-describedby=\"alert-dialog-description\"\n            >\n              <DialogTitle id=\"alert-dialog-title\">\n                {\"ALERT: Disable Schedules?\"}\n              </DialogTitle>\n              <DialogContent>\n                <DialogContentText id=\"alert-dialog-description\">\n                  System will not follow schedules on disabling schedules.\n                </DialogContentText>\n              </DialogContent>\n              <DialogActions>\n                <Button onClick={() => {setOpen(false)}}>NO</Button>\n                <Button onClick={() => {\n                  axios\n                  .put(url + \"activateSchedule/\",{\n                    params: {\n                      status: !scheduleStatus,\n                    },\n                  }\n                  )\n                  .then((res) => {\n                  setScheduleStatus(!scheduleStatus);\n                  setOpen(false);\n                });\n                }} \n                autoFocus>\n                  YES\n                </Button>\n              </DialogActions>\n            </Dialog>\n            <Button\n              className=\"col-start-6 col-span-2\"\n              variant=\"outlined\"\n              sx={buttonSx}\n              disabled={syncloading || !scheduleStatus}\n              onClick={() => {\n                setSyncloading(true);\n                setDisplayAlertTab(false);\n                setDisplaySuccessTab(false);\n                axios.get(url + \"sync/\").then((res) => {\n                  \n                  axios.get(url + \"getRetryJobStatus/\",{\n\n                    }).then((res) => {\n                    // console.log('Retry job done...')\n                      if(res.data.operation == false){\n                        setFailedNodes(res.data.nodes);\n                        setDisplayAlertTab(true);\n                      }\n                      else{\n                        setDisplaySuccessTab(true);\n                      }\n                      setSyncloading(false);\n                    });\n                  });\n              }}\n            >\n              Sync with Auto\n              {syncloading && (\n                <CircularProgress\n                  color=\"success\"\n                  size={24}\n                  sx={{\n                    position: \"absolute\",\n                    top: \"50%\",\n                    left: \"50%\",\n                    marginTop: \"-12px\",\n                    marginLeft: \"-12px\",\n                  }}\n                />\n              )}\n            </Button>\n            <Button\n              className=\"col-start-8 col-span-2\"\n              variant=\"contained\"\n              sx={buttonSx}\n              disabled={applyloading}\n              onClick={() => {\n                //run validation\n                setApplyloading(true);\n                setPointerEvent(true);\n                axios\n                  .post(url + \"setSchedule/\", {\n                    schedule: autoSchedule,\n                  })\n                  .then((res) => {\n                    //if (res.data.succ == \"done\")\n                      setApplyloading(false);\n                      setPointerEvent(false);\n\n                  });\n              }}\n            >\n              Apply Changes\n              {loading && (\n                <CircularProgress\n                  color=\"success\"\n                  size={24}\n                  sx={{\n                    position: \"absolute\",\n                    top: \"50%\",\n                    left: \"50%\",\n                    marginTop: \"-12px\",\n                    marginLeft: \"-12px\",\n                  }}\n                />\n              )}\n            </Button>\n          </div>\n        </TabPanel> \n        <TabPanel value={tab} index={1}>\n          <div className=\"flex grid grid-flow-col grid-cols-12 gap-5 items-center p-4 px-2 bg-blue-200 bg-opacity-25 rounded-md mb-7\">\n            <div className=\"flex items-center col-span-2 justify-start\">\n              <Checkbox\n                checked={global.isGlobal}\n                onChange={() => {\n                  setGlobalTick(!global.isGlobal);\n                }}\n                inputProps={{ \"aria-label\": \"controlled\" }}\n              />\n              <span>\n                <Typography className=\"text-gray-500\">\n                  Global connection &nbsp; &nbsp;\n                </Typography>\n              </span>\n            </div>\n\n            <div className=\"flex col-span-2 items-center justify-center\">\n              <Button\n                size=\"large\"\n                variant=\"contained\"\n                sx={buttonSx}\n                disabled={loading}\n                onClick={handleButtonClick}\n              >\n                Discover\n                {loading && (\n                  <CircularProgress\n                    color=\"success\"\n                    size={24}\n                    sx={{\n                      position: \"absolute\",\n                      top: \"50%\",\n                      left: \"50%\",\n                      marginTop: \"-12px\",\n                      marginLeft: \"-12px\",\n                    }}\n                  />\n                )}\n              </Button>\n            </div>\n            <div className=\"flex col-span-4 items-center justify-center\">\n              <span>\n                <Typography className=\"text-gray-500\">\n                  Light Intensity &nbsp; &nbsp;\n                </Typography>\n              </span>\n              <span>{/* <AddCircle onClick={handleIncr} /> */}</span>\n              <Slider\n                className=\"ml-2\"\n                disabled={!global.isGlobal}\n                step={null}\n                defaultValue={global.globalValue}\n                marks={marks}\n                min={25}\n                max={100}\n                // to update\n                value={global.globalValue}\n                onChange={handleChange}\n                sx={{\n                  \"& .MuiSlider-mark\": {\n                    height: \"8px\",\n                  },\n                }}\n              ></Slider>\n            </div>\n\n            <div className=\"flex  col-span-2 items-centers justify-end \">\n              <Button\n                size='large'\n                disabled={!global.isGlobal || loadingOnOff}\n                onClick={() => {\n                  setPointerEvent(true);\n                  setLoadingOnOff(true);\n                  setDisplayAlertTab(false);\n                  setDisplaySuccessTab(false);\n                  axios\n                    .put(url + \"toggle/\", {\n                      params: {\n                        isGlobal: true,\n                        status: global.globalStatus ? \"off\" : \"on\",\n                      },\n                    })\n                    .then((res) => {\n                      \n                      setGlobalToggle(!global.globalStatus);\n                      // console.log(nodes);\n                      setPointerEvent(false);\n                      setLoadingOnOff(false);\n                      \n                      console.log(res.data.nodes)\n                      if(res.data.operation == false){\n                        setRetryAlert(true);\n                        setRetryNodes(res.data.nodes);\n                        console.log(retryAlert);\n                        axios.get(url + \"getRetryJobStatus/\",{\n                        }).then((res) => {\n                          // console.log('Retry job done...')\n                          if(res.data.operation == false){\n                            setFailedNodes(res.data.nodes);\n                            setDisplayAlertTab(true);\n                          }\n                          else{\n                            setDisplaySuccessTab(true);\n                          }\n                          axios.get(url + \"getNodes/\").then((res) => {\n                            setNodes(res.data.nodes);\n                          });\n                          setRetryAlert(false);\n                        })\n                      }\n                      else{\n                        setDisplaySuccessTab(true);\n                        axios.get(url + \"getNodes/\").then((res) => {\n                          setNodes(res.data.nodes);\n                        });\n                      }\n                      \n                      \n                    });\n                  \n                }}\n                color={global.globalStatus ? \"success\" : \"error\"}\n                variant={global.globalStatus ? \"contained\" : \"outlined\"}\n              >\n                Switch All {global.globalStatus ? \"Off\" : \"On\"}\n                {loadingOnOff && (\n                  <CircularProgress\n                    color=\"success\"\n                    size={24}\n                    sx={{\n                      position: \"absolute\",\n                      top: \"50%\",\n                      left: \"50%\",\n                      marginTop: \"-12px\",\n                      marginLeft: \"-12px\",\n                    }}\n                  />\n                )}\n              </Button>\n            </div>\n\n            <div className=\"flex  col-span-2 items-centers justify-end\">\n              <Button\n                size='small'\n                disabled={loadingTelemetry}\n                onClick={() => {\n                  setPointerEvent(true);\n                  setLoadingTelemetry(true);\n\n                  axios\n                    .put(url + \"setTelemetry/\", {\n                      params: {\n                        status: !telemetryStatus,\n                      },\n                    })\n                    .then((res) => {\n                      setTelemetryStatus(!telemetryStatus);\n                      setPointerEvent(false);\n                      setLoadingTelemetry(false);\n                    });\n\n                  // console.log(\"Hi this is telemetry button\")\n                  // setPointerEvent(false);\n                  // setLoadingTelemetry(false);\n                }}\n                color={telemetryStatus ? \"success\" : \"error\"}\n                variant={telemetryStatus ? \"outlined\" : \"contained\"}\n              >\n                Switch {telemetryStatus ? \"OFF\" : \"ON\"} Telemetry \n                {loadingTelemetry && (\n                  <CircularProgress\n                    color=\"success\"\n                    size={24}\n                    sx={{\n                      position: \"absolute\",\n                      top: \"50%\",\n                      left: \"50%\",\n                      marginTop: \"-12px\",\n                      marginLeft: \"-12px\",\n                    }}\n                  />\n                )}\n              </Button>\n            </div>\n          </div>\n          <Stack spacing={2}>\n            {\n              nodes.map((item) => (\n                <NodeItem item={item} />\n              ))\n            }\n          </Stack>\n          {/* <ul className=\"flex items-center justify-center grid grid-flow-col auto-cols-max gap-4 p-6\">\n            {nodes.map((item) => (\n              <li key={item.id}>\n                <NodeItem item={item} />\n              </li>\n            ))}\n          </ul> */}\n        </TabPanel>\n        <TabPanel value={tab} index={2}>\n          <DisplayLogs/>\n        </TabPanel>\n      </Box>\n      {/* <Box sx={{ width: \"30%\" }}>\n        <Alert className=\"m-8\" severity=\"warning\">\n          Temperature Exceeding- Check it out!\n        </Alert>\n      </Box> */}\n    </div>\n  );\n};\n\nexport default Nodes;\n","import React, { useState, useEffect } from \"react\";\nimport InputLabel from \"@mui/material/InputLabel\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport FormHelperText from \"@mui/material/FormHelperText\";\nimport FormControl from \"@mui/material/FormControl\";\nimport Select from \"@mui/material/Select\";\n\nexport const IntensitySelecter = () => {\n  const [intensity, setIntensity] = useState(100);\n\n  const handleChange = (event) => {\n    setIntensity(event.target.value);\n  };\n\n  return (\n    <div>\n      <FormControl sx={{ m: 1, minWidth: 120 }}>\n        <InputLabel id=\"demo-simple-select-helper-label\">Intensity</InputLabel>\n        <Select\n          labelId=\"demo-simple-select-helper-label\"\n          id=\"demo-simple-select-helper\"\n          value={intensity}\n          label=\"Intensity\"\n          onChange={handleChange}\n        >\n          <MenuItem value={25}>25</MenuItem>\n          <MenuItem value={50}>50</MenuItem>\n          <MenuItem value={75}>75</MenuItem>\n          <MenuItem value={100}>100</MenuItem>\n        </Select>\n      </FormControl>\n    </div>\n  );\n};\n","import React, { useState, useEffect } from \"react\";\nimport { Typography, Button, Switch } from \"@mui/material\";\nimport { useParams } from \"react-router-dom\";\nimport LightModeIcon from '@mui/icons-material/LightMode';\nimport DarkModeIcon from '@mui/icons-material/DarkMode';\nimport axios from \"axios\";\nimport url from \"./BaseURL\";\nimport { TimeSelecter } from \"./TimeSelecter\";\nimport { IntensitySelecter } from \"./IntensitySelecter\";\nimport RemoveCircleIcon from '@mui/icons-material/RemoveCircle';\nimport FormControl from '@mui/material/FormControl';\n\n\nexport const Scheduler = () => {\n\n    const [isToggled, setIsToggled] = useState(false);\n    const { id } = useParams();\n    const [count, setCount] = useState(0);\n\n\n    useEffect(() => {\n        axios.get(url + \"toggle/\", {\n            params: { id: id, status: isToggled ? \"on\" : \"off\" },\n        });\n    }, [isToggled]);\n\n    return (\n        <div className=\"lg:container md:mx-auto mt-8 z-0\">\n            <div className=\"flex grid grid-flow-col grid-cols-6 gap-4 items-center m-8 mx-10 p-4 bg-gray-200 rounded-md  \">\n\n                <div className=\"flex col-span-1 items-center justify-start\">\n                    <Typography className=\"text-lg sm:text-sm text-primary font-bold\">\n                        Auto / Manual  &nbsp; &nbsp;{\" \"}\n                    </Typography>\n                    <Switch\n                        checked={isToggled}\n                        color=\"success\"\n                        onChange={() => setIsToggled(!isToggled)}\n                        inputProps={{ \"aria-label\": \"controlled\" }}\n                    />\n                </div>\n            </div>\n            <div className=\"flex grid grid-flow-col grid-cols-5 gap-4 items-center m-8 mx-10 p-4 bg-gray-200 rounded-md\">\n                <div className=\"flex col-span-1 items-center justify-start p-4 bg-gray-50 rounded-md\">\n                    <LightModeIcon className=\"text-yellow-500\" /><span> &nbsp; &nbsp; Sunrise Time:</span>\n                    <span> &nbsp; &nbsp; 06:00 AM</span>\n                </div>\n\n                <div className=\"flex col-span-1 items-center justify-start p-4 bg-gray-50 rounded-md\">\n                    <DarkModeIcon className=\"text-blue-500\" /><span> &nbsp; &nbsp; Sunset Time:</span>\n                    <span> &nbsp; &nbsp; 06:00 PM</span>\n                </div>\n            </div>\n\n            <div className=\"flex grid grid-flow-col grid-cols-12 gap-4 items-center m-8 mx-10 rounded-md\">\n                <div className=\"flex col-span-3 items-center justify-start mr-14 p-4 bg-gray-200 rounded-md\">\n                    <Typography className=\"text-lg sm:text-sm text-primary font-bold\">For Non-Peak Hours:</Typography>\n                </div>\n                <div className=\"flex col-start-4 col-span-2 items-center justify-center rounded-md\">\n                    <TimeSelecter />\n                </div>\n                <div className=\"flex col-start-6 col-span-2 items-center justify-center rounded-md\">\n                    <IntensitySelecter ></IntensitySelecter>\n                </div>\n                <div className=\"flex col-start-8 col-span-1 items-center justify-center mr-16 rounded-md\">\n                    <RemoveCircleIcon color=\"error\" />\n                </div>\n                <div className=\"flex col-start-10 col-span-2 items-center justify-center rounded-md\">\n                    <Button\n                        onClick={() => {\n                            setCount(count + 1)\n                        }}\n                        color=\"primary\"\n                        variant= \"contained\"\n                    >\n                       Add\n                    </Button>\n\n                </div>\n            </div>\n        </div >\n    )\n}\n","import React, { useState } from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Navbar from \"./components/Navbar\";\nimport StreetNode from \"./components/StreetNode\";\nimport Nodes from \"./components/Nodes\";\nimport { Scheduler } from \"./components/Scheduler\";\n\nfunction App() {\n  return (\n    <Router>\n      <Navbar />\n      <Switch>\n        <Route path=\"/\" exact component={Nodes} />\n        <Route path=\"/node/:id\" component={StreetNode} />\n        <Route path=\"/scheduler\" component={Scheduler}></Route>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { NodeProvider } from \"./NodeContext\";\n\nReactDOM.render(\n  <NodeProvider>\n    <App />\n  </NodeProvider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}