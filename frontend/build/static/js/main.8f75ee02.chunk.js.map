{"version":3,"sources":["components/BaseURL.js","components/Navbar.js","Actions.js","NodeReducer.js","NodeContext.js","components/StreetNode.js","components/NodeItem.js","components/TimeSelecter.js","components/Logs/Pagination.js","components/Logs/DisplayLogs.js","components/Schedules/Slot.js","components/Schedules/CreateNewSchedule.js","components/Schedules/ViewEditSchedule.js","components/Schedules/ScheduleItem.js","components/Schedules/ListOfSchedules.js","components/Settings/AreaName.js","components/Settings/EnableDisableSchedules.js","components/Settings/EnableDisableTelemetry.js","components/Settings/SyncWithAutoInterval.js","components/Settings/SystemInfo.js","components/Settings/DeleteLogs.js","components/Settings/RestartServer.js","components/Settings/DisplaySettings.js","components/Home/Home.js","components/Status.js","components/Nodes.js","components/IntensitySelecter.js","components/Scheduler.js","App.js","reportWebVitals.js","index.js"],"names":["URL","Navbar","fixed","useState","data","setData","useEffect","axios","get","url","then","res","alerts","console","log","catch","error","interval","setInterval","clearInterval","class","className","icon","header","title","option","text","onClick","array","Array","map","record","push","id","put","params","id_array","SET_NODES","SET_INST_VALUE","SET_IO","SET_GLOBAL_TOGGLE","SET_GLOBAL_DIM","SET_GLOBAL","SET_GLOBAL_TICK","SET_TAB","node_reducer","state","action","type","nodes","payload","total","length","allNodes","obj","find","node","current","curr","temp","global","isGlobal","status","nodeID","IOLine","value","relay","globalStatus","dim","feature","globalValue","tab","initialState","localStorage","getItem","JSON","parse","tabVal","NodeContext","React","createContext","NodeProvider","children","useReducer","reducer","dispatch","setItem","stringify","Provider","setNodes","setInstValues","setIO","setGlobalToggle","setGlobalDim","setGlobalTick","changeTab","useNodeContext","useContext","useStyles","makeStyles","root","width","StreetNode","useParams","item","graphData","setGraphData","currError","setCurrError","tempError","setTempError","open","setOpen","history","useHistory","insterval","to","Typography","Switch","checked","disabled","color","onChange","inputProps","Slider","size","step","defaultValue","valueLabelDisplay","marks","label","min","max","event","newValue","classnames","height","chartType","loader","options","hAxis","maxValue","minValue","viewWindow","vAxis","colors","legend","position","explorer","axis","aggregationTarget","animation","startup","duration","easing","rootProps","Button","variant","Dialog","onClose","DialogTitle","DialogContent","DialogContentText","DialogActions","autoFocus","NodeItem","ticked","is_active","Grid","container","xs","operation","TimeSelecter","val","idx","sch","setSch","from","startValue","endValue","LocalizationProvider","dateAdapter","AdapterDateFns","TimePicker","slice","toLocaleString","renderInput","TextField","FormControl","sx","m","minWidth","InputLabel","Select","labelId","i","e","target","MenuItem","usePagination","itemsPerPage","currentPage","setCurrentPage","maxPage","Math","ceil","next","prev","jump","page","pageNumber","currentData","begin","end","DisplayLogs","setPage","loading","setLoading","count","_DATA","logs","Pagination","p","ml","pl","mt","Stack","spacing","Skeleton","date","Date","timestamp","day","month","year","getFullYear","time","hour","minute","getMinutes","operation_type","success","handleColor","Alert","severity","fontSize","fontWeight","AlertTitle","message","Slot","index","schedule","setSchedule","setStartTime","setEndTime","setIntensity","direction","justifyContent","alignItems","MobileTimePicker","previous","CreateNewSchedule","props","name","setName","slots","setSlots","sunrise","sunset","makeActive","setMakeActive","disableSubmitButton","setDisable","handleClose","fullWidth","maxWidth","IconButton","right","top","Divider","required","my","htmlFor","FormControlLabel","control","Checkbox","mb","toLocaleTimeString","post","schedule_name","no_of_slots","make_active","setSchedules","schedules","ViewEditSchedule","makeActiveAlert","setMakeActiveAlert","editFeedback","setEditFeedback","currently_active","closeEditSchedule","updateScheduleList","info","Snackbar","autoHideDuration","anchorOrigin","vertical","horizontal","ScheduleItem","deleteAlert","setDeleteAlert","editSchedule","setEditSchedule","delete","ListOfAllSchedules","newSchedule","setNewSchedule","listSchedules","setList","AreaName","area_name","window","location","reload","EnableDisableSchedule","scheduleStatus","setScheduleStatus","EnableDisableTelemetry","telemetryStatus","setTelemetryStatus","SyncWithAutoInterval","setState","FormHelperText","SystemInfo","version","setVersion","releaseDate","setReleaseDate","city","setCity","lat","setLat","lon","setLon","release_date","err","DeleteLogs","openFeedback","setFeedback","RestartServer","setTimeout","CircularProgress","DisplaySettings","currentSetting","setSetting","List","ListItem","disablePadding","ListItemButton","ListItemText","primary","primaryTypographyProps","orientation","flexItem","Home","setSunrise","setSunset","setTotal","active","setActive","setRelay","intensity","setOperation","setStatus","energy","setEnergy","sunrise_ts","sunset_ts","total_nodes","active_nodes","schedule_status","energy_saved","Status","msg","close","Nodes","loadingOnOff","setLoadingOnOff","syncloading","setSyncloading","setTab","pointerEvent","setPointerEvent","retryAlert","setRetryAlert","retryNodes","setRetryNodes","failedNodes","setFailedNodes","setSuccess","TabPanel","other","role","hidden","Box","a11yProps","borderBottom","borderColor","Tabs","Tab","timeout","left","marginTop","marginLeft","backgroundColor","darken","IntensitySelecter","Scheduler","isToggled","setIsToggled","setCount","App","path","exact","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8f75ee02.chunk.js","sourcesContent":["export default URL = \"http://0.0.0.0:8000/apis/\";\n","import { React, useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport url from \"./BaseURL\";\nimport { Link } from \"react-router-dom\";\nimport EmojiObjectsIcon from \"@mui/icons-material/EmojiObjects\";\nimport Notifications from \"react-notifications-menu\";\n// import Alert from '@mui/material/Alert';\n// import AlertTitle from '@mui/material/AlertTitle';\nfunction Navbar({ fixed }) {\n  // const DEFAULT_NOTIFICATION = {\n  //   image:\n  //     \"https://t3.ftcdn.net/jpg/01/34/49/84/360_F_134498430_vn2ciA0xKdMnxKIl1oAv4cY6qkybEBnz.webp\",\n  //   message: \"Temperature Exceeding-Check it out!\",\n  //   detailPage: \"/nodes\",\n  //   receivedTime: \"3h ago\",\n  // };\n\n  const [data, setData] = useState([]);\n  \n  useEffect(() => {\n    axios.get(url + \"alerts/\")\n      .then((res) => {\n      setData(res.data.alerts);\n      console.log(res.data.alerts);\n      })\n      .catch((error) => console.log(error));\n\n    const interval = setInterval(() => {\n      axios.get(url + \"alerts/\").then((res) => {\n        setData(res.data.alerts);\n        console.log(res.data.alerts);\n      })\n      .catch((error) => console.log(error));\n    },300000);\n    return () => clearInterval(interval);\n\n  },[])\n\n\n  // const [navbarOpen, setNavbarOpen] = React.useState(false);\n  return (\n    <nav class=\"bg-gray-700 py-4 md:py-4 text-white text-2xl font-semibold\">\n      <div class=\"grid grid-cols-3 sm:grid-cols-6 justify-center\">\n\n        <div class=\"flex justify-center items-center col-span-2 col-start-1\">\n          <EmojiObjectsIcon className=\"flex items-center\" />\n          <span className=\"ml-2\">Light It Up!</span>\n        </div>\n        <div class=\"flex justify-center items-center col-span-2 col-start-3\">\n          <span class=\"text-4xl uppercase\"></span>\n        </div>\n        <div class=\"flex justify-center items-center col-span-2 col-start-5\">\n          <Notifications\n            icon=\"https://assets.ifttt.com/images/channels/651849913/icons/monochrome_large.png\"\n            data={data}\n            // markAsRead={data => console.log(data)}\n            header={{\n              title: \"Alerts\",\n              option: { text: \"Mark as Read All\", onClick:( () => {\n                let array = new Array();\n                data.map((record) => {\n                  array.push(record.id)\n                })\n                axios.put(url + 'alerts/',{\n                  params : {id_array : array}\n                })\n                .then((res) => {\n                  setData([]);\n                })\n              })}\n            }}\n          />\n        </div>\n\n        \n      </div>\n    </nav>\n\n  )\n\n}\n\nexport default Navbar;\n","export const SET_NODES = \"SET_NODES\";\nexport const SET_INST_VALUE = \"SET_INST_VALUE\";\nexport const SET_IO = \"SET_IO\";\nexport const SET_GLOBAL_TOGGLE = \"SET_GLOBAL_TOGGLE\";\nexport const SET_GLOBAL_DIM = \"SET_GLOBAL_DIM\";\nexport const SET_GLOBAL = \"SET_GLOBAL\";\nexport const SET_GLOBAL_TICK = \"SET_GLOBAL_TICK\";\nexport const SET_TAB = \"SET_TAB\";\n","import {\n  SET_NODES,\n  SET_INST_VALUE,\n  SET_IO,\n  SET_GLOBAL_TOGGLE,\n  SET_GLOBAL_DIM,\n  SET_GLOBAL,\n  SET_GLOBAL_TICK,\n  SET_TAB,\n} from \"./Actions\";\n\nconst node_reducer = (state, action) => {\n  if (action.type === SET_NODES) {\n    return {\n      ...state,\n      nodes: action.payload.nodes,\n      total: action.payload.nodes.length,\n    };\n  }\n  if (action.type === SET_INST_VALUE) {\n    let allNodes = [...state.nodes];\n\n    let obj = allNodes.find((node) => {\n      return node.id === action.payload.id;\n    });\n    obj.current = action.payload.curr;\n    obj.temp = action.payload.temp;\n    return { ...state, nodes: allNodes, total: allNodes.length };\n  }\n\n  if (action.type === SET_GLOBAL_TICK) {\n    return {\n      ...state,\n      global: { ...state.global, isGlobal: action.payload.status },\n    };\n  }\n  if (action.type === SET_IO) {\n    let allNodes = [...state.nodes];\n    if (state.total > 0) {\n      let obj = allNodes.find((node) => {\n        return node.id === action.payload.nodeID;\n      });\n\n      obj[action.payload.IOLine] = action.payload.value;\n    }\n    return { ...state, nodes: allNodes, total: allNodes.length };\n  }\n  if (action.type === SET_GLOBAL_TOGGLE) {\n    let allNodes = state.nodes;\n    allNodes.map((node) => {\n      node.relay = action.payload.value;\n    });\n    return {\n      ...state,\n      nodes: allNodes,\n      total: allNodes.length,\n      global: { ...state.global, globalStatus: action.payload.value },\n    };\n  }\n  if (action.type === SET_GLOBAL_DIM) {\n    let allNodes = state.nodes;\n    allNodes.map((node) => {\n      node.dim = action.payload.value;\n    });\n    return { ...state, nodes: allNodes, total: allNodes.length };\n  }\n  if (action.type === SET_GLOBAL) {\n    if (action.payload.feature === \"toggle\")\n      return {\n        ...state,\n        global: { ...state.global, isGlobal: action.payload.value },\n      };\n    if (action.payload.feature === \"dim\")\n      return {\n        ...state,\n        global: { ...state.global, globalValue: action.payload.value },\n      };\n  }\n  if (action.type === SET_TAB) {\n    return {\n      ...state,\n      tab: action.payload,\n    };\n  }\n};\n\nexport default node_reducer;\n","import React, { useContext, useReducer, useEffect } from \"react\";\nimport reducer from \"./NodeReducer\";\nimport {\n  SET_NODES,\n  SET_INST_VALUE,\n  SET_IO,\n  SET_GLOBAL_TOGGLE,\n  SET_GLOBAL_DIM,\n  SET_GLOBAL,\n  SET_GLOBAL_TICK,\n  SET_TAB\n} from \"./Actions\";\n\nconst getLocalStorage = () => {\n  let global = localStorage.getItem(\"global\");\n  if (global) return JSON.parse(localStorage.getItem(\"global\"));\n  else return { isGlobal: true, globalValue: 50, globalStatus: true };\n};\n\nconst getTab = () => {\n  let tab = localStorage.getItem(\"tabVal\");\n  if (tab) return localStorage.getItem(\"tabVal\");\n  else return 0;\n};\n\nconst initialState = {\n  nodes: [],\n  total: 0,\n  global: getLocalStorage(),\n  tabVal: getTab(),\n};\n\nconst NodeContext = React.createContext();\n\nexport const NodeProvider = ({ children }) => {\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  const setNodes = (nodes, total) => {\n    dispatch({ type: SET_NODES, payload: { nodes, total } });\n  };\n\n  const setInstValues = (id, curr, temp) => {\n    dispatch({\n      type: SET_INST_VALUE,\n      payload: { id, curr, temp },\n    });\n  };\n\n  const setIO = (nodeID, IOLine, value) => {\n    dispatch({\n      type: SET_IO,\n      payload: { nodeID, IOLine, value },\n    });\n  };\n\n  const setGlobalToggle = (value) => {\n    dispatch({\n      type: SET_GLOBAL_TOGGLE,\n      payload: { value },\n    });\n  };\n\n  const setGlobalDim = (value) => {\n    dispatch({\n      type: SET_GLOBAL_DIM,\n      payload: { value },\n    });\n    dispatch({\n      type: SET_GLOBAL,\n      payload: { value, feature: \"dim\" },\n    });\n  };\n\n  const setGlobalTick = (status) => {\n    dispatch({\n      type: SET_GLOBAL_TICK,\n      payload: { status },\n    });\n  };\n\n  const changeTab = (tab) => {\n    dispatch({\n      type: SET_TAB,\n      payload: { tab },\n    });\n  };\n\n  useEffect(() => {\n    localStorage.setItem(\"global\", JSON.stringify(state.global));\n  }, [state.global]);\n\n  useEffect(() => {\n    localStorage.setItem(\"tab\", state.tabVal);\n  }, [state.tabVal]);\n\n  return (\n    <NodeContext.Provider\n      value={{\n        ...state,\n        setNodes,\n        setInstValues,\n        setIO,\n        setGlobalToggle,\n        setGlobalDim,\n        setGlobalTick,\n        changeTab\n      }}\n    >\n      {children}\n    </NodeContext.Provider>\n  );\n};\n// make sure use\nexport const useNodeContext = () => {\n  return useContext(NodeContext);\n};\n","import React, { useState, useEffect } from \"react\";\nimport { useParams, useHistory } from \"react-router-dom\";\nimport { Typography, Slider, Switch, Button, Dialog,DialogActions,DialogContent,DialogContentText,DialogTitle } from \"@mui/material\";\nimport { makeStyles } from \"@mui/styles\";\nimport FlashOnIcon from \"@mui/icons-material/FlashOn\";\nimport DeviceThermostatIcon from \"@mui/icons-material/DeviceThermostat\";\nimport Chart from \"react-google-charts\";\nimport axios from \"axios\";\nimport url from \"./BaseURL\";\nimport { Link } from \"react-router-dom\";\nimport { useNodeContext } from \"../NodeContext\";\nimport ArrowBackIosNewIcon from \"@mui/icons-material/ArrowBackIosNew\";\nimport \"./nodes.css\";\nimport classnames from \"classnames\";\n\nconst useStyles = makeStyles({\n  root: {\n    width: 600,\n  },\n});\n\nconst StreetNode = () => {\n  const { id } = useParams();\n  const { nodes, global, setIO, setInstValues } = useNodeContext();\n\n  const item = nodes.find((node) => node.id === id);\n  const classes = useStyles();\n\n  const [graphData, setGraphData] = useState({ curr: [], temp: [] });\n  const [currError, setCurrError] = useState(false);\n  const [tempError, setTempError] = useState(false);\n  const [open, setOpen] = useState(false);\n\n  const history = useHistory();\n\n  useEffect(() => {\n    const insterval = setInterval(() => {\n      setCurrError(false);\n      setTempError(false);\n      axios\n        .get(url + \"graphValues/\", {\n          params: { id: id },\n        })\n        .then((res) => {\n          setGraphData(res.data);\n          setInstValues(id, res.data.curr[10][1], res.data.temp[10][1]);\n          console.log(res.data);\n        })\n        .catch((error) => {\n          setCurrError(true);\n          setTempError(true);\n        });\n    }, 15000);\n    return () => clearInterval(insterval);\n  }, []);\n\n  const marks = [\n    {\n      value: 25,\n      label: \"25%\",\n    },\n    {\n      value: 50,\n      label: \"50%\",\n    },\n    {\n      value: 75,\n      label: \"75%\",\n    },\n    {\n      value: 100,\n      label: \"100%\",\n    },\n  ];\n\n  return (\n    <div className=\"lg:container md:mx-auto mt-8 z-0\">\n      <div className=\"flex grid grid-flow-col grid-cols-6 gap-4 items-center m-8 mx-10 p-4 bg-gray-200 rounded-md  \">\n        <Link to=\"/\">\n          <ArrowBackIosNewIcon />\n        </Link>\n        <div className=\"flex col-span-5 items-center justify-start text-2xl text-primary font-bold \">\n          {id}\n        </div>\n        <div className=\"flex col-span-1 items-center justify-end\">\n          <Typography className=\"text-lg sm:text-sm text-primary font-bold\">\n            On/Off&nbsp; &nbsp;{\" \"}\n          </Typography>\n          <Switch\n            checked={item.relay}\n            disabled={global.isGlobal}\n            color=\"success\"\n            onChange={() => {\n              axios\n                .put(url + \"toggle/\", {\n                  params: { id: item.id, status: item.relay ? \"off\" : \"on\" },\n                })\n                .then((res) => {\n                  setIO(item.id, \"relay\", !item.relay);\n                  console.log(item);\n                });\n            }}\n            inputProps={{ \"aria-label\": \"controlled\" }}\n          />\n        </div>\n      </div>\n      <div className=\"flex z-99 grid grid-flow-col grid-cols-12 gap-4 items-center m-8 mx-10 \">\n        <div className=\"flex col-span-6 items-center bg-blue-200 bg-opacity-25 rounded-md p-6\">\n          <span>\n            <div className=\"text-gray-500 font-bold\">\n              Light Intensity &nbsp; &nbsp;\n            </div>\n          </span>\n          <Slider\n            size=\"large\"\n            className=\"mx-16\"\n            step={null}\n            disabled={global.isGlobal}\n            defaultValue={item.dim}\n            aria-label=\"Default\"\n            valueLabelDisplay=\"auto\"\n            marks={marks}\n            min={25}\n            max={100}\n            value={item.dim}\n            onChange={(event, newValue) => {\n              if (newValue !== item.dim) {\n                axios\n                  .put(url + \"dimming/\", {\n                    params: { id: id, value: newValue },\n                  })\n                  .then((res) => {\n                    setIO(id, \"dim\", newValue);\n                  });\n              }\n            }}\n          ></Slider>\n        </div>\n\n        <div className=\"flex items-center justify-center col-span-3 bg-blue-200 bg-opacity-25 rounded-md py-9 \">\n          <span>\n            <div className=\"text-gray-500 font-bold\">\n              Current flowing &nbsp;\n            </div>\n          </span>\n          <FlashOnIcon className=\"text-yellow-500\" />\n          <Typography className=\"text-gray-600\">\n            {\" \"}\n            &nbsp;{item.current} mA\n          </Typography>\n        </div>\n        <div className=\"flex items-center justify-center col-span-3 bg-blue-200 bg-opacity-25 rounded-md py-9\">\n          <span>\n            <div className=\"text-gray-500 font-bold\">Temperature &nbsp;</div>\n          </span>\n          <DeviceThermostatIcon className=\"text-red-500\" />\n          <Typography className=\"text-gray-600\">\n            {\" \"}\n            &nbsp;{item.temp} &deg; C\n          </Typography>\n        </div>\n      </div>\n\n      <div className=\"flex grid grid-flow-col gap-4 items-center justify-center mx-20 mb-20\">\n        \n        <div className=\"flex grid items-center justify-center col-span-2 mx-20 \">      \n            {/* <div className={classnames(\"flex text-gray-500 font-bold items-center justify-center display:none\",{\"display-error\": currError})}> */}\n            {currError && (<div className={classnames(\"flex text-gray-500 font-bold items-center justify-center display:none\")}>\n              Wait for 2 minutes till the values populate...\n            </div>)}\n          {!currError && (<Chart\n            width={\"550px\"}\n            height={\"300px\"}\n            chartType=\"LineChart\"\n            loader={<div>Loading Chart</div>}\n            data={graphData.curr}\n            options={{\n              hAxis: {\n                title: \"Time\",\n                maxValue: 15,\n                minValue: 0,\n                viewWindow: {\n                  max: 10,\n                },\n              },\n              vAxis: {\n                title: \"Current\",\n              },\n              colors: [\"#F59E0B\"],\n\n              legend: { position: \"none\" },\n              explorer: { axis: \"horizontal\" },\n              aggregationTarget: \"auto\",\n              animation: {\n                startup: true,\n                duration: 1000,\n                easing: \"linear\",\n              },\n            }}\n            rootProps={{ \"data-testid\": \"1\" }}\n          />)}\n          <div className=\"flex text-gray-500 font-bold items-center justify-center \">\n            Current Flowing\n          </div>\n        </div>\n        <div className=\"flex grid items-center justify-center col-span-2 mx-20 \">\n            {/* <div className={classnames(\"flex text-gray-500 font-bold items-center justify-center\",{\"display-error\": tempError})}> */}\n            {tempError && (<div className={classnames(\"flex text-gray-500 font-bold items-center justify-center\")}>\n              Wait for 2 minutes till the values populate...\n            </div>)}\n          {!tempError && (<Chart\n            width={\"550px\"}\n            height={\"300px\"}\n            chartType=\"LineChart\"\n            loader={<div>Loading Chart</div>}\n            data={graphData.temp}\n            options={{\n              hAxis: {\n                title: \"Time\",\n                maxValue: 15,\n                minValue: 0,\n                viewWindow: {\n                  max: 10,\n                },\n              },\n              vAxis: {\n                title: \"Temperature\",\n              },\n              colors: [\"#EF4444\"],\n\n              legend: { position: \"none\" },\n              explorer: { axis: \"horizontal\" },\n              aggregationTarget: \"auto\",\n              animation: {\n                startup: true,\n                duration: 1000,\n                easing: \"linear\",\n              },\n            }}\n            rootProps={{ \"data-testid\": \"1\" }}\n          />)}\n          <div className=\"flex text-gray-500 font-bold items-center justify-center \">\n            Temperature\n          </div>\n        </div>\n      </div>\n\n      <div className=\"flex grid grid-flow-row grid-cols-9 gap-4 grid-rows-1 p-6 bg-opacity-25 rounded-md\">\n          <Button\n              className=\"col-start-8 col-span-2\"\n              variant=\"contained\"\n              color=\"error\" \n              // sx={buttonSx}\n              //disabled={syncloading}\n              onClick={() => {\n                setOpen(true);\n                // axios\n                //   .delete(url + \"deleteNode/\",{\n                //     params: {\n                //       id: id,\n                //     },\n                //   }\n                //   )\n                //   ;\n              }}\n            >\n              Delete Node\n            </Button>\n            <Dialog \n              open={open}\n              onClose={() => {setOpen(false)}}\n              aria-labelledby=\"alert-dialog-title\"\n              aria-describedby=\"alert-dialog-description\"\n            >\n              <DialogTitle id=\"alert-dialog-title\">\n                {\"ALERT: Delete Node?\"}\n              </DialogTitle>\n              <DialogContent>\n                <DialogContentText id=\"alert-dialog-description\">\n                  System will delete all node related data.\n                </DialogContentText>\n              </DialogContent>\n              <DialogActions>\n                <Button onClick={() => {setOpen(false)}}>NO</Button>\n                <Button onClick={() => {\n                  axios\n                  .put(url + \"deleteNode/\",{\n                    params: {\n                      id: item.id,\n                    },\n                  }\n                  )\n                  .then((res) => {\n                    setOpen(false);\n                    history.push(\"/\");\n                });\n                // history.push(\"/\");\n                }} \n                autoFocus>\n                  YES\n                </Button>\n              </DialogActions>\n            </Dialog>\n            \n          </div>\n    </div>\n  );\n};\n\nexport default StreetNode;\n","import { React, useState, useEffect } from \"react\";\nimport Switch from \"@mui/material/Switch\";\nimport Typography from \"@mui/material/Typography\";\nimport { Grid } from \"@mui/material\";\nimport Brightness6Icon from \"@mui/icons-material/Brightness6\";\nimport FlashOnIcon from \"@mui/icons-material/FlashOn\";\nimport DeviceThermostatIcon from \"@mui/icons-material/DeviceThermostat\";\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport url from \"./BaseURL\";\nimport { useNodeContext } from \"../NodeContext\";\nimport classnames from \"classnames\";\n\n\nconst NodeItem = ({ item, ticked }) => {\n  const { global,setIO } = useNodeContext();\n\n  return (\n    <div className={classnames(\"flex flex-wrap items-center justify-center hover:shadow-md hover:scale-100 rounded-md py-4\",\n    {'bg-blue-100' : item.is_active === true},\n    {'bg-red-100' : item.is_active === false}\n    )}>\n      <Grid\n        container\n        xs={12}\n        // spacing={1}\n        className=\"flex items-center justify-center\"\n      >\n        <Grid item xs={4} className=\"flex items-center justify-center\">\n          <Link to={`/node/${item.id}`}>\n            <div className=\"flex font-bold text-gray-500 text-xl justify-start\">\n              {item.id}\n            </div>\n          </Link>\n        </Grid>\n        <Grid item xs={2} className=\"flex items-center justify-center\">\n          <div className=\"flex justify-end items-baseline\">\n            <Typography className=\"text-red-800\">\n              OFF\n            </Typography>\n            <Switch\n              checked={item.relay}\n              disabled={global.isGlobal}\n              onChange={() => {\n                axios\n                  .put(url + \"toggle/\", {\n                    params: { id: item.id, status: item.relay ? \"off\" : \"on\" },\n                  })\n                  .then((res) => {\n                    if(res.data.operation === true){\n                      // setIsActive(true);\n                      setIO(item.id,\"is_active\",true);\n                      setIO(item.id, \"relay\", !item.relay);\n                      // console.log(isActive);\n                      // console.log(item)\n                    }\n                    else{\n                      setIO(item.id,\"is_active\",false)\n                    }\n                    \n                    console.log(item);\n                  });\n              }}\n              inputProps={{ \"aria-label\": \"controlled\" }}\n            />\n            <Typography className=\"text-green-800\">\n              ON\n            </Typography>\n          </div>\n        </Grid>\n        <Grid item xs={2} className=\"flex items-center justify-center\">\n          <Brightness6Icon className=\"text-blue-500\" />\n          <Typography className=\"text-gray-600\">&nbsp; {item.dim} %</Typography>\n        </Grid>\n        <Grid item xs={2} className=\"flex items-center justify-center\">\n          <FlashOnIcon className=\"text-yellow-500\" />\n          <Typography className=\"text-gray-600\">\n            &nbsp; {item.current} mA\n          </Typography>\n        </Grid>\n        <Grid item xs={2} className=\"flex items-center justify-center\">\n          <DeviceThermostatIcon className=\"text-red-500\" />\n          <Typography className=\"text-gray-600\">\n            &nbsp; {item.temp} &deg; C\n          </Typography>\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nexport default NodeItem;\n","import React, { useState, useEffect } from \"react\";\nimport TextField from \"@mui/material/TextField\";\nimport AdapterDateFns from \"@mui/lab/AdapterDateFns\";\nimport LocalizationProvider from \"@mui/lab/LocalizationProvider\";\nimport TimePicker from \"@mui/lab/TimePicker\";\nimport InputLabel from \"@mui/material/InputLabel\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport FormControl from \"@mui/material/FormControl\";\nimport Select from \"@mui/material/Select\";\n\nexport const TimeSelecter = ({ val, idx, sch, setSch }) => {\n  const [startValue, setStartValue] = useState(val.from);\n  const [endValue, setEndValue] = useState(val.to);\n\n  return (\n    <div className=\"flex grid grid-flow-col gap-1\">\n      <div className=\"flex items-center justify-start p-4 rounded-md \">\n        <LocalizationProvider className=\"\" dateAdapter={AdapterDateFns}>\n          <TimePicker\n            disabled={idx == 0}\n            label=\"Start Time\"\n            value={startValue}\n            onChange={(newValue) => {\n              setSch([\n                ...sch.slice(0, idx),\n                { ...sch[idx], from: newValue.toLocaleString() },\n                ...sch.slice(idx + 1),\n              ]);\n            }}\n            renderInput={(params) => <TextField {...params} />}\n          />\n        </LocalizationProvider>\n      </div>\n      <div className=\"flex items-center justify-start p-4 rounded-md \">\n        <LocalizationProvider className=\"\" dateAdapter={AdapterDateFns}>\n          <TimePicker\n            disabled={idx === sch.length - 1}\n            label=\"End Time\"\n            value={endValue}\n            onChange={(newValue) => {\n              setSch([\n                ...sch.slice(0, idx),\n                { ...sch[idx], to: newValue },\n                { ...sch[idx + 1], from: newValue },\n                ...sch.slice(idx + 2),\n              ]);\n              console.log(sch);\n            }}\n            renderInput={(params) => <TextField {...params} />}\n          />\n        </LocalizationProvider>\n      </div>\n      <div className=\"flex items-center justify-start p-4 rounded-md \">\n        <FormControl sx={{ m: 1, minWidth: 120 }}>\n          <InputLabel id=\"demo-simple-select-helper-label\">\n            Intensity\n          </InputLabel>\n          <Select\n            labelId=\"demo-simple-select-helper-label\"\n            id=\"demo-simple-select-helper\"\n            value={sch[idx].i}\n            label=\"Intensity\"\n            onChange={(e) =>\n              setSch([\n                ...sch.slice(0, idx),\n                { ...sch[idx], i: e.target.value },\n                ...sch.slice(idx + 1),\n              ])\n            }\n          >\n            <MenuItem value={25}>25</MenuItem>\n            <MenuItem value={50}>50</MenuItem>\n            <MenuItem value={75}>75</MenuItem>\n            <MenuItem value={100}>100</MenuItem>\n          </Select>\n        </FormControl>\n        {/* <IntensitySelecter /> */}\n      </div>\n    </div>\n  );\n};\n","import React, { useState } from \"react\";\n\nfunction usePagination(data, itemsPerPage) {\n  const [currentPage, setCurrentPage] = useState(1);\n  const maxPage = Math.ceil(data.length / itemsPerPage);\n\n  function currentData() {\n    const begin = (currentPage - 1) * itemsPerPage;\n    const end = begin + itemsPerPage;\n    return data.slice(begin,end);\n  }\n\n  function next() {\n    setCurrentPage(currentPage => Math.min(currentPage + 1, maxPage));\n  }\n\n  function prev() {\n    setCurrentPage(currentPage => Math.max(currentPage - 1, 1));\n  }\n\n  function jump(page) {\n    const pageNumber = Math.max(1, page);\n    setCurrentPage(currentPage => Math.min(pageNumber, maxPage));\n  }\n\n  return { next, prev, jump, currentData, currentPage, maxPage };\n}\n\nexport default usePagination;","import React, { useState,useEffect } from \"react\";\nimport Pagination from '@mui/material/Pagination';\nimport usePagination from \"./Pagination\";\nimport axios from \"axios\";\nimport url from \"../BaseURL\";\nimport Stack from '@mui/material/Stack';\nimport Alert from '@mui/material/Alert';\nimport AlertTitle from '@mui/material/AlertTitle';\nimport Skeleton from '@mui/material/Skeleton';\nimport { grey } from '@mui/material/colors';\n\nexport default function DisplayLogs(){\n    const [data,setData] = useState([]);\n    let [page, setPage] = useState(1);\n    const [loading,setLoading] = useState(false);\n    const PER_PAGE = 10;\n\n    const count = Math.ceil(data.length/ PER_PAGE);\n    const _DATA = usePagination(data, PER_PAGE);\n\n    const handleChange = (e, p) => {\n        setPage(p);\n        _DATA.jump(p);\n    };\n    useEffect(() => {\n        setLoading(true);\n        axios.get(url + \"logs/\").then((res) => {\n            setData(res.data.logs);\n            setLoading(false);\n        })\n        .catch((error) => {\n            console.log(error);\n        });\n    }, []);\n\n    return (\n        <div>\n            <Pagination\n                count={count}\n                size=\"large\"\n                page={page}\n                color='primary'\n                onChange={handleChange}\n                sx={{\n                    m:2,\n                    p:2,\n                    ml:-2,\n                    pl:-2,\n                    mt:-1\n                }}\n            />\n            <Stack spacing={1}>\n                {loading ? (\n                    <div>\n                        <Skeleton \n                            variant=\"rounded\"\n                            animation=\"wave\"\n                            height='20%'\n\n                        />\n                        <Skeleton \n                            variant=\"rounded\"\n                            animation=\"wave\"\n                            height='20%'\n\n                        />\n                    </div>\n                    \n                \n                ) : (\n                \n                    _DATA.currentData().map((record) => {\n                        const date = new Date(record.timestamp);\n                        const day = date.toLocaleString('en-IN',{day:'2-digit'});\n                        const month = date.toLocaleString('en-IN',{month:\"short\"});\n                        const year = date.getFullYear();\n                        const time = date.toLocaleString('en-IN',{hour:\"2-digit\",minute:\"2-digit\"});\n                        const min = date.getMinutes();\n                        const color = handleColor();\n\n                        function handleColor(){\n                            if(record.operation_type === \"information\"){\n                                return 'info';\n                            }\n                            else if(record.success === true){\n                                return 'success';\n                            }\n                            else if(record.success === false){\n                                return 'error';\n                            }\n                        }\n\n                        return (\n                        <Alert\n                            color={color}\n                            severity={color}\n                            sx={{\n                                fontSize:19,\n                                fontWeight: 'medium'\n                            }}\n                        >\n                            <AlertTitle\n                                sx={{\n                                    fontSize:21\n                                }}\n                            >\n                                <strong>{record.message}</strong>\n                            </AlertTitle>\n                            {day}-{month}-{year} {time}\n                        </Alert>\n                        )\n                    })\n                )}\n            </Stack>\n\n        </div>\n    )\n}\n","import React, { useState } from \"react\";\nimport AdapterDateFns from \"@mui/lab/AdapterDateFns\";\nimport LocalizationProvider from \"@mui/lab/LocalizationProvider\";\nimport MobileTimePicker from \"@mui/lab/MobileTimePicker\";\nimport TextField from '@mui/material/TextField';\nimport InputLabel from \"@mui/material/InputLabel\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport FormControl from \"@mui/material/FormControl\";\nimport Select from \"@mui/material/Select\";\nimport Grid from '@mui/material/Grid';\n\nexport default function Slot({value,index,schedule,setSchedule}){\n    const [startTime,setStartTime] = useState(value.from);\n    const [endTime,setEndTime] = useState(value.to);\n    const [intensity,setIntensity] = useState(value.i);\n    return (\n        <Grid\n            container\n            direction=\"row\"\n            justifyContent=\"center\"\n            alignItems=\"center\"\n            spacing={2}\n        >\n            <Grid item xs={5}>\n                <LocalizationProvider className=\"\" dateAdapter={AdapterDateFns}>\n                    <MobileTimePicker\n                        label=\"Start Time\"\n                        value={schedule[index].from}\n                        disabled={index === 0}\n                        onChange={(newValue) => {\n                            const previous = {from:schedule[index-1].from,to:newValue,i:schedule[index-1].i}\n                            const current = {from:newValue,to:schedule[index].to,i:schedule[index].i}\n                            setSchedule([\n                                ...schedule.slice(0,index-1),\n                                previous,\n                                current,\n                                ...schedule.slice(index+1)\n                            ]);\n                            setStartTime(newValue)\n                        }}\n                        renderInput={(params) => <TextField {...params} />}\n                    />\n                </LocalizationProvider>\n            </Grid>\n            <Grid item xs={5}>\n                <LocalizationProvider className=\"\" dateAdapter={AdapterDateFns}>\n                    <MobileTimePicker\n                        label=\"End Time\"\n                        value={schedule[index].to}\n                        disabled={index === (schedule.length - 1)}\n                        onChange={(newValue) => {\n                            const next = {from:newValue,to:schedule[index+1].to,i:schedule[index+1].i};\n                            const current = {from:schedule[index].from,to:newValue,i:schedule[index].i};\n                            setSchedule([\n                                ...schedule.slice(0,index),\n                                current,\n                                next,\n                                ...schedule.slice(index+2)\n                            ]);\n                            setEndTime(newValue);\n                        }}\n                        renderInput={(params) => <TextField {...params} />}\n                    />\n                </LocalizationProvider>\n            </Grid>\n            <Grid item xs={2}>\n                <FormControl sx={{ m: 1, minWidth: 120 }}>\n                    <InputLabel id=\"intensity-label\">\n                        Intensity\n                    </InputLabel>\n                    <Select\n                        labelId=\"intensity-label\"\n                        value={schedule[index].i}\n                        onChange={(e) => {\n                            setSchedule([\n                                ...schedule.slice(0,index),\n                                {...schedule[index],i:e.target.value},\n                                ...schedule.slice(index+1)\n                            ]);\n                            setIntensity(e.target.value);\n                        }}\n                        label=\"Intensity\"\n                    >\n                        <MenuItem value={25}>25</MenuItem>\n                        <MenuItem value={50}>50</MenuItem>\n                        <MenuItem value={75}>75</MenuItem>\n                        <MenuItem value={100}>100</MenuItem>\n                    </Select>\n                </FormControl>\n            </Grid>\n        </Grid>\n    )\n}","import React, { useState, useEffect } from \"react\";\nimport Dialog from \"@mui/material/Dialog\";\nimport DialogActions from \"@mui/material/DialogActions\";\nimport DialogContent from \"@mui/material/DialogContent\";\nimport DialogContentText from \"@mui/material/DialogContentText\";\nimport DialogTitle from \"@mui/material/DialogTitle\";\nimport Button from \"@mui/material/Button\";\nimport { TextField } from \"@mui/material\";\nimport InputLabel from \"@mui/material/InputLabel\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport FormControl from \"@mui/material/FormControl\";\nimport Select from \"@mui/material/Select\";\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\nimport Checkbox from \"@mui/material/Checkbox\";\nimport Typography from \"@mui/material/Typography\";\nimport Slot from \"./Slot\";\nimport axios from \"axios\";\nimport url from \"../BaseURL\";\nimport Divider from \"@mui/material/Divider\";\nimport IconButton from \"@mui/material/IconButton\";\nimport CloseIcon from \"@mui/icons-material/Close\";\n\nexport default function CreateNewSchedule(props) {\n  const [open, setOpen] = useState(props.open);\n  const [name, setName] = useState(\"\");\n  const [slots, setSlots] = useState(3);\n  const sunrise = JSON.parse(localStorage.getItem(\"sunrise\"));\n  const sunset = JSON.parse(localStorage.getItem(\"sunset\"));\n  const [makeActive, setMakeActive] = useState(false);\n  const [schedule, setSchedule] = useState([\n    { from: sunset, to: \"\", i: 100 },\n    { from: \"\", to: \"\", i: 100 },\n    { from: \"\", to: sunrise, i: 100 },\n  ]);\n  const [disableSubmitButton,setDisable] = useState(true);\n\n  const handleClose = () => {\n    setOpen(false);\n    props.onClose();\n  };\n  const handleSubmit = () => {\n    // setOpen(false);\n    console.log(schedule);\n    props.onClose();\n    axios\n      .post(url + \"createOrEditSchedule/\", {\n        schedule_name: name,\n        no_of_slots: slots,\n        make_active: makeActive,\n        schedule: schedule,\n      })\n      .then((res) => {\n        setOpen(false);\n        axios\n            .get(url + 'getAllSchedules/')\n            .then((res) => {\n                props.setSchedules(res.data.schedules);\n            })\n      });\n  };\n\n  const handleChange = (event) => {\n    const newValue = event.target.value;\n\n    console.log(slots - newValue);\n    if (slots - newValue === -1) {\n      const data = {\n        from: schedule.slice(-2, -1)[0].to,\n        to: schedule.slice(-1)[0].from,\n        i: 100,\n      };\n      setSchedule([...schedule.slice(0, -1), data, ...schedule.slice(-1)]);\n    } else if (slots - newValue === -2) {\n      const data = [\n        { from: schedule.slice(-2, -1)[0].to, to: \"\", i: 100 },\n        { from: \"\", to: schedule.slice(-1)[0].from, i: 100 },\n      ];\n      setSchedule([...schedule.slice(0, -1), ...data, ...schedule.slice(-1)]);\n    } else if (slots - newValue === 1) {\n      setSchedule([...schedule.slice(0, -2), ...schedule.slice(-1)]);\n    } else if (slots - newValue === 2) {\n      setSchedule([...schedule.slice(0, -3), ...schedule.slice(-1)]);\n    }\n    setSlots(newValue);\n  };\n\n  return (\n    <Dialog\n      open={open}\n      fullWidth={true}\n      sx={{\n        fontSize: 24,\n      }}\n      maxWidth=\"xl\"\n    >\n      <DialogTitle sx={{fontSize:24}}>Create New Schedule\n        <IconButton\n            onClick={handleClose}\n            sx={{\n              position: \"absolute\",\n              right: 8,\n              top: 8,\n            }}\n          >\n            <CloseIcon fontSize=\"large\" />\n          </IconButton>\n      </DialogTitle>\n      <Divider/>\n      <form>\n        <DialogContent>\n          <TextField\n            label=\"Schedule Name\"\n            variant=\"outlined\"\n            required\n            value={name}\n            onChange={(e) => {\n                setName(e.target.value);\n                setDisable(false);\n                if(e.target.value === \"\"){\n                    setDisable(true);\n                }\n            }}\n            fullWidth\n            size=\"large\"\n            sx={{\n              my: 4,\n              fontSize:24,\n            }}\n          />\n          <br />\n          <FormControl sx={{ my: 2,fontSize:20 }}>\n            <InputLabel htmlFor=\"slots-label\">Slots</InputLabel>\n            <Select\n              value={slots}\n              label=\"Slots\"\n              onChange={handleChange}\n              id=\"slots-label\"\n            >\n              <MenuItem value={3}>3</MenuItem>\n              <MenuItem value={4}>4</MenuItem>\n              <MenuItem value={5}>5</MenuItem>\n            </Select>\n            <br />\n            <FormControlLabel\n              control={\n                <Checkbox\n                  checked={makeActive}\n                  onChange={(e) => setMakeActive(e.target.checked)}\n                  sx={{'& .MuiSvgIcon-root': { fontSize: 32 } }}\n                />\n              }\n              label=\"Mark schedule as active? (System will follow this schedule)\"\n              sx={{\n                my: 3,\n                fontSize: 32\n              }}\n            />\n          </FormControl>\n          <DialogContentText\n            sx={{\n              fontSize: 20,\n              color: \"black\",\n              mb: 3,\n            }}\n          >\n            <Typography variant=\"h6\">\n              Sunrise Time:{\" \"}\n              <span className=\"font-bold\">\n                {new Date(sunrise).toLocaleTimeString()}\n              </span>\n            </Typography>\n            <Typography variant=\"h6\">\n              Sunset Time:{\" \"}\n              <span className=\"font-bold\">\n                {new Date(sunset).toLocaleTimeString()}\n              </span>\n            </Typography>\n            \n          </DialogContentText>\n\n          {schedule.map((value, index) => (\n            <Slot\n              value={value}\n              index={index}\n              schedule={schedule}\n              setSchedule={setSchedule}\n            />\n          ))}\n        </DialogContent>\n        <DialogActions>\n          <Button variant=\"outlined\" onClick={handleClose}>\n            Cancel\n          </Button>\n          <Button variant=\"contained\" onClick={handleSubmit} type=\"Submit\" disabled={disableSubmitButton}>\n            Submit\n          </Button>\n        </DialogActions>\n      </form>\n    </Dialog>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport Dialog from \"@mui/material/Dialog\";\nimport DialogActions from \"@mui/material/DialogActions\";\nimport DialogContent from \"@mui/material/DialogContent\";\nimport DialogContentText from \"@mui/material/DialogContentText\";\nimport DialogTitle from \"@mui/material/DialogTitle\";\nimport Button from \"@mui/material/Button\";\nimport Snackbar from '@mui/material/Snackbar';\nimport Typography from \"@mui/material/Typography\";\nimport Slot from \"./Slot\";\nimport axios from \"axios\";\nimport url from \"../BaseURL\";\nimport IconButton from \"@mui/material/IconButton\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport Divider from \"@mui/material/Divider\";\nimport CancelIcon from '@mui/icons-material/Cancel';\nimport CheckCircleIcon from '@mui/icons-material/CheckCircle';\nimport Alert from '@mui/material/Alert';\n\nexport default function ViewEditSchedule(props) {\n  const [open, setOpen] = useState(true);\n  const [name, setName] = useState(props.name);\n  const [slots, setSlots] = useState(null);\n  const sunrise = JSON.parse(localStorage.getItem(\"sunrise\"));\n  const sunset = JSON.parse(localStorage.getItem(\"sunset\"));\n  const [makeActive, setMakeActive] = useState(null);\n  const [schedule, setSchedule] = useState([]);\n  const [makeActiveAlert,setMakeActiveAlert] = useState(false);\n  const [editFeedback,setEditFeedback] = useState(false);\n\n  const handleClose = () => {\n    setOpen(false);\n    props.closeEditSchedule();\n  };\n\n  const handleEdit = () => {\n    setEditFeedback(false);\n    axios\n      .put(url + \"createOrEditSchedule/\",{\n        schedule_name: name,\n        schedule: schedule,\n      })\n      .then((res) => {\n        console.info(\"Edit Schedule Successful\");\n        if(res.data.message === \"Success\"){\n          setEditFeedback(true);\n        }\n      })\n  }\n\n  const handleActivate = () => {\n    axios\n        .put(url + 'changeActiveSchedule/', {\n            schedule : {\n                schedule_name: name\n            }\n        })\n        .then((res) => {\n            setMakeActive(true);\n            setMakeActiveAlert(false)\n            props.updateScheduleList();\n        })\n  }\n\n  useEffect(() => {\n    axios\n      .get(url + \"getScheduleInfo/\", {\n        params: {\n          schedule_name: props.name,\n        },\n      })\n      .then((res) => {\n        setName(res.data.schedule_name);\n        setSlots(res.data.no_of_slots);\n        setMakeActive(res.data.currently_active);\n        setSchedule(res.data.slots);\n      });\n  }, []);\n\n  return (\n    <Dialog\n      open={open}\n      fullWidth={true}\n      sx={{\n        fontSize: 24,\n      }}\n      maxWidth=\"xl\"\n    >\n      <DialogTitle sx={{ fontSize: 26 }}>\n        Edit Schedule\n        <IconButton\n          onClick={handleClose}\n          sx={{\n            position: \"absolute\",\n            right: 8,\n            top: 8,\n          }}\n        >\n          <CloseIcon fontSize=\"large\" />\n        </IconButton>\n      </DialogTitle>\n      <Divider />\n      <form>\n        <DialogContent>\n          <DialogContentText\n            sx={{\n              fontSize: 18,\n              color: \"black\",\n              mb: 3,\n            }}\n            className=\"space-y-2\"\n          >\n            <Typography variant=\"h6\">\n              Name of Schedule: <span className=\"font-bold\">{name}</span>\n            </Typography>\n            <Typography variant=\"h6\">\n              Number of slots: <span className=\"font-bold\">{slots}</span>\n            </Typography>\n            <Typography variant=\"h6\">\n              Schedule Active: <span className=\"font-bold\">\n                {\n                    makeActive ? <CheckCircleIcon className=\"text-green-600\"/> : <CancelIcon className=\"text-red-500\"/>\n                }\n              </span>\n              \n            </Typography>\n            <Typography variant=\"h6\">\n              Sunrise Time:{\" \"}\n              <span className=\"font-bold\">\n                {new Date(sunrise).toLocaleTimeString()}\n              </span>\n            </Typography>\n            <Typography variant=\"h6\">\n              Sunset Time:{\" \"}\n              <span className=\"font-bold\">\n                {new Date(sunset).toLocaleTimeString()}\n              </span>\n            </Typography>\n          </DialogContentText>\n\n          {schedule.map((value, index) => (\n            <Slot\n              value={value}\n              index={index}\n              schedule={schedule}\n              setSchedule={setSchedule}\n            />\n          ))}\n        </DialogContent>\n        <DialogActions>\n          <Button \n            variant=\"contained\"\n            color=\"error\"\n            onClick={() => setMakeActiveAlert(true)}\n            disabled={makeActive}\n           >\n            Activate Schedule\n           </Button>\n           {\n            <Dialog\n              open={makeActiveAlert}\n              sx={{\n                fontSize:20\n              }}\n            >\n              <DialogTitle>\n                Alert!\n              </DialogTitle>\n              <DialogContent>\n                <DialogContentText>\n                  The system will follow the selected schedule\n                </DialogContentText>\n                <DialogActions>\n                  <Button\n                    variant='contained'\n                    onClick={() => setMakeActiveAlert(false)}\n                  >\n                    Cancel\n                  </Button>\n                  <Button\n                    variant=\"contained\"\n                    color=\"error\"\n                    onClick={handleActivate}\n                  >\n                    Activate\n                  </Button>\n                </DialogActions>\n              </DialogContent>\n\n            </Dialog>\n           }\n           <Button\n            variant=\"contained\"\n            onClick={handleEdit}\n           >\n            Apply Changes\n           </Button>\n\n        </DialogActions>\n      </form>\n      <Snackbar\n        open={editFeedback}\n        autoHideDuration={3000}\n        anchorOrigin ={{vertical:'top',horizontal:'right'}}\n        onClose={() => setEditFeedback(false)}\n      >\n        <Alert severity=\"success\" sx={{ width: '100%',fontSize:24 }}>\n          Edit operation was successful!\n        </Alert>\n\n      </Snackbar>\n    </Dialog>\n  );\n}\n","import React, { useState,useEffect } from \"react\";\nimport Button from '@mui/material/Button';\nimport TaskAltIcon from '@mui/icons-material/TaskAlt';\nimport DeleteForeverOutlinedIcon from '@mui/icons-material/DeleteForeverOutlined';\nimport axios from \"axios\";\nimport url from \"../BaseURL\";\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport Dialog from '@mui/material/Dialog';\nimport ViewEditSchedule from \"./ViewEditSchedule\";\n\n\n\nfunction ScheduleItem({schedule,index,schedules,setSchedules}){\n    const [deleteAlert,setDeleteAlert] = useState(false);\n    const [editSchedule,setEditSchedule] = useState(false);\n\n    const updateScheduleList = () => {\n        axios\n            .get(url + 'getAllSchedules/')\n            .then((res) => {\n                setSchedules(res.data.schedules);\n                // console.log('updateScheduleList');\n            })\n    };\n\n    const handleEditScheduleClose = () => {\n        setEditSchedule(false);\n    };\n\n    const handleDelete = () => {\n        axios.\n            delete(url + 'deleteSchedule/',{\n                data : {\n                    schedule_name : schedule.schedule_name\n                }\n            })\n            .then((res) => {\n                axios\n                    .get(url + 'getAllSchedules/')\n                    .then((res) => {\n                        setSchedules(res.data.schedules);\n                    })  \n                \n            })\n        setDeleteAlert(false);\n    }\n\n\n\n    return(\n        <div className='grid grid-flow-col grid-cols-10 gap-4 items-center  text-xl font-normal p-4  bg-gray-100 rounded-md '>\n            <div className='flex col-span-4 justify-start font-bold'>\n                {schedule.schedule_name}\n            </div>\n            <div className='flex col-span-1 justify-center'>\n                {schedule.currently_active ? <TaskAltIcon className=\"text-green-600\" fontSize=\"large\"/> :  \"\" }\n                \n            </div>\n            <div className='flex col-span-3 justify-around'>\n                <Button \n                    variant=\"contained\"\n                    onClick={() => setEditSchedule(true)}\n                >\n                    VIEW/EDIT\n                </Button>\n                {\n                    editSchedule && \n                    <ViewEditSchedule \n                        closeEditSchedule={handleEditScheduleClose}\n                        name={schedule.schedule_name}\n                        updateScheduleList={updateScheduleList}\n                    />\n                }\n            </div>\n            <div className='flex col-span-2 justify-around'>\n                <Button \n                    variant=\"contained\"\n                    color=\"error\"\n                    disabled={schedule.currently_active}\n                    onClick={()=> setDeleteAlert(true)}\n                >\n                    <DeleteForeverOutlinedIcon />\n                </Button>\n            </div>\n            {\n                deleteAlert && \n                <Dialog\n                    open={deleteAlert}\n                    onClose={() => setDeleteAlert(false)}\n                >\n                    <DialogTitle>Warning</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>\n                            Are you sure you want to delete the selected schedule?\n                        </DialogContentText>\n                        <DialogActions>\n                            <Button \n                                onClick={() => {setDeleteAlert(false)}}\n                                variant=\"outlined\"\n                            >\n                                NO\n                            </Button>\n                            <Button\n                                onClick={handleDelete}\n                                variant=\"contained\"\n                                color=\"error\"\n                            >\n                                YES\n                            </Button>\n\n                        </DialogActions>\n                    </DialogContent>\n\n                </Dialog>\n            }\n        </div>\n    )\n\n}\n\nexport default ScheduleItem;","import React, { useState,useEffect } from \"react\";\nimport Stack from '@mui/material/Stack';\nimport Button from '@mui/material/Button';\nimport CreateNewSchedule from './CreateNewSchedule';\nimport axios from \"axios\";\nimport url from \"../BaseURL\";\nimport ScheduleItem from \"./ScheduleItem\";\n\n\n\nfunction ListOfAllSchedules(){\n\n    const [newSchedule,setNewSchedule] = useState(false);\n    const [listSchedules,setList] = useState([]);\n\n    useEffect(() => {\n        axios\n            .get(url + 'getAllSchedules/')\n            .then((res) => {\n                setList(res.data.schedules);\n            })\n\n    },[])\n\n    const handleCreateScheduleClose = () => {\n        setNewSchedule(false);\n    }\n\n    return (\n        <div>\n            <div className='text-2xl bg-blue-100 p-4 rounded-md text-gray-700 font-semibold mb-2'>\n                List of All Schedules\n            </div>\n            <div className='grid justify-end my-6'>\n                <Button\n                    variant='contained'\n                    onClick={() => setNewSchedule(true)}\n                >\n                    Create new schedule\n                </Button>\n                {newSchedule && \n                    <CreateNewSchedule \n                        open={true} \n                        onClose={handleCreateScheduleClose}\n                        setSchedules={setList}\n                    />\n                }\n            </div>\n            <Stack spacing={1}>\n                {\n                    listSchedules.map((schedule,index) => (\n                        \n                        <ScheduleItem \n                            schedule={schedule} \n                            id={index} \n                            schedules={listSchedules}\n                            setSchedules={setList}\n                        />\n                        \n                    ))\n                }\n            </Stack>\n        </div>\n    )\n}\n\n\n\nexport default ListOfAllSchedules;","import React, { useState } from \"react\";\nimport Typography from '@mui/material/Typography';\nimport { TextField,Button } from \"@mui/material\";\nimport axios from \"axios\";\nimport url from \"../BaseURL\";\nexport default function AreaName(){\n    // JSON.parse(localStorage.getItem(\"sunrise\"));\n    const [name,setName] = useState(JSON.parse(localStorage.getItem(\"area_name\")));\n\n    const handleClick = () => {\n        axios\n            .put(url + \"areaName/\",{\n                area_name : name\n            })\n            .then((res) => {\n                localStorage.setItem('area_name',JSON.stringify(name));\n                window.location.reload(true);\n            });\n\n    }\n    return(\n        <div>\n            <Typography variant=\"h5\">\n                Set your Area Name\n            </Typography>\n            <TextField\n                label=\"Area Name\"\n                variant=\"outlined\"\n                value={name}\n                onChange={(e) => {\n                    setName(e.target.value);\n                }}\n                fullWidth\n                size=\"large\"\n                sx={{\n                    mt:4,\n                    fontSize:24,\n                }}\n            />\n            <Button\n                variant=\"contained\"\n                sx={{\n                    mt:4\n                }}\n                onClick={handleClick}\n            >\n                Save\n            </Button>\n        </div>\n    )\n}","import React, { useState,useEffect } from \"react\";\nimport Typography from '@mui/material/Typography';\nimport Switch from '@mui/material/Switch';\nimport Stack from '@mui/material/Stack';\nimport axios from \"axios\";\nimport url from \"../BaseURL\";\nexport default function EnableDisableSchedule(){\n    const [scheduleStatus,setScheduleStatus] = useState(null);\n\n    useEffect(() =>{\n        axios\n        .get(url + \"activateSchedule/\")\n        .then((res) => {\n            setScheduleStatus(res.data.status);\n        })\n        .catch((error) => console.log(error));\n    },[])\n    \n    const handleChange = (event) => {\n        axios\n            .put(url + \"activateSchedule/\",{\n                params: {\n                  status: !scheduleStatus,\n                },\n              })\n            .then((res) => {\n                setScheduleStatus(!scheduleStatus);\n            })\n        \n    }\n    return(\n        <div>\n            <Typography variant=\"h5\">\n                Enable or Disable schedules\n            </Typography>\n            <Typography variant=\"caption\">\n                Disabling schedules means the system will not follow a schedule and must be controlled manually.\n                <br/>\n                Enabling schedules means the system will follow a selected schedule.\n            </Typography>\n            <Stack direction=\"row\" spacing={1} alignItems=\"center\" sx={{mt:4}}>\n                <Typography>Disable Schedules</Typography>\n                <Switch\n                    checked={scheduleStatus}\n                    onChange={handleChange}\n                />\n                <Typography>Enable Schedules</Typography>\n            </Stack>\n        </div>\n    )\n}","import React, { useState,useEffect } from \"react\";\nimport Typography from '@mui/material/Typography';\nimport Switch from '@mui/material/Switch';\nimport Stack from '@mui/material/Stack';\nimport axios from \"axios\";\nimport url from \"../BaseURL\";\n\nexport default function EnableDisableTelemetry(){\n    const [telemetryStatus,setTelemetryStatus] = useState(null);\n\n    useEffect(() => {\n        axios\n        .get(url + \"setTelemetry/\",)\n        .then((res) => {\n            setTelemetryStatus(res.data.status);\n        })\n        .catch((error) => console.log(error));\n    },[])\n    \n    const handleChange = (event) => {\n        axios\n        .put(url + \"setTelemetry/\", {\n            params: {\n            status: !telemetryStatus,\n            },\n        })\n        .then((res) => {\n            setTelemetryStatus(!telemetryStatus);\n        })\n        .catch((error) => console.log(error));\n        \n    }\n    return(\n        <div>\n            <Typography variant=\"h5\">\n                Enable or Disable Telemetry\n            </Typography>\n            <Typography variant=\"caption\">\n                System collects current and temperature data from every streetlight after every two minutes. Disabling telemetry will turn off this operation.\n            </Typography>\n            <Stack direction=\"row\" spacing={1} alignItems=\"center\" sx={{mt:4}}>\n                <Typography>Disable Telemetry</Typography>\n                <Switch\n                    checked={telemetryStatus}\n                    onChange={handleChange}\n                />\n                <Typography>Enable Telemetry</Typography>\n            </Stack>\n        </div>\n    )\n}","import React, { useState,useEffect } from \"react\";\nimport Typography from '@mui/material/Typography';\nimport Switch from '@mui/material/Switch';\nimport Stack from '@mui/material/Stack';\nimport InputLabel from '@mui/material/InputLabel';\nimport MenuItem from '@mui/material/MenuItem';\nimport FormHelperText from '@mui/material/FormHelperText';\nimport FormControl from '@mui/material/FormControl';\nimport Select from '@mui/material/Select';\nimport axios from \"axios\";\nimport url from \"../BaseURL\";\n\nexport default function SyncWithAutoInterval(){\n    const [state,setState] = useState(true);\n    const [interval,setInterval] = useState(30);\n    useEffect(() => {\n        axios\n            .get(url + 'syncWithAutoInterval')\n            .then((res) => {\n                setState(res.data.status);\n                setInterval(res.data.interval);\n            })\n    },[])\n\n    const handleToggle = (event) => {\n        axios\n            .put(url + 'syncWithAutoInterval',{\n                status: !state\n            })\n            .then((res) => {\n                setState(!state);\n            });\n        \n    }\n\n    const handleChange = (e) => {\n        axios\n            .put(url + 'syncWithAutoInterval',{\n                interval : e.target.value\n            })\n            .then((res) => {\n                setInterval(e.target.value);\n            });\n        \n    }\n\n    return (\n        <div>\n            <Typography variant=\"h5\">\n                Sync With Auto Interval\n            </Typography>\n            <Typography variant=\"caption\">\n                The system performs a \"Sync with Auto\" operation after every {interval} minutes. This can be either switched off or the interval duration can be switched in the below dropdown \n            </Typography>\n            <Stack direction=\"row\" spacing={1} alignItems=\"center\" sx={{mt:4}}>\n                <Typography>Disable Sync With Auto Interval</Typography>\n                <Switch\n                    checked={state}\n                    onChange={handleToggle}\n                />\n                <Typography>Enable Sync With Auto Interval</Typography>\n            </Stack>\n            <FormControl sx={{ mt: 4, minWidth: 120 }}>\n                <InputLabel id=\"helper-label\">Interval</InputLabel>\n                <Select\n                    labelId=\"helper-label\"\n                    value={interval}\n                    label=\"Interval\"\n                    onChange={handleChange}\n                    disabled={!state}\n                >\n                    <MenuItem value={30}>30 minutes</MenuItem>\n                    <MenuItem value={60}>1 hour</MenuItem>\n                    <MenuItem value={120}>2 hour</MenuItem>\n                    <MenuItem value={240}>4 hour</MenuItem>\n                </Select>\n                <FormHelperText>Select interval duration for Sync with Auto</FormHelperText>\n            </FormControl>\n        </div>\n    )\n}","import React, { useState,useEffect } from \"react\";\nimport Typography from '@mui/material/Typography';\nimport axios from \"axios\";\nimport url from \"../BaseURL\";\n\nexport default function SystemInfo(){\n    const [version,setVersion] = useState(\"\");\n    const [releaseDate,setReleaseDate] = useState(\"\");\n    const [city,setCity] = useState(\"\");\n    const [lat,setLat] = useState(\"\");\n    const [lon,setLon] = useState(\"\");\n\n    useEffect(() => {\n      axios\n      .get(url + \"systemInformation/\")\n      .then((res) => {\n        setVersion(res.data.version);\n        setReleaseDate(res.data.release_date);\n        setCity(res.data.city);\n        setLat(res.data.lat);\n        setLon(res.data.lon);\n      })\n      .catch((err) => {\n        console.error(\"Error in system information\");\n      })\n    \n      \n    }, [])\n    \n\n\n    return (\n        <div>\n            <Typography variant='h5'>\n                System Information\n            </Typography>\n            <Typography variant=\"overline\">\n                System Location: {city} <br/>\n                Latitude: {lat} &emsp; Longitude: {lon} <br/>\n                Version Number: {version} <br/>\n                Release Date: {releaseDate}\n            </Typography>\n        </div>\n    )\n}","import React, { useState } from 'react';\nimport Typography from '@mui/material/Typography';\nimport Button from \"@mui/material/Button\"\nimport axios from \"axios\";\nimport url from \"../BaseURL\";\nimport Snackbar from '@mui/material/Snackbar';\nimport Alert from '@mui/material/Alert';\n\nexport default function DeleteLogs() {\n    const [openFeedback,setFeedback] = useState(false);\n    const handleClick = () => {\n        axios\n            .delete(url + \"logs/\")\n            .then((res) => {\n                if(res.data.message === \"success\"){\n                    setFeedback(true);\n                }\n            })\n    }\n    return (\n        <div>\n            <Typography variant=\"h5\">\n                Delete Logs\n            </Typography>\n            <Typography variant=\"caption\" sx={{mt:-2,mb:2}}>\n                Logs, current and temperature data older than 48 hours will be deleted.<br/>\n            </Typography>\n            <Button\n                variant=\"contained\"\n                sx={{\n                    mt:2,\n                }}\n                onClick={handleClick}\n                color=\"error\"\n            >\n                Delete Logs\n            </Button>\n            <Snackbar\n                open={openFeedback}\n                autoHideDuration={3000}\n                anchorOrigin ={{vertical:'top',horizontal:'right'}}\n                onClose={() => setFeedback(false)}\n            >\n                <Alert severity=\"success\" sx={{ width: '100%',fontSize:24 }}>\n                    Logs deleted successfully!\n                </Alert>\n\n            </Snackbar>\n        </div>\n    )\n}\n\n","import React, { useState } from 'react';\nimport Typography from '@mui/material/Typography';\nimport Button from \"@mui/material/Button\"\nimport axios from \"axios\";\nimport url from \"../BaseURL\";\nimport { Dialog,DialogContent,DialogContentText,DialogTitle } from \"@mui/material\";\nimport CircularProgress from \"@mui/material/CircularProgress\";\n\n\nexport default function RestartServer(){\n\n    const [open,setOpen] = useState(false);\n\n    const handleClick = () => {\n        axios\n        .post(url + 'restartServer/', {\n            status:true\n        })\n        .then((res) => {\n            setOpen(true);\n            setTimeout(() => {\n                window.location.reload();\n            }, 60000);\n        })\n    }\n\n    return(\n        <div>\n            <Typography variant=\"h5\">\n                Restart Server\n            </Typography>\n            <Typography variant=\"caption\" sx={{mt:-2,mb:2,color:'red'}}>\n                Caution: This will restart the backend server<br/>\n            </Typography>\n            <Button\n                variant=\"contained\"\n                sx={{\n                    mt:2,\n                }}\n                onClick={handleClick}\n                color=\"error\"\n            >\n                Restart Server\n            </Button>\n            <Dialog\n                open={open}\n                sx = {{\n                justifyContent: \"flex-center\",\n                alignItems: \"flex-center\",\n                fontSize:20,\n                fontWeight: 'bold',\n                }}\n            >\n                <DialogTitle>\n                    Restarting Server ...\n                </DialogTitle>\n                <DialogContent>\n                    <DialogContentText>\n                        Please Wait. Do not refresh <br/>\n                    </DialogContentText>\n                    <CircularProgress />\n                </DialogContent>\n            </Dialog>\n        </div>\n    )\n}","import React, { useState,useEffect } from \"react\";\nimport Grid from '@mui/material/Grid';\nimport List from '@mui/material/List';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemButton from '@mui/material/ListItemButton';\nimport ListItemText from '@mui/material/ListItemText';\nimport Divider from '@mui/material/Divider';\nimport classnames from \"classnames\";\nimport AreaName from \"./AreaName\";\nimport EnableDisableSchedule from \"./EnableDisableSchedules\";\nimport EnableDisableTelemetry from \"./EnableDisableTelemetry\";\nimport SyncWithAutoInterval from \"./SyncWithAutoInterval\";\nimport SystemInfo from \"./SystemInfo\";\nimport DeleteLogs from \"./DeleteLogs\";\nimport RestartServer from \"./RestartServer\";\nexport default function DisplaySettings(){\n    \n    const [currentSetting,setSetting] = useState(\"default\");\n    const options = [\n        \"Area Name\",\n        \"Enable/Disable Schedules\",\n        \"Enable/Disable Telemetry\",\n        \"Sync with Auto Interval\",\n        \"Delete Logs\",\n        \"Restart Server\",\n        \"System Info\",\n        \n    ];\n    return(\n        <Grid container spacing={1} sx={{height:'100%',m:4,p:4,ml:-4,fontSize:20,mt:-4}}>\n            <Grid item xs={4} className=\"\" >\n                <List >\n                        {options.map((text,index) => (\n                            <ListItem\n                                disablePadding\n                                className=\"border-b-2 border-gray-100\"\n                            >\n                                <ListItemButton onClick={() => setSetting(text)}>\n                                    <ListItemText\n                                        primary={text} primaryTypographyProps={{fontSize: 20}}/>\n                                </ListItemButton>\n                            </ListItem>\n                        ))}\n                </List>\n            </Grid>\n            <Divider orientation=\"vertical\" flexItem/>\n            <Grid item xs={7} sx={{m:2}}>\n                {(() => {\n                    if(currentSetting === 'default'){\n                        return(\n                            <div></div>\n                        )\n                    }\n                    else if(currentSetting === \"Area Name\"){\n                        return(\n                            <div>\n                                <AreaName/>\n                            </div>\n                        )\n                    }\n                    else if (currentSetting === \"Enable/Disable Schedules\"){\n                        return (\n                            <EnableDisableSchedule/>\n                        )\n                    }\n                    else if(currentSetting === \"Enable/Disable Telemetry\"){\n                        return (\n                            <EnableDisableTelemetry/>\n                        )\n                    }\n                    else if(currentSetting === \"Sync with Auto Interval\"){\n                        return (\n                            <SyncWithAutoInterval/>\n                        )\n                    }\n                    else if(currentSetting === \"System Info\"){\n                        return(\n                            <SystemInfo/>\n                        )\n                    }\n                    else if(currentSetting === \"Delete Logs\"){\n                        return(\n                            <DeleteLogs />\n                        )\n                    }\n                    else if(currentSetting === \"Restart Server\"){\n                        return(\n                            <RestartServer />\n                        )\n                    }\n\n                })()}\n            </Grid>\n        </Grid>\n    )\n}\n","import React, { useEffect, useState} from 'react';\nimport WbSunnyRoundedIcon from '@mui/icons-material/WbSunnyRounded';\nimport WbTwilightRoundedIcon from '@mui/icons-material/WbTwilightRounded';\nimport WbIncandescentRoundedIcon from '@mui/icons-material/WbIncandescentRounded';\nimport LightOutlinedIcon from '@mui/icons-material/LightOutlined';\nimport InfoOutlinedIcon from '@mui/icons-material/InfoOutlined';\nimport BoltOutlinedIcon from '@mui/icons-material/BoltOutlined';\nimport axios from \"axios\";\nimport url from '../BaseURL';\nimport classnames from \"classnames\";\n\n\n\nexport default function Home(){\n\n    const [sunrise,setSunrise] = useState(\"\");\n    const [sunset,setSunset] = useState(\"\");\n    const [total,setTotal] = useState(0)\n    const [active,setActive] = useState(0);\n    const [relay,setRelay] = useState(false);\n    const [intensity,setIntensity] = useState(25);\n    const [operation,setOperation] = useState(\"\");\n    const [status,setStatus] = useState(\"\");\n    const [energy,setEnergy] = useState(0);\n\n\n    useEffect(() => {\n        axios\n        .get(url + \"information/\")\n        .then((res) => {\n            console.log(res.data);\n            localStorage.setItem('sunrise',JSON.stringify(res.data.sunrise_ts));\n            localStorage.setItem('sunset',JSON.stringify(res.data.sunset_ts));\n            setSunrise(res.data.sunrise);\n            setSunset(res.data.sunset);\n            setTotal(res.data.total_nodes);\n            setActive(res.data.active_nodes);\n            setRelay(res.data.relay);\n            setIntensity(res.data.intensity);\n            setOperation(res.data.schedule);\n            setStatus(res.data.schedule_status);\n            setEnergy(res.data.energy_saved);\n          })\n          .catch((error) => console.log(error));\n\n    }, [])\n    \n\n    return (\n        <div class=\"grid grid-cols-1 md:grid-cols-3 gap-8 justify-center\">\n            <div class=\"bg-yellow-500 shadow-2xl p-6 rounded-2xl\">\n                <div class=\"flex items-center\">\n                    <span class=\"flex items-center justify-center rounded-full\">\n                        <WbSunnyRoundedIcon fontSize=\"large\" />\n                    </span>\n                    <span class=\"ml-2 text-2xl font-semibold text-black\">Sunrise</span>\n                </div>\n                <span class=\"block text-4xl font-semibold mt-4 text-left\">{sunrise}</span>\n            </div>\n            <div class=\"bg-gray-200 shadow-2xl p-6 rounded-2xl\">\n                <div class=\"flex items-center place-content-center\">\n                    <span class=\"flex items-center justify-center rounded-full\">\n                        <WbIncandescentRoundedIcon fontSize=\"large\"/>\n                    </span>\n                    <span class=\"ml-2 text-2xl font-semibold text-black justify-center\">Street Lights</span>\n                </div>\n                <span class=\"block text-4xl font-semibold mt-4 text-center\">{active} / {total}</span>\n            </div>\n            <div class=\"bg-yellow-500 shadow-2xl p-6 rounded-2xl \">\n                <div class=\"flex items-center place-content-end\">\n                    <span class=\"mr-2 text-2xl font-semibold text-black justify-center\">Sunset</span>\n                    <span class=\"flex items-center justify-center rounded-full\">\n                        <WbTwilightRoundedIcon fontSize=\"large\"/>\n                    </span>\n                    \n                </div>\n                <span class=\"block text-4xl font-semibold mt-4 text-right\">{sunset}</span>    \n            </div>\n            <div class=\"bg-green-500 shadow-2xl p-6 rounded-2xl col-span-2\">\n                <div class=\"flex items-center place-content-center\">\n                    <span class=\"mr-2 text-2xl font-semibold text-white  justify-center\">Energy Saved</span>\n                    <span class=\"flex items-center justify-start rounded-full\">\n                        <BoltOutlinedIcon fontSize=\"large\" color=\"warning\"/>\n                    </span>\n                    \n                </div>\n                <span class=\"block text-4xl font-semibold mt-4 text-center text-white\">{energy} kWh</span>    \n            </div>\n            \n            <div class=\"bg-gray-200 shadow-2xl p-6 rounded-2xl col-span-1\">\n                <div class=\"flex items-center place-content-start\">\n                    <span class=\"mr-2 text-2xl font-semibold text-black  justify-center\">Current Status</span>\n                    <span class=\"flex items-center justify-start rounded-full\">\n                        <InfoOutlinedIcon fontSize=\"large\" color=\"info\"/>\n                    </span>\n                    \n                </div>\n                { relay ? \n                    (<span class=\"block text-4xl font-semibold mt-4 text-left\">Lights are ON at {intensity}% intensity</span> )\n                    :\n                    (<span class=\"block text-4xl font-semibold mt-4 text-left\">Lights are OFF</span> )\n                }\n                <span class=\"block text-4xl font-semibold mt-4 text-left\"></span>    \n            </div>\n            <div class=\"bg-gray-700 shadow-2xl p-6 rounded-2xl col-span-3\">\n                <div class=\"flex items-center place-content-center\">\n                    <span class=\"mr-2 text-2xl font-semibold text-gray-100 justify-center\">Next Operation</span>\n                    <span class=\"flex items-center justify-center rounded-full\">\n                    <LightOutlinedIcon fontSize=\"large\" color=\"info\"/>\n                    </span>\n                    \n                </div>\n                <span class=\"block text-4xl font-semibold mt-4 text-left text-gray-100\">{operation}</span>    \n            </div>\n            \n        </div>\n    )\n}\n","import { React, useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport url from \"./BaseURL\";\nimport Snackbar from '@mui/material/Snackbar';\nimport Typography from \"@mui/material/Typography\";\nimport IconButton from \"@mui/material/IconButton\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport classnames from \"classnames\";\nimport Alert from '@mui/material/Alert';\nimport AlertTitle from '@mui/material/AlertTitle';\n\n\nexport default function Status(props) {\n    \n    const [open,setOpen] = useState(props.open);\n    const [success,setSucces] = useState(props.success);\n    const [operation,setOperation] = useState(props.operation);\n    const [msg,setMsg] = useState(props.msg);\n\n\n    const handleClose = () => {\n        setOpen(false);\n        props.close();\n    }\n\n    function alertMessage(){\n        \n        if(operation === \"toggle\"){\n            if(success === true){\n                return (\n                    <div>\n                        Toggle operation was successful!\n                    </div>\n                )\n            }\n            else{\n                return(\n                    <div>\n                        Toggle operation failed for following nodes!<br/>\n                        <ul class='list-disc'>\n                            {msg.map(id => <li>{id}</li>)}\n                        </ul>\n                    </div>\n                )\n                \n            }\n        }\n        else if(operation === \"dim\"){\n            if(success === true){\n                return (\n                    <div>\n                        Dimming operation was successful!\n                    </div>\n                )\n            }\n            else{\n                return(\n                    <div>\n                        Dimming operation failed for following nodes!<br/>\n                        <ul class='list-disc'>\n                            {msg.map(id => <li>{id}</li>)}\n                        </ul>\n                    </div>\n                )\n                \n            }\n        }\n        else if(operation === \"sync\"){\n            if(success === true){\n                console.log(success,msg,operation)\n                return (\n                    <div>\n                        Sync with auto operation was successful!\n                    </div>\n                )\n            }\n            else{\n                return(\n                    <div>\n                        Sync with auto operation failed for following nodes!<br/>\n                        <ul class='list-disc'>\n                            {msg.map(id => <li>{id}</li>)}\n                        </ul>\n                    </div>\n                )\n            }\n        }\n        else if(operation === \"discover\"){\n            if(success === true){\n                return (\n                    <div>\n                        Discover operation was successful!\n                    </div>\n                )\n            }\n            else{\n                return (\n                    <div>\n                        Discover operation failed!\n                    </div>\n                )\n            }\n        }\n    }\n\n    return (\n        <Snackbar\n            open={open}\n            // autoHideDuration={3000}\n            anchorOrigin ={{vertical:'bottom',horizontal:'right'}}\n            onClose={handleClose}\n        >\n            <Alert \n                severity={success ? \"success\" : \"error\"}\n                color={success ? \"success\" : \"error\"} \n                sx={{ width: '100%',fontSize:20 }}\n                onClose={handleClose}\n            >\n                <AlertTitle sx={{fontWeight:'bold'  }}>{success ? \"Success\" : \"Error\"}</AlertTitle>\n                {alertMessage()}\n            </Alert>\n\n        </Snackbar>\n    )\n    \n}","import { React, useState, useEffect, useRef } from \"react\";\nimport axios from \"axios\";\nimport { Typography, Slider, Button, Tabs, Tab, Box, Dialog,DialogActions,DialogContent,DialogContentText,DialogTitle } from \"@mui/material\";\nimport NodeItem from \"./NodeItem\";\nimport { Link } from \"react-router-dom\";\nimport Checkbox from \"@mui/material/Checkbox\";\nimport CircularProgress from \"@mui/material/CircularProgress\";\nimport { green,yellow } from \"@mui/material/colors\";\nimport {darken} from \"@mui/material/styles\";\nimport url from \"./BaseURL\";\nimport { useNodeContext } from \"../NodeContext\";\nimport PropTypes from \"prop-types\";\nimport LightModeIcon from \"@mui/icons-material/LightMode\";\nimport DarkModeIcon from \"@mui/icons-material/DarkMode\";\nimport { TimeSelecter } from \"./TimeSelecter\";\nimport RemoveCircleIcon from \"@mui/icons-material/RemoveCircle\";\nimport AddCircleIcon from \"@mui/icons-material/AddCircle\";\nimport HourglassBottomIcon from \"@mui/icons-material/HourglassBottom\";\nimport \"./nodes.css\";\nimport classnames from \"classnames\";\nimport Alert from '@mui/material/Alert';\nimport AlertTitle from '@mui/material/AlertTitle';\nimport Fade from \"@mui/material/Fade\";\nimport IconButton from '@mui/material/IconButton';\nimport CloseIcon from '@mui/icons-material/Close';\nimport Stack from '@mui/material/Stack';\nimport DisplayLogs from \"./Logs/DisplayLogs\";\nimport ListOfAllSchedules from \"./Schedules/ListOfSchedules\";\nimport DisplaySettings from \"./Settings/DisplaySettings\";\nimport Home from \"./Home/Home\";\nimport Status from \"./Status\";\n\n\nconst Nodes = () => {\n  const {\n    nodes,\n    global,\n    tabVal,\n    setNodes,\n    setGlobalToggle,\n    setGlobalDim,\n    setInstValues,\n    setGlobalTick,\n  } = useNodeContext();\n  const [loading, setLoading] = useState(false);\n  // loadingOnOff: set true on pressing All On/Off button\n  const [loadingOnOff, setLoadingOnOff] = useState(false);\n  const [syncloading, setSyncloading] = useState(false);\n  const [tab, setTab] = useState(tabVal);\n  // pointerEvent: set true to make all clickable things unclickable. \n  const [pointerEvent, setPointerEvent] = useState(false);\n  const [scheduleStatus, setScheduleStatus] = useState(true);\n  // AlerDialog open or close?\n  const [displaySuccessTab,setDisplaySuccessTab] = useState(false);\n  const [retryAlert,setRetryAlert] = useState(false);\n  const [retryNodes,setRetryNodes] = useState([]);\n  const [displayAlertTab,setDisplayAlertTab] = useState(false);\n  const [failedNodes,setFailedNodes] = useState([]);\n  const [status,setStatus] = useState(false);\n  const [operation,setOperation] = useState('');\n  const [success,setSuccess] = useState(false);\n\n\n\n  const handleChangeTab = (event, newValue) => {\n    setTab(newValue);\n    if(newValue == 1)\n    {\n      axios\n        .get(url + \"toggle/\")\n        .then((res) => {\n          setGlobalToggle(res.data.relay);\n        });\n      axios\n        .get(url + \"dimming/\")\n        .then((res) => {\n          setGlobalDim(res.data.intensity);\n        });\n      axios.get(url + \"getNodes/\").then((res) => {\n        setNodes(res.data.nodes);\n        console.log(res.data.nodes);\n        console.log(nodes);\n      });\n    }\n  };\n\n  const marks = [\n    {\n      value: 25,\n      label: \"25%\",\n    },\n    {\n      value: 50,\n      label: \"50%\",\n    },\n    {\n      value: 75,\n      label: \"75%\",\n    },\n    {\n      value: 100,\n      label: \"100%\",\n    },\n  ];\n\n\n  const handleChange = (event, newValue) => {\n\n    if (newValue !== global.globalValue) {\n      setPointerEvent(true);\n      setLoadingOnOff(true);\n      setStatus(false);\n      setOperation('dim');\n      setFailedNodes([]);\n      axios\n        .put(url + \"dimming/\", {\n          params: { \n            isGlobal: true, \n            value: newValue },\n        })\n        .then((res) => {\n          setGlobalDim(newValue);\n          setLoadingOnOff(false);\n          setPointerEvent(false);\n          \n          if(res.data.operation == false){\n            setRetryAlert(true);\n            setRetryNodes(res.data.nodes);\n            axios.get(url + \"getRetryJobStatus/\",{\n            }).then((res) => {\n              // console.log('Retry job done...')\n              setRetryAlert(false);\n              if(res.data.operation == false){\n                setFailedNodes(res.data.nodes);\n                setSuccess(false);\n                setStatus(true);\n              }\n              else{\n                setSuccess(true);\n                setStatus(true);\n              }\n              axios.get(url + \"getNodes/\").then((res) => {\n                setNodes(res.data.nodes);\n              });\n              \n            })\n          }\n          else{\n              setSuccess(true);\n              setStatus(true);\n              axios.get(url + \"getNodes/\").then((res) => {\n                setNodes(res.data.nodes);\n              });\n          }\n        });\n      \n    }\n  };\n  \n\n  useEffect(() => {\n    if (global.isGlobal === true) {\n      axios\n        .get(url + \"toggle/\")\n        .then((res) => {\n          console.log(res.data.relay)\n          setGlobalToggle(res.data.relay);\n          console.log(nodes);\n        })\n        .catch((error) => console.log(error));\n      axios\n        .get(url + \"dimming/\")\n        .then((res) => {\n          setGlobalDim(res.data.intensity);\n          console.log(nodes);\n        })\n        .catch((error) => console.log(error));\n\n    }\n  }, [global.isGlobal]);\n  useEffect(() => {\n    axios.get(url + \"getNodes/\").then((res) => {\n      setNodes(res.data.nodes);\n      console.log(res.data.nodes);\n      console.log(nodes);\n    })\n    .catch((error) => console.log(error));\n  }, []);\n\n  useEffect(() => {\n    axios\n      .get(url + \"areaName/\")\n      .then((res) => {\n        localStorage.setItem('area_name',JSON.stringify(res.data.area_name));\n      })\n      .catch((error) => console.log(error));\n  }, []);\n\n  const handleButtonClick = () => {\n    if (!loading) {\n      setLoading(true);\n      setStatus(false);\n      setOperation('discover');\n      axios.get(url + \"discover/\",{timeout:60000}).then((res) => {\n        setLoading(false);\n        setNodes(res.data.nodes);\n        setSuccess(true);\n        setStatus(true);\n      }).catch((error) => {\n        setSuccess(false);\n        setStatus(true);\n        setLoading(false);\n      })\n    }\n  };\n\n  function TabPanel(props) {\n    const { children, value, index, ...other } = props;\n\n    return (\n      <div\n        role=\"tabpanel\"\n        hidden={value !== index}\n        id={`simple-tabpanel-${index}`}\n        aria-labelledby={`simple-tab-${index}`}\n        {...other}\n      >\n        {value === index && (\n          <Box sx={{ p: 3 }}>\n            <Typography>{children}</Typography>\n          </Box>\n        )}\n      </div>\n    );\n  }\n\n  TabPanel.propTypes = {\n    children: PropTypes.node,\n    index: PropTypes.number.isRequired,\n    value: PropTypes.number.isRequired,\n  };\n\n  function a11yProps(index) {\n    return {\n      id: `simple-tab-${index}`,\n      \"aria-controls\": `simple-tabpanel-${index}`,\n    };\n  }\n\n  return (\n    // <div className=\"lg:container md:mx-auto mt-8 z-0\">\n    <div className={classnames(\"lg:container md:mx-auto mt-8 z-0\", {\"content-pointer-event-none\": pointerEvent})}>\n      <Dialog\n        open={retryAlert}\n        sx = {{\n          justifyContent: \"flex-start\",\n          alignItems: \"flex-start\",\n          fontSize:16,\n          fontWeight: 'bold',\n        }}\n      >\n        <DialogTitle>\n          {\"Operation failed for following nodes\"}\n        </DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            <ul class='list-disc'>\n              {retryNodes.map(id => <li>{id}</li>)}\n            </ul>\n          </DialogContentText>\n          <br></br>\n          <DialogContentText>\n            <strong>Please Wait</strong>\n          </DialogContentText>\n          <DialogContentText>\n            Retrying automatically in few moments...\n          </DialogContentText>\n            <br></br>\n            <CircularProgress />\n        </DialogContent>\n      </Dialog>\n      {/* <div className=\"flex grid grid-flow-row grid-rows-2 items-center m-2 mx-10\">\n        <div className=\"flex col-span-4 items-center justify-start text-2xl text-primary font-bold bg-gray-200 p-3 rounded-md\">\n          {JSON.parse(localStorage.getItem(\"area_name\"))}\n        </div>\n        <div className=\"flex col-span-4 justify-start text-2xl text-primary font-bold\">\n          {\n            (() => {\n              if(displaySuccessTab == true){\n                return(\n                  <Fade\n                      sx={{ width: 1,fontSize:16, fontWeight: 'bold',}}\n                      in={displaySuccessTab}\n                      timeout={{ enter: 0, exit: 100 }} \n                    >\n                      <Alert \n                        severity=\"success\"\n                        action={\n                          <IconButton\n                            aria-label=\"close\"\n                            color=\"inherit\"\n                            size=\"small\"\n                            onClick={() => {\n                              setDisplaySuccessTab(false);\n                            }}\n                          >\n                            <CloseIcon />\n                          </IconButton>\n                        }\n                      >\n                        <AlertTitle>Success</AlertTitle>\n                        Operation was successful on all Street Lights!\n                      </Alert>\n                    </Fade>\n                )\n              }\n              else if(displayAlertTab == true){\n                return(\n                  <Fade\n                    sx={{ width: 1,fontSize:16, fontWeight: 'bold',}}\n                    in={displayAlertTab}\n                    timeout={{ enter: 0, exit: 0 }} \n                  >\n                    <Alert \n                      severity=\"error\"\n                      action={\n                        <IconButton\n                            aria-label=\"close\"\n                            color=\"inherit\"\n                            size=\"small\"\n                            onClick={() => {\n                              setDisplayAlertTab(false);\n                            }}\n                          >\n                            <CloseIcon />\n                          </IconButton>\n                      }\n                    >\n                        <AlertTitle>Error</AlertTitle>\n                        Operation failed for following lights:\n                        <ul class='list-disc'>\n                          {failedNodes.map(id => <li>{id}</li>)}\n                        </ul>\n                    </Alert>\n                  </Fade>\n                )\n              }\n            })()\n          }\n        </div>\n      </div> */}\n      \n        \n\n      <Box className=\"p-6 m-4 mt-0 pt-0\">\n        <div class=\"flex justify-center items-center bg-gray-200 p-6 mb-4 rounded-2xl shadow-inner\">\n          <span class=\"block text-center text-4xl font-bold uppercase text-black\">{JSON.parse(localStorage.getItem(\"area_name\"))}</span>\n        </div>\n        <Box sx={{ borderBottom: 1, borderColor: \"divider\" }}>\n          <Tabs\n            value={tab}\n            onChange={handleChangeTab}\n            aria-label=\"basic tabs example\"\n            \n            \n          >\n            <Tab label=\"HOME\" {...a11yProps(0)} \n            sx = {{\n              fontWeight: 'bold',\n              fontSize: 22\n            }}\n            />\n            <Tab label=\"MANUAL\" {...a11yProps(1)} \n              sx = {{\n                fontWeight: 'bold',\n                fontSize: 22\n              }}\n            />\n            <Tab label=\"SCHEDULES\" {...a11yProps(2)}\n              sx = {{\n                fontWeight: 'bold',\n                fontSize: 22\n              }}\n             />\n            <Tab label=\"LOGS\" {...a11yProps(3)}\n              sx = {{\n                fontWeight: 'bold',\n                fontSize: 22\n              }}\n            />\n            <Tab label=\"SETTINGS\" {...a11yProps(4)}\n              sx = {{\n                fontWeight: 'bold',\n                fontSize: 22\n              }}\n            />\n          </Tabs>\n        </Box>\n        <TabPanel value={tab} index={0}>\n          <Home />\n          {/* <DarkModeIcon className=\"text-blue-500\" />\n              <span className=\"font-bold text-gray-700\">\n                &nbsp; Sunset Time: &nbsp;\n              </span>\n              <span className=\"p-4 bg-gray-50 rounded-md shadow-md text-white bg-blue-500 font-bold\">\n                {sun.sunset}\n              </span> */}\n              {/* <LightModeIcon className=\"text-yellow-500\" />\n              <span className=\"font-bold text-gray-700\">\n                &nbsp; Sunrise Time: &nbsp;\n              </span>\n              <span className=\"p-4 bg-gray-50 rounded-md shadow-md text-white bg-blue-500 font-bold\">\n                {sun.sunrise}\n              </span> */}\n\n        </TabPanel> \n        <TabPanel value={tab} index={1}>\n          <div className=\"flex grid grid-flow-col grid-cols-12 gap-5 items-center p-4 px-2 bg-blue-200 bg-opacity-25 rounded-md mb-7\">\n            <div className=\"flex items-center col-span-2 justify-start\">\n              <Checkbox\n                checked={global.isGlobal}\n                onChange={() => {\n                  setGlobalTick(!global.isGlobal);\n                }}\n                inputProps={{ \"aria-label\": \"controlled\" }}\n              />\n              <span>\n                <Typography className=\"text-gray-500\">\n                  Global connection &nbsp; &nbsp;\n                </Typography>\n              </span>\n            </div>\n\n            <div className=\"flex col-span-2 items-center justify-center\">\n              <Button\n                size=\"large\"\n                variant=\"contained\"\n                // sx={buttonSx}\n                disabled={loading}\n                onClick={handleButtonClick}\n              >\n                Discover\n                {loading && (\n                  <CircularProgress\n                    color=\"success\"\n                    size={24}\n                    sx={{\n                      position: \"absolute\",\n                      top: \"50%\",\n                      left: \"50%\",\n                      marginTop: \"-12px\",\n                      marginLeft: \"-12px\",\n                    }}\n                  />\n                )}\n              </Button>\n            </div>\n            <div className=\"flex col-span-4 items-center justify-center\">\n              <span>\n                <Typography className=\"text-gray-500\">\n                  Light Intensity &nbsp; &nbsp;\n                </Typography>\n              </span>\n              <span>{/* <AddCircle onClick={handleIncr} /> */}</span>\n              <Slider\n                className=\"ml-2\"\n                disabled={!global.isGlobal || !global.globalStatus}\n                step={null}\n                defaultValue={global.globalValue}\n                marks={marks}\n                min={25}\n                max={100}\n                // to update\n                value={global.globalValue}\n                onChange={handleChange}\n                sx={{\n                  \"& .MuiSlider-mark\": {\n                    height: \"8px\",\n                  },\n                }}\n              ></Slider>\n            </div>\n\n            <div className=\"flex  col-span-2 items-centers justify-center \">\n              <Button\n                size='large'\n                disabled={!global.isGlobal || loadingOnOff}\n                onClick={() => {\n                  setPointerEvent(true);\n                  setLoadingOnOff(true);\n                  setStatus(false);\n                  setOperation('toggle');\n                  setFailedNodes([]);\n                  axios\n                    .put(url + \"toggle/\", {\n                      params: {\n                        isGlobal: true,\n                        status: global.globalStatus ? \"off\" : \"on\",\n                      },\n                    })\n                    .then((res) => {\n                      \n                      setGlobalToggle(!global.globalStatus);\n                      // console.log(nodes);\n                      setPointerEvent(false);\n                      setLoadingOnOff(false);\n                      \n                      console.log(res.data.nodes)\n                      if(res.data.operation == false){\n                        setRetryAlert(true);\n                        setRetryNodes(res.data.nodes);\n                        console.log(retryAlert);\n                        axios.get(url + \"getRetryJobStatus/\",{\n                        }).then((res) => {\n                          // console.log('Retry job done...')\n                          if(res.data.operation == false){\n                            setFailedNodes(res.data.nodes);\n                            setSuccess(false);\n                            setStatus(true);\n                          }\n                          else{\n                            setSuccess(true);\n                            setStatus(true);\n                          }\n                          axios.get(url + \"getNodes/\").then((res) => {\n                            setNodes(res.data.nodes);\n                          });\n                          setRetryAlert(false);\n                        })\n                      }\n                      else{\n                        setSuccess(true);\n                        setStatus(true);\n                        axios.get(url + \"getNodes/\").then((res) => {\n                          setNodes(res.data.nodes);\n                        });\n                      }\n                      \n                      \n                    });\n                  \n                }}\n                color={global.globalStatus ? \"error\" : \"success\"}\n                variant=\"contained\"\n              >\n                Switch All {global.globalStatus ? \"Off\" : \"On\"}\n                {loadingOnOff && (\n                  <CircularProgress\n                    color=\"success\"\n                    size={24}\n                    sx={{\n                      position: \"absolute\",\n                      top: \"50%\",\n                      left: \"50%\",\n                      marginTop: \"-12px\",\n                      marginLeft: \"-12px\",\n                    }}\n                  />\n                )}\n              </Button>\n            </div>\n            <div className=\"flex  col-span-2 items-centers justify-center \">\n              <Button\n                variant=\"contained\"\n                size='large'\n                sx = {{\n                  color:'black',\n                  backgroundColor:'#ffcc00',\n                  ':hover' : {\n                    backgroundColor: darken('#ffcc00', 0.1),\n                  }\n                }}\n                disabled={syncloading || !scheduleStatus || !global.isGlobal}\n                onClick={() => {\n                  setSyncloading(true);\n                  setStatus(false);\n                  setOperation('sync');\n                  setPointerEvent(true);\n                  setFailedNodes([]);\n                  axios.get(url + \"sync/\").then((res) => {\n                    \n                    axios.get(url + \"getRetryJobStatus/\",{\n\n                      }).then((res) => {\n                      // console.log('Retry job done...')\n                        if(res.data.operation == false){\n                          setFailedNodes(res.data.nodes);\n                          setSuccess(false);\n                          setStatus(true);\n                          \n                        }\n                        else{\n                          setSuccess(true);\n                          setStatus(true);\n                          \n                        }\n                        setSyncloading(false);\n                        setPointerEvent(false);\n                        axios.get(url + \"getNodes/\").then((res) => {\n                          setNodes(res.data.nodes);\n                        });\n                        axios\n                          .get(url + \"toggle/\")\n                          .then((res) => {\n                            console.log(res.data.relay)\n                            setGlobalToggle(res.data.relay);\n                            console.log(nodes);\n                          })\n                          .catch((error) => console.log(error));\n                        axios\n                          .get(url + \"dimming/\")\n                          .then((res) => {\n                            setGlobalDim(res.data.intensity);\n                            console.log(nodes);\n                          })\n                          .catch((error) => console.log(error));\n                        });\n\n                  });\n                }}\n              >\n                Sync with Auto\n                {syncloading && (\n                  <CircularProgress\n                    color=\"success\"\n                    size={24}\n                    sx={{\n                      position: \"absolute\",\n                      top: \"50%\",\n                      left: \"50%\",\n                      marginTop: \"-12px\",\n                      marginLeft: \"-12px\",\n                    }}\n                  />\n                )}\n              </Button>\n            </div>\n          </div>\n          <div class=\"overflow-y-auto snap-y\">\n            <Stack spacing={2}>\n              {\n                nodes.map((item) => (\n                  <NodeItem item={item} />\n                ))\n              }\n            </Stack>\n          </div>\n          \n        </TabPanel>\n        <TabPanel value={tab} index={2}>\n          <ListOfAllSchedules />\n        </TabPanel>\n        <TabPanel value={tab} index={3}>\n          <DisplayLogs/>\n        </TabPanel>\n        <TabPanel value={tab} index={4}>\n          <DisplaySettings/>\n        </TabPanel>\n        {status && <Status \n          open={true}\n          close={() => setStatus(false)}\n          operation={operation}\n          msg={failedNodes}\n          success={success}\n        />}\n      </Box>\n      {/* <Box sx={{ width: \"30%\" }}>\n        <Alert className=\"m-8\" severity=\"warning\">\n          Temperature Exceeding- Check it out!\n        </Alert>\n      </Box> */}\n    </div>\n  );\n};\n\nexport default Nodes;\n","import React, { useState, useEffect } from \"react\";\nimport InputLabel from \"@mui/material/InputLabel\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport FormHelperText from \"@mui/material/FormHelperText\";\nimport FormControl from \"@mui/material/FormControl\";\nimport Select from \"@mui/material/Select\";\n\nexport const IntensitySelecter = () => {\n  const [intensity, setIntensity] = useState(100);\n\n  const handleChange = (event) => {\n    setIntensity(event.target.value);\n  };\n\n  return (\n    <div>\n      <FormControl sx={{ m: 1, minWidth: 120 }}>\n        <InputLabel id=\"demo-simple-select-helper-label\">Intensity</InputLabel>\n        <Select\n          labelId=\"demo-simple-select-helper-label\"\n          id=\"demo-simple-select-helper\"\n          value={intensity}\n          label=\"Intensity\"\n          onChange={handleChange}\n        >\n          <MenuItem value={25}>25</MenuItem>\n          <MenuItem value={50}>50</MenuItem>\n          <MenuItem value={75}>75</MenuItem>\n          <MenuItem value={100}>100</MenuItem>\n        </Select>\n      </FormControl>\n    </div>\n  );\n};\n","import React, { useState, useEffect } from \"react\";\nimport { Typography, Button, Switch } from \"@mui/material\";\nimport { useParams } from \"react-router-dom\";\nimport LightModeIcon from '@mui/icons-material/LightMode';\nimport DarkModeIcon from '@mui/icons-material/DarkMode';\nimport axios from \"axios\";\nimport url from \"./BaseURL\";\nimport { TimeSelecter } from \"./TimeSelecter\";\nimport { IntensitySelecter } from \"./IntensitySelecter\";\nimport RemoveCircleIcon from '@mui/icons-material/RemoveCircle';\nimport FormControl from '@mui/material/FormControl';\n\n\nexport const Scheduler = () => {\n\n    const [isToggled, setIsToggled] = useState(false);\n    const { id } = useParams();\n    const [count, setCount] = useState(0);\n\n\n    useEffect(() => {\n        axios.get(url + \"toggle/\", {\n            params: { id: id, status: isToggled ? \"on\" : \"off\" },\n        });\n    }, [isToggled]);\n\n    return (\n        <div className=\"lg:container md:mx-auto mt-8 z-0\">\n            <div className=\"flex grid grid-flow-col grid-cols-6 gap-4 items-center m-8 mx-10 p-4 bg-gray-200 rounded-md  \">\n\n                <div className=\"flex col-span-1 items-center justify-start\">\n                    <Typography className=\"text-lg sm:text-sm text-primary font-bold\">\n                        Auto / Manual  &nbsp; &nbsp;{\" \"}\n                    </Typography>\n                    <Switch\n                        checked={isToggled}\n                        color=\"success\"\n                        onChange={() => setIsToggled(!isToggled)}\n                        inputProps={{ \"aria-label\": \"controlled\" }}\n                    />\n                </div>\n            </div>\n            <div className=\"flex grid grid-flow-col grid-cols-5 gap-4 items-center m-8 mx-10 p-4 bg-gray-200 rounded-md\">\n                <div className=\"flex col-span-1 items-center justify-start p-4 bg-gray-50 rounded-md\">\n                    <LightModeIcon className=\"text-yellow-500\" /><span> &nbsp; &nbsp; Sunrise Time:</span>\n                    <span> &nbsp; &nbsp; 06:00 AM</span>\n                </div>\n\n                <div className=\"flex col-span-1 items-center justify-start p-4 bg-gray-50 rounded-md\">\n                    <DarkModeIcon className=\"text-blue-500\" /><span> &nbsp; &nbsp; Sunset Time:</span>\n                    <span> &nbsp; &nbsp; 06:00 PM</span>\n                </div>\n            </div>\n\n            <div className=\"flex grid grid-flow-col grid-cols-12 gap-4 items-center m-8 mx-10 rounded-md\">\n                <div className=\"flex col-span-3 items-center justify-start mr-14 p-4 bg-gray-200 rounded-md\">\n                    <Typography className=\"text-lg sm:text-sm text-primary font-bold\">For Non-Peak Hours:</Typography>\n                </div>\n                <div className=\"flex col-start-4 col-span-2 items-center justify-center rounded-md\">\n                    <TimeSelecter />\n                </div>\n                <div className=\"flex col-start-6 col-span-2 items-center justify-center rounded-md\">\n                    <IntensitySelecter ></IntensitySelecter>\n                </div>\n                <div className=\"flex col-start-8 col-span-1 items-center justify-center mr-16 rounded-md\">\n                    <RemoveCircleIcon color=\"error\" />\n                </div>\n                <div className=\"flex col-start-10 col-span-2 items-center justify-center rounded-md\">\n                    <Button\n                        onClick={() => {\n                            setCount(count + 1)\n                        }}\n                        color=\"primary\"\n                        variant= \"contained\"\n                    >\n                       Add\n                    </Button>\n\n                </div>\n            </div>\n        </div >\n    )\n}\n","import React, { useState } from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Navbar from \"./components/Navbar\";\nimport StreetNode from \"./components/StreetNode\";\nimport Nodes from \"./components/Nodes\";\nimport { Scheduler } from \"./components/Scheduler\";\n\nfunction App() {\n  return (\n    <Router>\n      <Navbar />\n      <Switch>\n        <Route path=\"/\" exact component={Nodes} />\n        <Route path=\"/node/:id\" component={StreetNode} />\n        <Route path=\"/scheduler\" component={Scheduler}></Route>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { NodeProvider } from \"./NodeContext\";\n\nReactDOM.render(\n  <NodeProvider>\n    <App />\n  </NodeProvider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}