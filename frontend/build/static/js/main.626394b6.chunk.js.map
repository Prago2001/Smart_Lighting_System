{"version":3,"sources":["components/Navbar.js","components/BaseURL.js","Actions.js","NodeReducer.js","NodeContext.js","components/StreetNode.js","components/NodeItem.js","components/TimeSelecter.js","components/Nodes.js","components/IntensitySelecter.js","components/Scheduler.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","fixed","useState","image","message","detailPage","receivedTime","data","className","href","id","icon","header","title","option","text","onClick","console","log","markAsRead","to","URL","SET_NODES","SET_INST_VALUE","SET_IO","SET_GLOBAL_TOGGLE","SET_GLOBAL_DIM","SET_GLOBAL","SET_GLOBAL_TICK","SET_TAB","node_reducer","state","action","type","nodes","payload","total","length","allNodes","obj","find","node","current","curr","temp","global","isGlobal","status","nodeID","IOLine","value","map","relay","globalStatus","dim","feature","globalValue","tab","initialState","localStorage","getItem","JSON","parse","tabVal","NodeContext","React","createContext","NodeProvider","children","useReducer","reducer","dispatch","useEffect","setItem","stringify","Provider","setNodes","setInstValues","setIO","setGlobalToggle","setGlobalDim","setGlobalTick","changeTab","useNodeContext","useContext","useStyles","makeStyles","root","width","StreetNode","useParams","item","graphData","setGraphData","insterval","setInterval","axios","get","url","params","then","res","clearInterval","Typography","Switch","checked","disabled","color","onChange","inputProps","Slider","size","step","defaultValue","valueLabelDisplay","marks","label","min","max","event","newValue","put","height","chartType","loader","options","hAxis","maxValue","minValue","viewWindow","vAxis","colors","legend","position","explorer","axis","aggregationTarget","animation","startup","duration","easing","rootProps","NodeItem","ticked","Grid","container","xs","spacing","TimeSelecter","val","idx","sch","setSch","from","startValue","endValue","LocalizationProvider","dateAdapter","AdapterDateFns","TimePicker","slice","toLocaleString","renderInput","TextField","FormControl","sx","m","minWidth","InputLabel","Select","labelId","i","e","target","MenuItem","Nodes","loading","setLoading","loadingOnOff","setLoadingOnOff","loadingTelemetry","setLoadingTelemetry","syncloading","setSyncloading","applyloading","setApplyloading","setTab","sunrise","sunset","sun","setSun","autoSchedule","setAutoSchedule","pointerEvent","setPointerEvent","telemetryStatus","setTelemetryStatus","scheduleStatus","setScheduleStatus","open","setOpen","buttonSx","bgcolor","green","intensity","schedule","TabPanel","props","index","other","role","hidden","Box","p","a11yProps","classnames","borderBottom","borderColor","Tabs","Tab","s","Button","variant","backgroundColor","CircularProgress","top","left","marginTop","marginLeft","Dialog","onClose","DialogTitle","DialogContent","DialogContentText","DialogActions","autoFocus","post","succ","Checkbox","IntensitySelecter","setIntensity","Scheduler","isToggled","setIsToggled","count","setCount","App","path","exact","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.626394b6.chunk.js","sourcesContent":["import { React, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport EmojiObjectsIcon from \"@mui/icons-material/EmojiObjects\";\nimport Notifications from \"react-notifications-menu\";\n\nfunction Navbar({ fixed }) {\n  const DEFAULT_NOTIFICATION = {\n    image:\n      \"https://t3.ftcdn.net/jpg/01/34/49/84/360_F_134498430_vn2ciA0xKdMnxKIl1oAv4cY6qkybEBnz.webp\",\n    message: \"Temperature Exceeding-Check it out!\",\n    detailPage: \"/nodes\",\n    receivedTime: \"3h ago\",\n  };\n\n  const [data, setData] = useState([DEFAULT_NOTIFICATION]);\n\n  // const [navbarOpen, setNavbarOpen] = React.useState(false);\n  return (\n    <>\n      <nav className=\"sticky top-0 z-99 flex flex-wrap items-center px-2 py-1 bg-gray-700 mb-3\">\n        <div className=\"container px-4 mx-auto flex flex-wrap items-center\">\n          <div className=\"w-full relative flex justify-between lg:w-auto lg:static lg:block lg:justify-start\">\n            <a\n              className=\"justify-start text-sm font-bold leading-relaxed inline-block whitespace-nowrap uppercase text-white\"\n              href=\"#pablo\"\n            >\n              <EmojiObjectsIcon className=\"flex items-center text-xs\" />\n              <span className=\"ml-2\">Light It Up!</span>\n            </a>\n            {/* <button\n              className=\"text-white cursor-pointer text-xl leading-none px-3 py-1 border border-solid border-transparent rounded bg-transparent block lg:hidden outline-none focus:outline-none\"\n              type=\"button\"\n              onClick={() => setNavbarOpen(!navbarOpen)}\n            >\n              <i className=\"fas fa-bars\"></i>\n            </button> */}\n          </div>\n          <div\n            className={\"lg:flex flex-grow items-center\"}\n            id=\"example-navbar-danger\"\n          >\n            <ul className=\"flex flex-col lg:flex-row list-none lg:ml-auto\">\n              <li className=\"nav-item\">\n                <div className=\"px-3 py-2 flex items-center text-sm uppercase font-bold leading-snug text-white hover:opacity-75\">\n                  <Notifications\n                    icon=\"https://assets.ifttt.com/images/channels/651849913/icons/monochrome_large.png\"\n                    data={data}\n                    header={{\n                      title: \"Notifications\",\n                      option: {\n                        text: \"View All\",\n                        onClick: () => console.log(\"Clicked\"),\n                      },\n                    }}\n                    markAsRead={(data) => {\n                      console.log(data);\n                    }}\n                  />\n                </div>\n              </li>\n\n              <li className=\"nav-item\">\n                <Link\n                  to=\"/nodes\"\n                  className=\"px-3 py-2 flex items-center text-sm uppercase font-bold leading-snug text-white hover:opacity-75\"\n                  href=\"#pablo\"\n                >\n                  Area Name |\n                </Link>\n              </li>\n              <li className=\"nav-item\">\n                <Link\n                  className=\"px-3 py-2 flex items-center text-sm uppercase font-bold leading-snug text-white hover:opacity-75\"\n                  href=\"#pablo\"\n                >\n                  LOGOUT\n                </Link>\n              </li>\n            </ul>\n          </div>\n        </div>\n      </nav>\n    </>\n  );\n}\n\nexport default Navbar;\n","export default URL = \"http://0.0.0.0:8000/apis/\";\n","export const SET_NODES = \"SET_NODES\";\nexport const SET_INST_VALUE = \"SET_INST_VALUE\";\nexport const SET_IO = \"SET_IO\";\nexport const SET_GLOBAL_TOGGLE = \"SET_GLOBAL_TOGGLE\";\nexport const SET_GLOBAL_DIM = \"SET_GLOBAL_DIM\";\nexport const SET_GLOBAL = \"SET_GLOBAL\";\nexport const SET_GLOBAL_TICK = \"SET_GLOBAL_TICK\";\nexport const SET_TAB = \"SET_TAB\";\n","import {\n  SET_NODES,\n  SET_INST_VALUE,\n  SET_IO,\n  SET_GLOBAL_TOGGLE,\n  SET_GLOBAL_DIM,\n  SET_GLOBAL,\n  SET_GLOBAL_TICK,\n  SET_TAB,\n} from \"./Actions\";\n\nconst node_reducer = (state, action) => {\n  if (action.type === SET_NODES) {\n    return {\n      ...state,\n      nodes: action.payload.nodes,\n      total: action.payload.nodes.length,\n    };\n  }\n  if (action.type === SET_INST_VALUE) {\n    let allNodes = [...state.nodes];\n\n    let obj = allNodes.find((node) => {\n      return node.id === action.payload.id;\n    });\n    obj.current = action.payload.curr;\n    obj.temp = action.payload.temp;\n    return { ...state, nodes: allNodes, total: allNodes.length };\n  }\n\n  if (action.type === SET_GLOBAL_TICK) {\n    return {\n      ...state,\n      global: { ...state.global, isGlobal: action.payload.status },\n    };\n  }\n  if (action.type === SET_IO) {\n    let allNodes = [...state.nodes];\n    if (state.total > 0) {\n      let obj = allNodes.find((node) => {\n        return node.id === action.payload.nodeID;\n      });\n\n      obj[action.payload.IOLine] = action.payload.value;\n    }\n    return { ...state, nodes: allNodes, total: allNodes.length };\n  }\n  if (action.type === SET_GLOBAL_TOGGLE) {\n    let allNodes = state.nodes;\n    allNodes.map((node) => {\n      node.relay = action.payload.value;\n    });\n    return {\n      ...state,\n      nodes: allNodes,\n      total: allNodes.length,\n      global: { ...state.global, globalStatus: action.payload.value },\n    };\n  }\n  if (action.type === SET_GLOBAL_DIM) {\n    let allNodes = state.nodes;\n    allNodes.map((node) => {\n      node.dim = action.payload.value;\n    });\n    return { ...state, nodes: allNodes, total: allNodes.length };\n  }\n  if (action.type === SET_GLOBAL) {\n    if (action.payload.feature === \"toggle\")\n      return {\n        ...state,\n        global: { ...state.global, isGlobal: action.payload.value },\n      };\n    if (action.payload.feature === \"dim\")\n      return {\n        ...state,\n        global: { ...state.global, globalValue: action.payload.value },\n      };\n  }\n  if (action.type === SET_TAB) {\n    return {\n      ...state,\n      tab: action.payload,\n    };\n  }\n};\n\nexport default node_reducer;\n","import React, { useContext, useReducer, useEffect } from \"react\";\nimport reducer from \"./NodeReducer\";\nimport {\n  SET_NODES,\n  SET_INST_VALUE,\n  SET_IO,\n  SET_GLOBAL_TOGGLE,\n  SET_GLOBAL_DIM,\n  SET_GLOBAL,\n  SET_GLOBAL_TICK,\n  SET_TAB\n} from \"./Actions\";\n\nconst getLocalStorage = () => {\n  let global = localStorage.getItem(\"global\");\n  if (global) return JSON.parse(localStorage.getItem(\"global\"));\n  else return { isGlobal: true, globalValue: 50, globalStatus: true };\n};\n\nconst getTab = () => {\n  let tab = localStorage.getItem(\"tabVal\");\n  if (tab) return localStorage.getItem(\"tabVal\");\n  else return 0;\n};\n\nconst initialState = {\n  nodes: [],\n  total: 0,\n  global: getLocalStorage(),\n  tabVal: getTab(),\n};\n\nconst NodeContext = React.createContext();\n\nexport const NodeProvider = ({ children }) => {\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  const setNodes = (nodes, total) => {\n    dispatch({ type: SET_NODES, payload: { nodes, total } });\n  };\n\n  const setInstValues = (id, curr, temp) => {\n    dispatch({\n      type: SET_INST_VALUE,\n      payload: { id, curr, temp },\n    });\n  };\n\n  const setIO = (nodeID, IOLine, value) => {\n    dispatch({\n      type: SET_IO,\n      payload: { nodeID, IOLine, value },\n    });\n  };\n\n  const setGlobalToggle = (value) => {\n    dispatch({\n      type: SET_GLOBAL_TOGGLE,\n      payload: { value },\n    });\n  };\n\n  const setGlobalDim = (value) => {\n    dispatch({\n      type: SET_GLOBAL_DIM,\n      payload: { value },\n    });\n    dispatch({\n      type: SET_GLOBAL,\n      payload: { value, feature: \"dim\" },\n    });\n  };\n\n  const setGlobalTick = (status) => {\n    dispatch({\n      type: SET_GLOBAL_TICK,\n      payload: { status },\n    });\n  };\n\n  const changeTab = (tab) => {\n    dispatch({\n      type: SET_TAB,\n      payload: { tab },\n    });\n  };\n\n  useEffect(() => {\n    localStorage.setItem(\"global\", JSON.stringify(state.global));\n  }, [state.global]);\n\n  useEffect(() => {\n    localStorage.setItem(\"tab\", state.tabVal);\n  }, [state.tabVal]);\n\n  return (\n    <NodeContext.Provider\n      value={{\n        ...state,\n        setNodes,\n        setInstValues,\n        setIO,\n        setGlobalToggle,\n        setGlobalDim,\n        setGlobalTick,\n        changeTab\n      }}\n    >\n      {children}\n    </NodeContext.Provider>\n  );\n};\n// make sure use\nexport const useNodeContext = () => {\n  return useContext(NodeContext);\n};\n","import React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { Typography, Slider, Switch } from \"@mui/material\";\nimport { makeStyles } from \"@mui/styles\";\nimport FlashOnIcon from \"@mui/icons-material/FlashOn\";\nimport DeviceThermostatIcon from \"@mui/icons-material/DeviceThermostat\";\nimport Chart from \"react-google-charts\";\nimport axios from \"axios\";\nimport url from \"./BaseURL\";\nimport { Link } from \"react-router-dom\";\nimport { useNodeContext } from \"../NodeContext\";\nimport ArrowBackIosNewIcon from \"@mui/icons-material/ArrowBackIosNew\";\n\nconst useStyles = makeStyles({\n  root: {\n    width: 600,\n  },\n});\n\nconst StreetNode = () => {\n  const { id } = useParams();\n  const { nodes, global, setIO, setInstValues } = useNodeContext();\n\n  const item = nodes.find((node) => node.id === id);\n  const classes = useStyles();\n\n  const [graphData, setGraphData] = useState({ curr: [], temp: [] });\n\n  useEffect(() => {\n    const insterval = setInterval(() => {\n      axios\n        .get(url + \"graphValues/\", {\n          params: { id: id },\n        })\n        .then((res) => {\n          setGraphData(res.data);\n          setInstValues(id, res.data.curr[10][1], res.data.temp[10][1]);\n          console.log(res.data);\n        });\n    }, 7000);\n    return () => clearInterval(insterval);\n  }, []);\n\n  const marks = [\n    {\n      value: 25,\n      label: \"25%\",\n    },\n    {\n      value: 50,\n      label: \"50%\",\n    },\n    {\n      value: 75,\n      label: \"75%\",\n    },\n    {\n      value: 100,\n      label: \"100%\",\n    },\n  ];\n\n  return (\n    <div className=\"lg:container md:mx-auto mt-8 z-0\">\n      <div className=\"flex grid grid-flow-col grid-cols-6 gap-4 items-center m-8 mx-10 p-4 bg-gray-200 rounded-md  \">\n        <Link to=\"/\">\n          <ArrowBackIosNewIcon />\n        </Link>\n        <div className=\"flex col-span-5 items-center justify-start text-2xl text-primary font-bold \">\n          {id}\n        </div>\n        <div className=\"flex col-span-1 items-center justify-end\">\n          <Typography className=\"text-lg sm:text-sm text-primary font-bold\">\n            On/Off&nbsp; &nbsp;{\" \"}\n          </Typography>\n          <Switch\n            checked={item.relay}\n            disabled={global.isGlobal}\n            color=\"success\"\n            onChange={() => {\n              axios\n                .get(url + \"toggle/\", {\n                  params: { id: id, status: !item.relay ? \"on\" : \"off\" },\n                })\n                .then((res) => {\n                  setIO(item.id, \"relay\", !item.relay);\n                  console.log(item);\n                });\n            }}\n            inputProps={{ \"aria-label\": \"controlled\" }}\n          />\n        </div>\n      </div>\n      <div className=\"flex z-99 grid grid-flow-col grid-cols-12 gap-4 items-center m-8 mx-10 \">\n        <div className=\"flex col-span-6 items-center bg-blue-200 bg-opacity-25 rounded-md p-6\">\n          <span>\n            <div className=\"text-gray-500 font-bold\">\n              Light Intensity &nbsp; &nbsp;\n            </div>\n          </span>\n          <Slider\n            size=\"large\"\n            className=\"mx-16\"\n            step={null}\n            disabled={global.isGlobal}\n            defaultValue={item.dim}\n            aria-label=\"Default\"\n            valueLabelDisplay=\"auto\"\n            marks={marks}\n            min={25}\n            max={100}\n            value={item.dim}\n            onChange={(event, newValue) => {\n              if (newValue !== item.dim) {\n                axios\n                  .put(url + \"dimming/\", {\n                    params: { id: id, value: newValue },\n                  })\n                  .then((res) => {\n                    setIO(id, \"dim\", newValue);\n                  });\n              }\n            }}\n          ></Slider>\n        </div>\n\n        <div className=\"flex items-center justify-center col-span-3 bg-blue-200 bg-opacity-25 rounded-md py-9 \">\n          <span>\n            <div className=\"text-gray-500 font-bold\">\n              Current flowing &nbsp;\n            </div>\n          </span>\n          <FlashOnIcon className=\"text-yellow-500\" />\n          <Typography className=\"text-gray-600\">\n            {\" \"}\n            &nbsp;{item.current} mA\n          </Typography>\n        </div>\n        <div className=\"flex items-center justify-center col-span-3 bg-blue-200 bg-opacity-25 rounded-md py-9\">\n          <span>\n            <div className=\"text-gray-500 font-bold\">Temperature &nbsp;</div>\n          </span>\n          <DeviceThermostatIcon className=\"text-red-500\" />\n          <Typography className=\"text-gray-600\">\n            {\" \"}\n            &nbsp;{item.temp} &deg; C\n          </Typography>\n        </div>\n      </div>\n\n      <div className=\"flex grid grid-flow-col grid-cols-6 gap-4 items-center justify-center mx-20 \">\n        <div className=\"flex grid items-center justify-center col-span-2 mx-20 \">\n          <Chart\n            width={\"550px\"}\n            height={\"300px\"}\n            chartType=\"LineChart\"\n            loader={<div>Loading Chart</div>}\n            data={[\n              [\"x\", \"light intensity\"],\n              [0, 0],\n              [1, 10],\n              [2, 23],\n              [3, 17],\n              [4, 18],\n              [5, 9],\n              [6, 11],\n              [7, 27],\n              [8, 33],\n              [9, 40],\n              [10, 32],\n              [11, 35],\n            ]}\n            options={{\n              hAxis: {\n                title: \"Time\",\n                maxValue: 15,\n                minValue: 0,\n                viewWindow: {\n                  max: 10,\n                },\n              },\n              vAxis: {\n                title: \"Light Intensity\",\n              },\n              colors: [\"#3366CC\"],\n\n              legend: { position: \"none\" },\n              explorer: { axis: \"horizontal\" },\n              aggregationTarget: \"auto\",\n              animation: {\n                startup: true,\n                duration: 1000,\n                easing: \"linear\",\n              },\n            }}\n            rootProps={{ \"data-testid\": \"1\" }}\n          />\n          <div className=\"flex text-gray-500 font-bold items-center justify-center\">\n            Light Intensity\n          </div>\n        </div>\n        <div className=\"flex grid items-center justify-center col-span-2 mx-20 \">\n          <Chart\n            width={\"550px\"}\n            height={\"300px\"}\n            chartType=\"LineChart\"\n            loader={<div>Loading Chart</div>}\n            data={graphData.curr}\n            options={{\n              hAxis: {\n                title: \"Time\",\n                maxValue: 15,\n                minValue: 0,\n                viewWindow: {\n                  max: 10,\n                },\n              },\n              vAxis: {\n                title: \"Current\",\n              },\n              colors: [\"#F59E0B\"],\n\n              legend: { position: \"none\" },\n              explorer: { axis: \"horizontal\" },\n              aggregationTarget: \"auto\",\n              animation: {\n                startup: true,\n                duration: 1000,\n                easing: \"linear\",\n              },\n            }}\n            rootProps={{ \"data-testid\": \"1\" }}\n          />\n          <div className=\"flex text-gray-500 font-bold items-center justify-center \">\n            Current Flowing\n          </div>\n        </div>\n        <div className=\"flex grid items-center justify-center col-span-2 mx-20 \">\n          <Chart\n            width={\"550px\"}\n            height={\"300px\"}\n            chartType=\"LineChart\"\n            loader={<div>Loading Chart</div>}\n            data={graphData.temp}\n            options={{\n              hAxis: {\n                title: \"Time\",\n                maxValue: 15,\n                minValue: 0,\n                viewWindow: {\n                  max: 10,\n                },\n              },\n              vAxis: {\n                title: \"Temperature\",\n              },\n              colors: [\"#EF4444\"],\n\n              legend: { position: \"none\" },\n              explorer: { axis: \"horizontal\" },\n              aggregationTarget: \"auto\",\n              animation: {\n                startup: true,\n                duration: 1000,\n                easing: \"linear\",\n              },\n            }}\n            rootProps={{ \"data-testid\": \"1\" }}\n          />\n          <div className=\"flex text-gray-500 font-bold items-center justify-center \">\n            Temperature\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default StreetNode;\n","import { React, useState, useEffect } from \"react\";\nimport Switch from \"@mui/material/Switch\";\nimport Typography from \"@mui/material/Typography\";\nimport { Grid } from \"@mui/material\";\nimport Brightness6Icon from \"@mui/icons-material/Brightness6\";\nimport FlashOnIcon from \"@mui/icons-material/FlashOn\";\nimport DeviceThermostatIcon from \"@mui/icons-material/DeviceThermostat\";\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport url from \"./BaseURL\";\nimport { useNodeContext } from \"../NodeContext\";\n\nconst NodeItem = ({ item, ticked }) => {\n  const { global,setIO } = useNodeContext();\n\n  return (\n    <div className=\"flex flex-wrap items-center justify-center shadow-inner hover:shadow-md hover:scale-100 rounded-md bg-blue-100 m-4 p-4 py-8\">\n      <Link to={`/node/${item.id}`}>\n        <div className=\"flex font-bold text-gray-500 text-lg justify-start mr-12 mb-8\">\n          {item.id}\n        </div>\n      </Link>\n      <div className=\"flex justify-end mb-8\">\n        <Switch\n          checked={item.relay}\n          disabled={global.isGlobal}\n          onChange={() => {\n            axios\n              .put(url + \"toggle/\", {\n                params: { id: item.id, status: item.relay ? \"off\" : \"on\" },\n              })\n              .then((res) => {\n                setIO(item.id, \"relay\", !item.relay);\n                console.log(item);\n              });\n          }}\n          inputProps={{ \"aria-label\": \"controlled\" }}\n        />\n      </div>\n      <Grid\n        container\n        xs={12}\n        spacing={3}\n        className=\"flex items-center justify-center\"\n      >\n        <Grid item xs={4} className=\"flex items-center justify-center\">\n          <Brightness6Icon className=\"text-blue-500\" />\n          <Typography className=\"text-gray-600\">&nbsp; {item.dim} %</Typography>\n        </Grid>\n        <Grid item xs={4} className=\"flex items-center justify-center\">\n          <FlashOnIcon className=\"text-yellow-500\" />\n          <Typography className=\"text-gray-600\">\n            &nbsp; {item.current} mA\n          </Typography>\n        </Grid>\n        <Grid item xs={4} className=\"flex items-center justify-center\">\n          <DeviceThermostatIcon className=\"text-red-500\" />\n          <Typography className=\"text-gray-600\">\n            &nbsp; {item.temp} &deg; C\n          </Typography>\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nexport default NodeItem;\n","import React, { useState, useEffect } from \"react\";\nimport TextField from \"@mui/material/TextField\";\nimport AdapterDateFns from \"@mui/lab/AdapterDateFns\";\nimport LocalizationProvider from \"@mui/lab/LocalizationProvider\";\nimport TimePicker from \"@mui/lab/TimePicker\";\nimport InputLabel from \"@mui/material/InputLabel\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport FormControl from \"@mui/material/FormControl\";\nimport Select from \"@mui/material/Select\";\n\nexport const TimeSelecter = ({ val, idx, sch, setSch }) => {\n  const [startValue, setStartValue] = useState(val.from);\n  const [endValue, setEndValue] = useState(val.to);\n\n  return (\n    <div className=\"flex grid grid-flow-col gap-1\">\n      <div className=\"flex items-center justify-start p-4 rounded-md \">\n        <LocalizationProvider className=\"\" dateAdapter={AdapterDateFns}>\n          <TimePicker\n            disabled={idx == 0}\n            label=\"Start Time\"\n            value={startValue}\n            onChange={(newValue) => {\n              setSch([\n                ...sch.slice(0, idx),\n                { ...sch[idx], from: newValue.toLocaleString() },\n                ...sch.slice(idx + 1),\n              ]);\n            }}\n            renderInput={(params) => <TextField {...params} />}\n          />\n        </LocalizationProvider>\n      </div>\n      <div className=\"flex items-center justify-start p-4 rounded-md \">\n        <LocalizationProvider className=\"\" dateAdapter={AdapterDateFns}>\n          <TimePicker\n            disabled={idx == 4}\n            label=\"End Time\"\n            value={endValue}\n            onChange={(newValue) => {\n              setSch([\n                ...sch.slice(0, idx),\n                { ...sch[idx], to: newValue },\n                { ...sch[idx + 1], from: newValue },\n                ...sch.slice(idx + 2),\n              ]);\n              console.log(sch);\n            }}\n            renderInput={(params) => <TextField {...params} />}\n          />\n        </LocalizationProvider>\n      </div>\n      <div className=\"flex items-center justify-start p-4 rounded-md \">\n        <FormControl sx={{ m: 1, minWidth: 120 }}>\n          <InputLabel id=\"demo-simple-select-helper-label\">\n            Intensity\n          </InputLabel>\n          <Select\n            labelId=\"demo-simple-select-helper-label\"\n            id=\"demo-simple-select-helper\"\n            value={sch[idx].i}\n            label=\"Intensity\"\n            onChange={(e) =>\n              setSch([\n                ...sch.slice(0, idx),\n                { ...sch[idx], i: e.target.value },\n                ...sch.slice(idx + 1),\n              ])\n            }\n          >\n            <MenuItem value={25}>25</MenuItem>\n            <MenuItem value={50}>50</MenuItem>\n            <MenuItem value={75}>75</MenuItem>\n            <MenuItem value={100}>100</MenuItem>\n          </Select>\n        </FormControl>\n        {/* <IntensitySelecter /> */}\n      </div>\n    </div>\n  );\n};\n","import { React, useState, useEffect, useRef } from \"react\";\nimport axios from \"axios\";\nimport { Typography, Slider, Button, Tabs, Tab, Box, Dialog,DialogActions,DialogContent,DialogContentText,DialogTitle } from \"@mui/material\";\nimport NodeItem from \"./NodeItem\";\nimport { Link } from \"react-router-dom\";\nimport Checkbox from \"@mui/material/Checkbox\";\nimport CircularProgress from \"@mui/material/CircularProgress\";\nimport { green } from \"@mui/material/colors\";\nimport url from \"./BaseURL\";\nimport { useNodeContext } from \"../NodeContext\";\nimport PropTypes from \"prop-types\";\nimport LightModeIcon from \"@mui/icons-material/LightMode\";\nimport DarkModeIcon from \"@mui/icons-material/DarkMode\";\nimport { TimeSelecter } from \"./TimeSelecter\";\nimport RemoveCircleIcon from \"@mui/icons-material/RemoveCircle\";\nimport AddCircleIcon from \"@mui/icons-material/AddCircle\";\nimport HourglassBottomIcon from \"@mui/icons-material/HourglassBottom\";\nimport \"./nodes.css\";\nimport classnames from \"classnames\";\n\nconst Nodes = () => {\n  const {\n    nodes,\n    global,\n    tabVal,\n    setNodes,\n    setGlobalToggle,\n    setGlobalDim,\n    setInstValues,\n    setGlobalTick,\n  } = useNodeContext();\n  const [loading, setLoading] = useState(false);\n  // loadingOnOff: set true on pressing All On/Off button\n  const [loadingOnOff, setLoadingOnOff] = useState(false);\n  // loadingTelemetry: set true on pressing Telemetry button\n  const [loadingTelemetry, setLoadingTelemetry] = useState(false);\n  const [syncloading, setSyncloading] = useState(false);\n  const [applyloading, setApplyloading] = useState(false);\n  const [tab, setTab] = useState(tabVal);\n  const [sun, setSun] = useState({ sunrise: 0, sunset: 0 });\n  const [autoSchedule, setAutoSchedule] = useState([]);\n  // pointerEvent: set true to make all clickable things unclickable. \n  const [pointerEvent, setPointerEvent] = useState(false);\n  const [telemetryStatus, setTelemetryStatus] = useState(true);\n  const [scheduleStatus, setScheduleStatus] = useState(true);\n  // AlerDialog open or close?\n  const [open, setOpen] = useState(false);\n\n  const handleChangeTab = (event, newValue) => {\n    setTab(newValue);\n  };\n\n  const marks = [\n    {\n      value: 25,\n      label: \"25%\",\n    },\n    {\n      value: 50,\n      label: \"50%\",\n    },\n    {\n      value: 75,\n      label: \"75%\",\n    },\n    {\n      value: 100,\n      label: \"100%\",\n    },\n  ];\n\n  const buttonSx = {\n    ...(loading && {\n      bgcolor: green[700],\n      \"&:hover\": {\n        bgcolor: green[900],\n      },\n    }),\n  };\n\n  const handleChange = (event, newValue) => {\n\n    if (newValue !== global.globalValue) {\n      // current dimming value\n      console.log(newValue);\n      setPointerEvent(true);\n      axios\n        .put(url + \"dimming/\", {\n          params: { \n            isGlobal: true, \n            value: newValue },\n        })\n        .then((res) => {\n          setGlobalDim(newValue);\n          console.log(nodes);\n          setPointerEvent(false);\n        });\n    }\n  };\n  useEffect(() => {\n    axios.get(url + \"getNodes/\").then((res) => {\n      setNodes(res.data.nodes);\n      console.log(res.data.nodes);\n      console.log(nodes);\n    });\n  }, []);\n\n  useEffect(() => {\n    axios\n      .get(url + \"setTelemetry/\",)\n      .then((res) => {\n        console.log(\"useEffect of setTelemetry\");\n        setTelemetryStatus(res.data.status);\n      })\n    if (global.isGlobal === true) {\n      axios\n        .get(url + \"toggle/\", \n        // {\n        //   params: {\n        //     isGlobal: true,\n        //     status: global.globalStatus ? \"on\" : \"off\",\n        //   },\n        // }\n        )\n        .then((res) => {\n          console.log(res.data.relay)\n          // setGlobalToggle(global.globalStatus);\n          setGlobalToggle(res.data.relay);\n          console.log(nodes);\n        });\n      axios\n        .get(url + \"dimming/\", \n        // {\n          // params: { \n          //   isGlobal: true, value: global.globalValue },\n        // }\n        )\n        .then((res) => {\n          // set current value\n          setGlobalDim(res.data.intensity);\n          console.log(nodes);\n        });\n\n    }\n  }, [global.isGlobal]);\n\n  useEffect(() => {\n    axios.get(url + \"activateSchedule/\")\n    .then((res) => {\n      setScheduleStatus(res.data.status);\n    })\n\n    axios.get(url + \"getSchedule/\").then((res) => {\n      console.log(res);\n      setSun({ sunrise: res.data.sunrise, sunset: res.data.sunset });\n      setAutoSchedule(res.data.schedule);\n    });\n  }, []);\n\n  const handleButtonClick = () => {\n    if (!loading) {\n      setLoading(true);\n      axios.get(url + \"discover/\").then((res) => {\n        setLoading(false);\n        setNodes(res.data.nodes);\n      });\n    }\n  };\n\n  function TabPanel(props) {\n    const { children, value, index, ...other } = props;\n\n    return (\n      <div\n        role=\"tabpanel\"\n        hidden={value !== index}\n        id={`simple-tabpanel-${index}`}\n        aria-labelledby={`simple-tab-${index}`}\n        {...other}\n      >\n        {value === index && (\n          <Box sx={{ p: 3 }}>\n            <Typography>{children}</Typography>\n          </Box>\n        )}\n      </div>\n    );\n  }\n\n  TabPanel.propTypes = {\n    children: PropTypes.node,\n    index: PropTypes.number.isRequired,\n    value: PropTypes.number.isRequired,\n  };\n\n  function a11yProps(index) {\n    return {\n      id: `simple-tab-${index}`,\n      \"aria-controls\": `simple-tabpanel-${index}`,\n    };\n  }\n\n  return (\n    // <div className=\"lg:container md:mx-auto mt-8 z-0\">\n    <div className={classnames(\"lg:container md:mx-auto mt-8 z-0\", {\"content-pointer-event-none\": pointerEvent})}>\n      <div className=\"flex grid grid-flow-col grid-cols-6 gap-4 items-center m-8 mx-10 p-6 bg-gray-200 rounded-md  \">\n        <div className=\"flex col-span-4 items-center justify-start text-2xl text-primary font-bold \">\n          Area Name\n        </div>\n      </div>\n      <Box className=\"p-6 m-4\">\n        <Box sx={{ borderBottom: 1, borderColor: \"divider\" }}>\n          <Tabs\n            value={tab}\n            onChange={handleChangeTab}\n            aria-label=\"basic tabs example\"\n          >\n            <Tab label=\"AUTO\" {...a11yProps(0)} />\n            <Tab label=\"MANUAL\" {...a11yProps(1)} />\n          </Tabs>\n        </Box>\n        <TabPanel value={tab} index={0}>\n          <div className=\"flex grid grid-flow-row-dense grid-cols-9 grid-rows-2 gap-4 items-center p-4 bg-blue-200 bg-opacity-25 rounded-md\">\n            <div className=\"flex col-span-3 items-center justify-center p-4 rounded-md \">\n              <LightModeIcon className=\"text-yellow-500\" />\n              <span className=\"font-bold text-gray-700\">\n                &nbsp; Sunrise Time: &nbsp;\n              </span>\n              <span className=\"p-4 bg-gray-50 rounded-md shadow-md text-white bg-blue-500 font-bold\">\n                {sun.sunrise}\n              </span>\n            </div>\n            <div className=\"flex col-span-3 items-center justify-center p-4 rounded-md \">\n              <div className=\"flex col-span-3 items-center justify-start p-4 bg-blue-100 rounded-md\">\n                <HourglassBottomIcon className=\"text-gray-700\" />\n                <span className=\"font-bold text-gray-700\">\n                  &nbsp; For Non-Peak Hours: &nbsp;\n                </span>\n              </div>\n            </div>\n            <div className=\"flex col-span-3 items-center justify-center rounded-md \">\n              <DarkModeIcon className=\"text-blue-500\" />\n              <span className=\"font-bold text-gray-700\">\n                &nbsp; Sunset Time: &nbsp;\n              </span>\n              <span className=\"p-4 bg-gray-50 rounded-md shadow-md text-white bg-blue-500 font-bold\">\n                {sun.sunset}\n              </span>\n            </div>\n\n            {autoSchedule.map((s, idx) => (\n              <div className=\"flex col-start-3 col-span-5 items-center justify-center rounded-md\">\n                <div className=\"flex items-center justify-center rounded-md mr-16\">\n                  <div className=\"flex col-start-3 col-span-5 items-center justify-center rounded-md\">\n                    <div className=\"flex items-center justify-center rounded-md mr-16\">\n                      <TimeSelecter\n                        val={s}\n                        idx={idx}\n                        sch={autoSchedule}\n                        setSch={setAutoSchedule}\n                      />\n                    </div>\n                  </div>\n                  {/* <div className=\"flex col-start-8 col-span-1 items-center justify-center p-4 rounded-md\">\n                  <div className=\"flex items-center justify-center rounded-md mr-16\">\n                    <RemoveCircleIcon className=\"text-red-500\" />\n                  </div>\n                </div> */}\n                </div>\n              </div>\n            ))}\n          </div>\n          <div className=\"flex grid grid-flow-row grid-cols-9 gap-4 grid-rows-1 p-4 bg-blue-200 bg-opacity-25 rounded-md\">\n          <Button\n              className=\"col-start-4 col-span-2\"\n              variant=\"contained\"\n              sx={buttonSx}\n              //disabled={syncloading}\n              backgroundColor=\"red\"\n              onClick={() => {\n                if(scheduleStatus)\n                {\n                  setOpen(true);\n                }\n                else {\n                axios\n                  .put(url + \"activateSchedule/\",{\n                    params: {\n                      status: !scheduleStatus,\n                    },\n                  }\n                  )\n                  .then((res) => {\n                  setScheduleStatus(!scheduleStatus);\n                });\n              }\n              }}\n            >\n              {scheduleStatus ? \"Disable \":\"Enable \"}Schedules\n              {loading && (\n                <CircularProgress\n                  color=\"success\"\n                  size={24}\n                  sx={{\n                    position: \"absolute\",\n                    top: \"50%\",\n                    left: \"50%\",\n                    marginTop: \"-12px\",\n                    marginLeft: \"-12px\",\n                  }}\n                />\n              )}\n            </Button>\n            <Dialog \n              open={open}\n              onClose={() => {setOpen(false)}}\n              aria-labelledby=\"alert-dialog-title\"\n              aria-describedby=\"alert-dialog-description\"\n            >\n              <DialogTitle id=\"alert-dialog-title\">\n                {\"ALERT: Disable Schedules?\"}\n              </DialogTitle>\n              <DialogContent>\n                <DialogContentText id=\"alert-dialog-description\">\n                  System will not follow schedules on disabling schedules.\n                </DialogContentText>\n              </DialogContent>\n              <DialogActions>\n                <Button onClick={() => {setOpen(false)}}>NO</Button>\n                <Button onClick={() => {\n                  axios\n                  .put(url + \"activateSchedule/\",{\n                    params: {\n                      status: !scheduleStatus,\n                    },\n                  }\n                  )\n                  .then((res) => {\n                  setScheduleStatus(!scheduleStatus);\n                  setOpen(false);\n                });\n                }} \n                autoFocus>\n                  YES\n                </Button>\n              </DialogActions>\n            </Dialog>\n            <Button\n              className=\"col-start-6 col-span-2\"\n              variant=\"outlined\"\n              sx={buttonSx}\n              disabled={syncloading || !scheduleStatus}\n              onClick={() => {\n                setSyncloading(true);\n                axios.get(url + \"sync/\").then((res) => {\n                  setSyncloading(false);\n                });\n              }}\n            >\n              Sync with Auto\n              {loading && (\n                <CircularProgress\n                  color=\"success\"\n                  size={24}\n                  sx={{\n                    position: \"absolute\",\n                    top: \"50%\",\n                    left: \"50%\",\n                    marginTop: \"-12px\",\n                    marginLeft: \"-12px\",\n                  }}\n                />\n              )}\n            </Button>\n            <Button\n              className=\"col-start-8 col-span-2\"\n              variant=\"contained\"\n              sx={buttonSx}\n              disabled={applyloading}\n              onClick={() => {\n                //run validation\n                setApplyloading(true);\n                axios\n                  .post(url + \"setSchedule/\", {\n                    schedule: autoSchedule,\n                  })\n                  .then((res) => {\n                    if (res.data.succ == \"done\")\n                      setApplyloading(false);\n                  });\n              }}\n            >\n              Apply Changes\n              {loading && (\n                <CircularProgress\n                  color=\"success\"\n                  size={24}\n                  sx={{\n                    position: \"absolute\",\n                    top: \"50%\",\n                    left: \"50%\",\n                    marginTop: \"-12px\",\n                    marginLeft: \"-12px\",\n                  }}\n                />\n              )}\n            </Button>\n          </div>\n        </TabPanel> \n        <TabPanel value={tab} index={1}>\n          <div className=\"flex grid grid-flow-col grid-cols-13 gap-4 items-center mx-10 p-4 bg-blue-200 bg-opacity-25 rounded-md\">\n            <div className=\"flex items-center col-span-2 justify-start\">\n              <Checkbox\n                checked={global.isGlobal}\n                onChange={() => {\n                  setGlobalTick(!global.isGlobal);\n                }}\n                inputProps={{ \"aria-label\": \"controlled\" }}\n              />\n              <span>\n                <Typography className=\"text-gray-500\">\n                  Global connection &nbsp; &nbsp;\n                </Typography>\n              </span>\n            </div>\n\n            <div className=\"flex col-span-1 items-center justify-end\">\n              <Button\n                variant=\"contained\"\n                sx={buttonSx}\n                disabled={loading}\n                onClick={handleButtonClick}\n              >\n                Discover\n                {loading && (\n                  <CircularProgress\n                    color=\"success\"\n                    size={24}\n                    sx={{\n                      position: \"absolute\",\n                      top: \"50%\",\n                      left: \"50%\",\n                      marginTop: \"-12px\",\n                      marginLeft: \"-12px\",\n                    }}\n                  />\n                )}\n              </Button>\n            </div>\n            <div className=\"flex col-start-6 col-span-4 items-center\">\n              <span>\n                <Typography className=\"text-gray-500\">\n                  Light Intensity &nbsp; &nbsp;\n                </Typography>\n              </span>\n              <span>{/* <AddCircle onClick={handleIncr} /> */}</span>\n              <Slider\n                className=\"ml-2\"\n                disabled={!global.isGlobal}\n                step={null}\n                defaultValue={global.globalValue}\n                marks={marks}\n                min={25}\n                max={100}\n                // to update\n                value={global.globalValue}\n                onChange={handleChange}\n                sx={{\n                  \"& .MuiSlider-mark\": {\n                    height: \"8px\",\n                  },\n                }}\n              ></Slider>\n            </div>\n\n            <div className=\"flex col-start-10 col-span-2 items-centers justify-end \">\n              <Button\n                disabled={!global.isGlobal || loadingOnOff}\n                onClick={() => {\n                  setPointerEvent(true);\n                  setLoadingOnOff(true);\n                  axios\n                    .put(url + \"toggle/\", {\n                      params: {\n                        isGlobal: true,\n                        status: global.globalStatus ? \"off\" : \"on\",\n                      },\n                    })\n                    .then((res) => {\n                      setGlobalToggle(!global.globalStatus);\n                      console.log(nodes);\n                      setPointerEvent(false);\n                      setLoadingOnOff(false);\n                    });\n                }}\n                color={global.globalStatus ? \"success\" : \"error\"}\n                variant={global.globalStatus ? \"contained\" : \"outlined\"}\n              >\n                All On/Off\n                {loadingOnOff && (\n                  <CircularProgress\n                    color=\"success\"\n                    size={24}\n                    sx={{\n                      position: \"absolute\",\n                      top: \"50%\",\n                      left: \"50%\",\n                      marginTop: \"-12px\",\n                      marginLeft: \"-12px\",\n                    }}\n                  />\n                )}\n              </Button>\n            </div>\n\n            <div className=\"flex col-start-13 col-span-2 items-centers \">\n              <Button\n                disabled={loadingTelemetry}\n                onClick={() => {\n                  setPointerEvent(true);\n                  setLoadingTelemetry(true);\n\n                  axios\n                    .put(url + \"setTelemetry/\", {\n                      params: {\n                        status: !telemetryStatus,\n                      },\n                    })\n                    .then((res) => {\n                      setTelemetryStatus(!telemetryStatus);\n                      setPointerEvent(false);\n                      setLoadingTelemetry(false);\n                    });\n\n                  // console.log(\"Hi this is telemetry button\")\n                  // setPointerEvent(false);\n                  // setLoadingTelemetry(false);\n                }}\n                color={telemetryStatus ? \"success\" : \"error\"}\n                variant={telemetryStatus ? \"contained\" : \"outlined\"}\n              >\n                Telemetry\n                {loadingTelemetry && (\n                  <CircularProgress\n                    color=\"success\"\n                    size={24}\n                    sx={{\n                      position: \"absolute\",\n                      top: \"50%\",\n                      left: \"50%\",\n                      marginTop: \"-12px\",\n                      marginLeft: \"-12px\",\n                    }}\n                  />\n                )}\n              </Button>\n            </div>\n          </div>\n          <ul className=\"flex items-center justify-center grid grid-flow-row grid-cols-3 grid-rows-3 gap-4 p-6\">\n            {nodes.map((item) => (\n              <li key={item.id}>\n                <NodeItem item={item} />\n              </li>\n            ))}\n          </ul>\n        </TabPanel>\n      </Box>\n      {/* <Box sx={{ width: \"30%\" }}>\n        <Alert className=\"m-8\" severity=\"warning\">\n          Temperature Exceeding- Check it out!\n        </Alert>\n      </Box> */}\n    </div>\n  );\n};\n\nexport default Nodes;\n","import React, { useState, useEffect } from \"react\";\nimport InputLabel from \"@mui/material/InputLabel\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport FormHelperText from \"@mui/material/FormHelperText\";\nimport FormControl from \"@mui/material/FormControl\";\nimport Select from \"@mui/material/Select\";\n\nexport const IntensitySelecter = () => {\n  const [intensity, setIntensity] = useState(100);\n\n  const handleChange = (event) => {\n    setIntensity(event.target.value);\n  };\n\n  return (\n    <div>\n      <FormControl sx={{ m: 1, minWidth: 120 }}>\n        <InputLabel id=\"demo-simple-select-helper-label\">Intensity</InputLabel>\n        <Select\n          labelId=\"demo-simple-select-helper-label\"\n          id=\"demo-simple-select-helper\"\n          value={intensity}\n          label=\"Intensity\"\n          onChange={handleChange}\n        >\n          <MenuItem value={25}>25</MenuItem>\n          <MenuItem value={50}>50</MenuItem>\n          <MenuItem value={75}>75</MenuItem>\n          <MenuItem value={100}>100</MenuItem>\n        </Select>\n      </FormControl>\n    </div>\n  );\n};\n","import React, { useState, useEffect } from \"react\";\nimport { Typography, Button, Switch } from \"@mui/material\";\nimport { useParams } from \"react-router-dom\";\nimport LightModeIcon from '@mui/icons-material/LightMode';\nimport DarkModeIcon from '@mui/icons-material/DarkMode';\nimport axios from \"axios\";\nimport url from \"./BaseURL\";\nimport { TimeSelecter } from \"./TimeSelecter\";\nimport { IntensitySelecter } from \"./IntensitySelecter\";\nimport RemoveCircleIcon from '@mui/icons-material/RemoveCircle';\nimport FormControl from '@mui/material/FormControl';\n\n\nexport const Scheduler = () => {\n\n    const [isToggled, setIsToggled] = useState(false);\n    const { id } = useParams();\n    const [count, setCount] = useState(0);\n\n\n    useEffect(() => {\n        axios.get(url + \"toggle/\", {\n            params: { id: id, status: isToggled ? \"on\" : \"off\" },\n        });\n    }, [isToggled]);\n\n    return (\n        <div className=\"lg:container md:mx-auto mt-8 z-0\">\n            <div className=\"flex grid grid-flow-col grid-cols-6 gap-4 items-center m-8 mx-10 p-4 bg-gray-200 rounded-md  \">\n\n                <div className=\"flex col-span-1 items-center justify-start\">\n                    <Typography className=\"text-lg sm:text-sm text-primary font-bold\">\n                        Auto / Manual  &nbsp; &nbsp;{\" \"}\n                    </Typography>\n                    <Switch\n                        checked={isToggled}\n                        color=\"success\"\n                        onChange={() => setIsToggled(!isToggled)}\n                        inputProps={{ \"aria-label\": \"controlled\" }}\n                    />\n                </div>\n            </div>\n            <div className=\"flex grid grid-flow-col grid-cols-5 gap-4 items-center m-8 mx-10 p-4 bg-gray-200 rounded-md\">\n                <div className=\"flex col-span-1 items-center justify-start p-4 bg-gray-50 rounded-md\">\n                    <LightModeIcon className=\"text-yellow-500\" /><span> &nbsp; &nbsp; Sunrise Time:</span>\n                    <span> &nbsp; &nbsp; 06:00 AM</span>\n                </div>\n\n                <div className=\"flex col-span-1 items-center justify-start p-4 bg-gray-50 rounded-md\">\n                    <DarkModeIcon className=\"text-blue-500\" /><span> &nbsp; &nbsp; Sunset Time:</span>\n                    <span> &nbsp; &nbsp; 06:00 PM</span>\n                </div>\n            </div>\n\n            <div className=\"flex grid grid-flow-col grid-cols-12 gap-4 items-center m-8 mx-10 rounded-md\">\n                <div className=\"flex col-span-3 items-center justify-start mr-14 p-4 bg-gray-200 rounded-md\">\n                    <Typography className=\"text-lg sm:text-sm text-primary font-bold\">For Non-Peak Hours:</Typography>\n                </div>\n                <div className=\"flex col-start-4 col-span-2 items-center justify-center rounded-md\">\n                    <TimeSelecter />\n                </div>\n                <div className=\"flex col-start-6 col-span-2 items-center justify-center rounded-md\">\n                    <IntensitySelecter ></IntensitySelecter>\n                </div>\n                <div className=\"flex col-start-8 col-span-1 items-center justify-center mr-16 rounded-md\">\n                    <RemoveCircleIcon color=\"error\" />\n                </div>\n                <div className=\"flex col-start-10 col-span-2 items-center justify-center rounded-md\">\n                    <Button\n                        onClick={() => {\n                            setCount(count + 1)\n                        }}\n                        color=\"primary\"\n                        variant= \"contained\"\n                    >\n                       Add\n                    </Button>\n\n                </div>\n            </div>\n        </div >\n    )\n}\n","import React, { useState } from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Navbar from \"./components/Navbar\";\nimport StreetNode from \"./components/StreetNode\";\nimport Nodes from \"./components/Nodes\";\nimport { Scheduler } from \"./components/Scheduler\";\n\nfunction App() {\n  return (\n    <Router>\n      <Navbar />\n      <Switch>\n        <Route path=\"/\" exact component={Nodes} />\n        <Route path=\"/node/:id\" component={StreetNode} />\n        <Route path=\"/scheduler\" component={Scheduler}></Route>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { NodeProvider } from \"./NodeContext\";\n\nReactDOM.render(\n  <NodeProvider>\n    <App />\n  </NodeProvider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}